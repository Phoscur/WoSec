/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['src/SVGUtility.js']) {
  _$jscoverage['src/SVGUtility.js'] = [];
  _$jscoverage['src/SVGUtility.js'][5] = 0;
  _$jscoverage['src/SVGUtility.js'][6] = 0;
  _$jscoverage['src/SVGUtility.js'][10] = 0;
  _$jscoverage['src/SVGUtility.js'][13] = 0;
  _$jscoverage['src/SVGUtility.js'][16] = 0;
  _$jscoverage['src/SVGUtility.js'][17] = 0;
  _$jscoverage['src/SVGUtility.js'][18] = 0;
  _$jscoverage['src/SVGUtility.js'][19] = 0;
  _$jscoverage['src/SVGUtility.js'][20] = 0;
  _$jscoverage['src/SVGUtility.js'][21] = 0;
  _$jscoverage['src/SVGUtility.js'][22] = 0;
  _$jscoverage['src/SVGUtility.js'][24] = 0;
  _$jscoverage['src/SVGUtility.js'][27] = 0;
  _$jscoverage['src/SVGUtility.js'][28] = 0;
  _$jscoverage['src/SVGUtility.js'][29] = 0;
  _$jscoverage['src/SVGUtility.js'][32] = 0;
  _$jscoverage['src/SVGUtility.js'][33] = 0;
  _$jscoverage['src/SVGUtility.js'][34] = 0;
  _$jscoverage['src/SVGUtility.js'][38] = 0;
  _$jscoverage['src/SVGUtility.js'][39] = 0;
  _$jscoverage['src/SVGUtility.js'][40] = 0;
  _$jscoverage['src/SVGUtility.js'][44] = 0;
  _$jscoverage['src/SVGUtility.js'][51] = 0;
  _$jscoverage['src/SVGUtility.js'][52] = 0;
  _$jscoverage['src/SVGUtility.js'][53] = 0;
  _$jscoverage['src/SVGUtility.js'][55] = 0;
  _$jscoverage['src/SVGUtility.js'][56] = 0;
  _$jscoverage['src/SVGUtility.js'][58] = 0;
  _$jscoverage['src/SVGUtility.js'][63] = 0;
  _$jscoverage['src/SVGUtility.js'][64] = 0;
  _$jscoverage['src/SVGUtility.js'][70] = 0;
  _$jscoverage['src/SVGUtility.js'][78] = 0;
  _$jscoverage['src/SVGUtility.js'][79] = 0;
  _$jscoverage['src/SVGUtility.js'][80] = 0;
  _$jscoverage['src/SVGUtility.js'][84] = 0;
  _$jscoverage['src/SVGUtility.js'][85] = 0;
  _$jscoverage['src/SVGUtility.js'][86] = 0;
  _$jscoverage['src/SVGUtility.js'][87] = 0;
  _$jscoverage['src/SVGUtility.js'][90] = 0;
  _$jscoverage['src/SVGUtility.js'][96] = 0;
  _$jscoverage['src/SVGUtility.js'][97] = 0;
  _$jscoverage['src/SVGUtility.js'][98] = 0;
  _$jscoverage['src/SVGUtility.js'][104] = 0;
  _$jscoverage['src/SVGUtility.js'][105] = 0;
  _$jscoverage['src/SVGUtility.js'][106] = 0;
  _$jscoverage['src/SVGUtility.js'][108] = 0;
  _$jscoverage['src/SVGUtility.js'][114] = 0;
  _$jscoverage['src/SVGUtility.js'][115] = 0;
  _$jscoverage['src/SVGUtility.js'][116] = 0;
  _$jscoverage['src/SVGUtility.js'][118] = 0;
  _$jscoverage['src/SVGUtility.js'][124] = 0;
  _$jscoverage['src/SVGUtility.js'][125] = 0;
  _$jscoverage['src/SVGUtility.js'][126] = 0;
  _$jscoverage['src/SVGUtility.js'][128] = 0;
  _$jscoverage['src/SVGUtility.js'][135] = 0;
  _$jscoverage['src/SVGUtility.js'][136] = 0;
  _$jscoverage['src/SVGUtility.js'][137] = 0;
  _$jscoverage['src/SVGUtility.js'][139] = 0;
  _$jscoverage['src/SVGUtility.js'][146] = 0;
  _$jscoverage['src/SVGUtility.js'][147] = 0;
  _$jscoverage['src/SVGUtility.js'][148] = 0;
  _$jscoverage['src/SVGUtility.js'][149] = 0;
  _$jscoverage['src/SVGUtility.js'][151] = 0;
  _$jscoverage['src/SVGUtility.js'][158] = 0;
  _$jscoverage['src/SVGUtility.js'][159] = 0;
  _$jscoverage['src/SVGUtility.js'][160] = 0;
  _$jscoverage['src/SVGUtility.js'][161] = 0;
  _$jscoverage['src/SVGUtility.js'][163] = 0;
  _$jscoverage['src/SVGUtility.js'][166] = 0;
  _$jscoverage['src/SVGUtility.js'][174] = 0;
  _$jscoverage['src/SVGUtility.js'][175] = 0;
  _$jscoverage['src/SVGUtility.js'][176] = 0;
  _$jscoverage['src/SVGUtility.js'][177] = 0;
  _$jscoverage['src/SVGUtility.js'][178] = 0;
  _$jscoverage['src/SVGUtility.js'][179] = 0;
  _$jscoverage['src/SVGUtility.js'][180] = 0;
  _$jscoverage['src/SVGUtility.js'][181] = 0;
  _$jscoverage['src/SVGUtility.js'][183] = 0;
  _$jscoverage['src/SVGUtility.js'][184] = 0;
  _$jscoverage['src/SVGUtility.js'][185] = 0;
  _$jscoverage['src/SVGUtility.js'][186] = 0;
  _$jscoverage['src/SVGUtility.js'][188] = 0;
  _$jscoverage['src/SVGUtility.js'][189] = 0;
  _$jscoverage['src/SVGUtility.js'][192] = 0;
  _$jscoverage['src/SVGUtility.js'][200] = 0;
  _$jscoverage['src/SVGUtility.js'][201] = 0;
  _$jscoverage['src/SVGUtility.js'][205] = 0;
  _$jscoverage['src/SVGUtility.js'][206] = 0;
  _$jscoverage['src/SVGUtility.js'][207] = 0;
  _$jscoverage['src/SVGUtility.js'][210] = 0;
}
_$jscoverage['src/SVGUtility.js'].source = ["<span class=\"c\">/**</span>","<span class=\"c\"> * Singleton (UtilityKlasse), das Funktionalit&#195;&#164;t zur Verwaltung von SVG-Elementen bereitstellt;</span>","<span class=\"c\"> * erstellt SVGRectangles.</span>","<span class=\"c\"> */</span>","WoSec<span class=\"k\">.</span>svgUtility <span class=\"k\">=</span> <span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t<span class=\"k\">var</span> CSS_ID_COLORSTORE <span class=\"k\">=</span> <span class=\"s\">'color-store'</span>","\t<span class=\"k\">,</span>\tCSS_ID_COLORSTORE_UNOBTRUSIVE_COLOR <span class=\"k\">=</span> <span class=\"s\">'rect-unobtrusive'</span>","\t<span class=\"k\">,</span>   CSS_ID_COLORSTORE_OBTRUSIVE_COLOR <span class=\"k\">=</span> <span class=\"s\">'rect-obtrusive'</span>","\t<span class=\"k\">,</span>   CSS_ID_COLORSTORE_RESET_COLOR <span class=\"k\">=</span> <span class=\"s\">'rect-reset'</span><span class=\"k\">;</span>","\t<span class=\"k\">var</span> ANIMATION_IMAGE_PATH <span class=\"k\">=</span> <span class=\"s\">\"media/images/fileicon.png\"</span> <span class=\"c\">// {width: 34, height: 44}</span>","\t<span class=\"k\">,</span>\tANIMATION_IMAGE_SIZE <span class=\"k\">=</span> <span class=\"k\">{</span>width<span class=\"k\">:</span> <span class=\"s\">25.5</span><span class=\"k\">,</span> height<span class=\"k\">:</span> <span class=\"s\">33</span><span class=\"k\">}</span><span class=\"k\">;</span>","\t","\t<span class=\"k\">var</span> $ <span class=\"k\">=</span> jQuery<span class=\"k\">;</span>","\t","    ","    <span class=\"k\">var</span> animationPrototype<span class=\"k\">;</span>","\t<span class=\"k\">function</span> getAnimationPrototype<span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">if</span> <span class=\"k\">(!</span>animationPrototype<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\tanimationPrototype <span class=\"k\">=</span> document<span class=\"k\">.</span>createElementNS<span class=\"k\">(</span><span class=\"s\">'http://www.w3.org/2000/svg'</span><span class=\"k\">,</span> <span class=\"s\">\"image\"</span><span class=\"k\">);</span>","\t\t\tanimationPrototype<span class=\"k\">.</span>setAttributeNS<span class=\"k\">(</span><span class=\"s\">\"http://www.w3.org/1999/xlink\"</span><span class=\"k\">,</span><span class=\"s\">\"xlink:href\"</span><span class=\"k\">,</span> ANIMATION_IMAGE_PATH<span class=\"k\">);</span>","\t\t\tanimationPrototype<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span><span class=\"s\">\"width\"</span><span class=\"k\">,</span> ANIMATION_IMAGE_SIZE<span class=\"k\">.</span>width<span class=\"k\">);</span>","\t\t\tanimationPrototype<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span><span class=\"s\">\"height\"</span><span class=\"k\">,</span> ANIMATION_IMAGE_SIZE<span class=\"k\">.</span>height<span class=\"k\">);</span>","\t\t<span class=\"k\">}</span>","\t\t<span class=\"k\">return</span> animationPrototype<span class=\"k\">;</span>","\t<span class=\"k\">}</span>","","    <span class=\"k\">function</span> getJQuerySVGRectanglesByActivityID<span class=\"k\">(</span>activityID<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> $<span class=\"k\">(</span><span class=\"s\">'svg rect'</span><span class=\"k\">).</span>filter<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> $<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>attr<span class=\"k\">(</span><span class=\"s\">'bpmn:activity-id'</span><span class=\"k\">)</span> <span class=\"k\">==</span> activityID<span class=\"k\">;</span><span class=\"c\">// &amp;&amp; $(this).attr('fill') == 'white';</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","\t<span class=\"k\">function</span> getCircles<span class=\"k\">(</span>activityID<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> $<span class=\"k\">(</span><span class=\"s\">'svg circle'</span><span class=\"k\">).</span>filter<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> $<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>attr<span class=\"k\">(</span><span class=\"s\">'bpmn:activity-id'</span><span class=\"k\">)</span> <span class=\"k\">==</span> activityID<span class=\"k\">;</span><span class=\"c\">// &amp;&amp; $(this).attr('fill') == 'white';</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","\t<span class=\"k\">}</span>","","    <span class=\"k\">function</span> getJQuerySVGRectanglesByActivityGroupID<span class=\"k\">(</span>activityGroupID<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> $<span class=\"k\">(</span><span class=\"s\">'svg rect'</span><span class=\"k\">).</span>filter<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> $<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>attr<span class=\"k\">(</span><span class=\"s\">'bpmn:pool-id'</span><span class=\"k\">)</span> <span class=\"k\">==</span> activityGroupID<span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","    ","    <span class=\"k\">return</span> <span class=\"k\">{</span>","\t\t<span class=\"c\">/**</span>","<span class=\"c\">\t\t * Bietet Zugriff und Manipulationsm&#195;&#182;glichkeiten auf ein Task-Rechteck im SVG.</span>","<span class=\"c\">\t\t * @param {String} activityID</span>","<span class=\"c\">\t\t * @return {SVGRectangle} neues SVGRechteck</span>","<span class=\"c\">\t\t */</span>","        getTaskRectangle<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>activityID<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> rectangles <span class=\"k\">=</span> getJQuerySVGRectanglesByActivityID<span class=\"k\">(</span>activityID<span class=\"k\">);</span>","\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>rectangles<span class=\"k\">.</span>length <span class=\"k\">==</span> <span class=\"s\">0</span><span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"c\">// couldn't find rectangles, try circles (\"start\"-task)</span>","\t\t\t\trectangles <span class=\"k\">=</span> getCircles<span class=\"k\">(</span>activityID<span class=\"k\">);</span>","\t\t\t<span class=\"k\">}</span>","\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>rectangles<span class=\"k\">.</span>length <span class=\"k\">==</span> <span class=\"s\">0</span><span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">throw</span> <span class=\"k\">new</span> Error<span class=\"k\">(</span><span class=\"s\">\"No rectangles/circles with activityID:[\"</span> <span class=\"k\">+</span> activityID <span class=\"k\">+</span> <span class=\"s\">\"] found\"</span><span class=\"k\">);</span>","\t\t\t<span class=\"k\">}</span>","            <span class=\"k\">var</span> that <span class=\"k\">=</span> Object<span class=\"k\">.</span>create<span class=\"k\">(</span>WoSec<span class=\"k\">.</span>baseObject<span class=\"k\">);</span>","\t\t\t<span class=\"c\">/**</span>","<span class=\"c\">\t\t\t * Gibt die Position des Rechtecks zur&#195;&#188;ck.</span>","<span class=\"c\">\t\t\t * @return {Object} Position mit x,y,width und height- Eigenschaften (Integer), sowie getCenter()-Methode, welche den Mittelpunkt des Rechtecks zur&#195;&#188;ck gibt</span>","<span class=\"c\">\t\t\t */</span>","\t\t\tthat<span class=\"k\">.</span>getPosition <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">return</span> <span class=\"k\">{</span>","\t\t\t\t\tx<span class=\"k\">:</span> parseInt<span class=\"k\">(</span>$<span class=\"k\">(</span>rectangles<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]).</span>attr<span class=\"k\">(</span><span class=\"s\">\"x\"</span><span class=\"k\">)),</span>","\t\t\t\t\ty<span class=\"k\">:</span> parseInt<span class=\"k\">(</span>$<span class=\"k\">(</span>rectangles<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]).</span>attr<span class=\"k\">(</span><span class=\"s\">\"y\"</span><span class=\"k\">)),</span>","\t\t\t\t\twidth<span class=\"k\">:</span> parseInt<span class=\"k\">(</span>$<span class=\"k\">(</span>rectangles<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]).</span>attr<span class=\"k\">(</span><span class=\"s\">\"width\"</span><span class=\"k\">)),</span>","\t\t\t\t\theight<span class=\"k\">:</span> parseInt<span class=\"k\">(</span>$<span class=\"k\">(</span>rectangles<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]).</span>attr<span class=\"k\">(</span><span class=\"s\">\"height\"</span><span class=\"k\">)),</span>","\t\t\t\t\tgetCenter<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t\t\t\t\t<span class=\"k\">return</span> <span class=\"k\">{</span>","\t\t\t\t\t\t\tx<span class=\"k\">:</span> <span class=\"k\">this</span><span class=\"k\">.</span>x <span class=\"k\">+</span> <span class=\"k\">this</span><span class=\"k\">.</span>width<span class=\"k\">/</span><span class=\"s\">2</span><span class=\"k\">,</span>","\t\t\t\t\t\t\ty<span class=\"k\">:</span> <span class=\"k\">this</span><span class=\"k\">.</span>y <span class=\"k\">+</span> <span class=\"k\">this</span><span class=\"k\">.</span>height<span class=\"k\">/</span><span class=\"s\">2</span>","\t\t\t\t\t\t<span class=\"k\">}</span><span class=\"k\">;</span>","\t\t\t\t\t<span class=\"k\">}</span>","\t\t\t\t<span class=\"k\">}</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">;</span>","\t\t\t","\t\t\t<span class=\"k\">var</span> texts <span class=\"k\">=</span> $<span class=\"k\">(</span><span class=\"s\">\"svg text\"</span><span class=\"k\">).</span>filter<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">var</span> pos <span class=\"k\">=</span> that<span class=\"k\">.</span>getPosition<span class=\"k\">();</span>","\t\t\t\t<span class=\"k\">return</span> Math<span class=\"k\">.</span>abs<span class=\"k\">(</span>parseInt<span class=\"k\">(</span>$<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>attr<span class=\"k\">(</span><span class=\"s\">'x'</span><span class=\"k\">))</span> <span class=\"k\">-</span> pos<span class=\"k\">.</span>x<span class=\"k\">)</span> <span class=\"k\">&lt;</span> pos<span class=\"k\">.</span>width","\t\t\t\t    <span class=\"k\">&amp;&amp;</span> Math<span class=\"k\">.</span>abs<span class=\"k\">(</span>parseInt<span class=\"k\">(</span>$<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>attr<span class=\"k\">(</span><span class=\"s\">'y'</span><span class=\"k\">))</span> <span class=\"k\">-</span> pos<span class=\"k\">.</span>y<span class=\"k\">)</span> <span class=\"k\">&lt;</span> pos<span class=\"k\">.</span>height<span class=\"k\">;</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t\t\t","\t\t\t<span class=\"k\">function</span> adjustPositionForAnimation<span class=\"k\">(</span>position<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\tposition<span class=\"k\">.</span>x <span class=\"k\">-=</span> ANIMATION_IMAGE_SIZE<span class=\"k\">.</span>width<span class=\"k\">/</span><span class=\"s\">2</span><span class=\"k\">;</span>","\t\t\t\tposition<span class=\"k\">.</span>y <span class=\"k\">-=</span> ANIMATION_IMAGE_SIZE<span class=\"k\">.</span>height<span class=\"k\">/</span><span class=\"s\">2</span><span class=\"k\">;</span>","\t\t\t\t<span class=\"k\">return</span> position<span class=\"k\">;</span>","\t\t\t<span class=\"k\">}</span>","\t\t\t","\t\t\t<span class=\"k\">var</span> animation <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>createAnimation<span class=\"k\">(</span>activityID<span class=\"k\">,</span> adjustPositionForAnimation<span class=\"k\">(</span>that<span class=\"k\">.</span>getPosition<span class=\"k\">().</span>getCenter<span class=\"k\">()));</span>","\t\t\t<span class=\"c\">/**</span>","<span class=\"c\">\t\t\t * Zeigt eine Datenanimation zwischen zwei Tasks</span>","<span class=\"c\">\t\t\t * @param {Task} Ziel-Task</span>","<span class=\"c\">\t\t\t * @return {SVGRectangle} self</span>","<span class=\"c\">\t\t\t */</span>","\t\t\tthat<span class=\"k\">.</span>showAnimation <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>task<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\tanimation<span class=\"k\">.</span>show<span class=\"k\">(</span>adjustPositionForAnimation<span class=\"k\">(</span>task<span class=\"k\">.</span>getPosition<span class=\"k\">().</span>getCenter<span class=\"k\">()));</span>","\t\t\t\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","\t\t\t<span class=\"k\">}</span>","\t\t\t<span class=\"c\">/**</span>","<span class=\"c\">\t\t\t * Hebt das Rechteck hervor</span>","<span class=\"c\">\t\t\t * @return {SVGRectangle} self</span>","<span class=\"c\">\t\t\t */</span>","            that<span class=\"k\">.</span>highlight <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                rectangles<span class=\"k\">.</span>each<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t\t\t\t$<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>effect<span class=\"k\">(</span><span class=\"s\">'pulsate'</span><span class=\"k\">,</span> <span class=\"k\">{</span> times<span class=\"k\">:</span><span class=\"s\">3</span> <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"s\">1000</span><span class=\"k\">);</span>","\t\t\t\t<span class=\"k\">}</span><span class=\"k\">)</span>","\t            <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","            <span class=\"k\">}</span><span class=\"k\">;</span>","\t\t\t<span class=\"c\">/**</span>","<span class=\"c\">\t\t\t * F&#195;&#164;rbt das Rechteck in einer auff&#195;&#164;lligen Farbe.</span>","<span class=\"c\">\t\t\t * @return {SVGRectangle} self</span>","<span class=\"c\">\t\t\t */</span>","            that<span class=\"k\">.</span>markObtrusive <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                rectangles<span class=\"k\">.</span>each<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t\t\t\t$<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>attr<span class=\"k\">(</span><span class=\"s\">'fill'</span><span class=\"k\">,</span> $<span class=\"k\">(</span><span class=\"s\">'#'</span><span class=\"k\">+</span>CSS_ID_COLORSTORE_OBTRUSIVE_COLOR<span class=\"k\">).</span>css<span class=\"k\">(</span><span class=\"s\">'color'</span><span class=\"k\">));</span>","\t\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","                <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","            <span class=\"k\">}</span><span class=\"k\">;</span>","\t\t\t<span class=\"c\">/**</span>","<span class=\"c\">\t\t\t * F&#195;&#164;rbt das Rechteck in einer unauff&#195;&#164;lligen Farbe.</span>","<span class=\"c\">\t\t\t * @return {SVGRectangle} self</span>","<span class=\"c\">\t\t\t */</span>","            that<span class=\"k\">.</span>markUnobtrusive <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                rectangles<span class=\"k\">.</span>each<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                    $<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>attr<span class=\"k\">(</span><span class=\"s\">'fill'</span><span class=\"k\">,</span> $<span class=\"k\">(</span><span class=\"s\">'#'</span><span class=\"k\">+</span>CSS_ID_COLORSTORE_UNOBTRUSIVE_COLOR<span class=\"k\">).</span>css<span class=\"k\">(</span><span class=\"s\">'color'</span><span class=\"k\">));</span>","                <span class=\"k\">}</span><span class=\"k\">);</span>","                <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","            <span class=\"k\">}</span><span class=\"k\">;</span>","\t\t\t","\t\t\t<span class=\"c\">/**</span>","<span class=\"c\">\t\t\t * Setzt das Rechteck zur&#195;&#188;ck (farblich)</span>","<span class=\"c\">\t\t\t * @return {SVGRectangle} self</span>","<span class=\"c\">\t\t\t */</span>","\t\t\tthat<span class=\"k\">.</span>reset <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t\t\trectangles<span class=\"k\">.</span>each<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                    $<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>attr<span class=\"k\">(</span><span class=\"s\">'fill'</span><span class=\"k\">,</span> $<span class=\"k\">(</span><span class=\"s\">'#'</span><span class=\"k\">+</span>CSS_ID_COLORSTORE_RESET_COLOR<span class=\"k\">).</span>css<span class=\"k\">(</span><span class=\"s\">'color'</span><span class=\"k\">));</span>","                <span class=\"k\">}</span><span class=\"k\">);</span>","                <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","            <span class=\"k\">}</span><span class=\"k\">;</span>","\t\t\t<span class=\"c\">/**</span>","<span class=\"c\">\t\t\t * Registriert Eventhandler f&#195;&#188;r das OnClick-Event des Rechtecks.</span>","<span class=\"c\">\t\t\t * @param {Function} handler Der zu bindende Eventhandler</span>","<span class=\"c\">\t\t\t * @return {SVGRectangle} self</span>","<span class=\"c\">\t\t\t */</span>","\t\t\tthat<span class=\"k\">.</span>registerOnClick <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>handler<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t$<span class=\"k\">(</span>rectangles<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]).</span>click<span class=\"k\">(</span>handler<span class=\"k\">);</span>","                texts<span class=\"k\">.</span>each<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                    $<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>click<span class=\"k\">(</span>handler<span class=\"k\">);</span>","                <span class=\"k\">}</span><span class=\"k\">)</span>","\t\t\t\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">;</span>","\t\t\t<span class=\"c\">/**</span>","<span class=\"c\">\t\t\t * Registriert Eventhandler f&#195;&#188;r as OnHover-Event des Rechtecks.</span>","<span class=\"c\">\t\t\t * @param {Function} handler Der zu bindende Eventhandler</span>","<span class=\"c\">\t\t\t * @return {SVGRectangle} self</span>","<span class=\"c\">\t\t\t */</span>","\t\t\tthat<span class=\"k\">.</span>registerOnHover <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>handler<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t$<span class=\"k\">(</span>rectangles<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]).</span>hover<span class=\"k\">(</span>handler<span class=\"k\">);</span>","\t\t\t\ttexts<span class=\"k\">.</span>each<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t\t\t\t$<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>hover<span class=\"k\">(</span>handler<span class=\"k\">);</span>","\t\t\t\t<span class=\"k\">}</span><span class=\"k\">)</span>","\t\t\t\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">;</span>","\t\t\t","            <span class=\"k\">return</span> that<span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","\t\t<span class=\"c\">/**</span>","<span class=\"c\">\t\t * Erstellt neue Animation mit show(endPosition)-Methode.</span>","<span class=\"c\">\t\t * @param {String} id</span>","<span class=\"c\">\t\t * @param {Object} position</span>","<span class=\"c\">\t\t */</span>","\t\tcreateAnimation<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>id<span class=\"k\">,</span> position<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">var</span> that <span class=\"k\">=</span> Object<span class=\"k\">.</span>create<span class=\"k\">(</span>WoSec<span class=\"k\">.</span>baseObject<span class=\"k\">);</span>","\t\t\t<span class=\"k\">var</span> icon <span class=\"k\">=</span> getAnimationPrototype<span class=\"k\">().</span>cloneNode<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">);</span>","\t\t\ticon<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span><span class=\"s\">\"id\"</span><span class=\"k\">,</span> id<span class=\"k\">);</span>","\t\t\t$<span class=\"k\">(</span><span class=\"s\">'svg'</span><span class=\"k\">)[</span><span class=\"s\">0</span><span class=\"k\">].</span>appendChild<span class=\"k\">(</span>icon<span class=\"k\">);</span>","\t\t\t<span class=\"k\">var</span> jQueryIcon <span class=\"k\">=</span> $<span class=\"k\">(</span><span class=\"s\">\"#\"</span><span class=\"k\">+</span>id<span class=\"k\">);</span>","\t\t\tjQueryIcon<span class=\"k\">.</span>hide<span class=\"k\">();</span>","\t\t\tjQueryIcon<span class=\"k\">.</span>attr<span class=\"k\">(</span><span class=\"s\">\"x\"</span><span class=\"k\">,</span> position<span class=\"k\">.</span>x<span class=\"k\">);</span>","\t\t\tjQueryIcon<span class=\"k\">.</span>attr<span class=\"k\">(</span><span class=\"s\">\"y\"</span><span class=\"k\">,</span> position<span class=\"k\">.</span>y<span class=\"k\">);</span>","\t\t\t","\t\t\tthat<span class=\"k\">.</span>show <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>endPosition<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\tjQueryIcon<span class=\"k\">.</span>show<span class=\"k\">();</span>","\t\t\t\tjQueryIcon<span class=\"k\">.</span>animate<span class=\"k\">(</span><span class=\"k\">{</span>svgY<span class=\"k\">:</span> endPosition<span class=\"k\">.</span>y<span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"s\">2000</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t\t\t\tjQueryIcon<span class=\"k\">.</span>hide<span class=\"k\">();</span>","\t\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t\t\t\tjQueryIcon<span class=\"k\">.</span>attr<span class=\"k\">(</span><span class=\"s\">\"y\"</span><span class=\"k\">,</span> position<span class=\"k\">.</span>y<span class=\"k\">)</span>","\t\t\t\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">;</span>","\t\t\t","\t\t\t<span class=\"k\">return</span> that<span class=\"k\">;</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","\t\t<span class=\"c\">/**</span>","<span class=\"c\">\t\t * Bietet Hervorheben-Effekt f&#195;&#188;r ein TaskLane-Rechteck im SVG.</span>","<span class=\"c\">\t\t * @param {String} activityGroupID</span>","<span class=\"c\">\t\t * @return {SVGRectangle} SVGRechteck, das nur das Hervorheben unterst&#195;&#188;tzt</span>","<span class=\"c\">\t\t */</span>","        getTaskLaneRectangle<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>activityGroupID<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> jQueryRectangles <span class=\"k\">=</span> getJQuerySVGRectanglesByActivityGroupID<span class=\"k\">(</span>activityGroupID<span class=\"k\">);</span>","            <span class=\"k\">var</span> that <span class=\"k\">=</span> Object<span class=\"k\">.</span>create<span class=\"k\">(</span>WoSec<span class=\"k\">.</span>baseObject<span class=\"k\">);</span>","\t\t\t<span class=\"c\">/**</span>","<span class=\"c\">\t\t\t * @see SVGRectangle.highlight</span>","<span class=\"c\">\t\t\t */</span>","            that<span class=\"k\">.</span>highlight <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                jQueryRectangles<span class=\"k\">.</span>each<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t\t\t\t$<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>effect<span class=\"k\">(</span><span class=\"s\">'pulsate'</span><span class=\"k\">,</span> <span class=\"k\">{</span> times<span class=\"k\">:</span><span class=\"s\">1</span> <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"s\">1000</span><span class=\"k\">);</span>","\t\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","            <span class=\"k\">}</span><span class=\"k\">;</span>","\t\t\t<span class=\"k\">return</span> that<span class=\"k\">;</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">());</span>"];
_$jscoverage['src/SVGUtility.js'][5]++;
WoSec.svgUtility = (function () {
  _$jscoverage['src/SVGUtility.js'][6]++;
  var CSS_ID_COLORSTORE = "color-store", CSS_ID_COLORSTORE_UNOBTRUSIVE_COLOR = "rect-unobtrusive", CSS_ID_COLORSTORE_OBTRUSIVE_COLOR = "rect-obtrusive", CSS_ID_COLORSTORE_RESET_COLOR = "rect-reset";
  _$jscoverage['src/SVGUtility.js'][10]++;
  var ANIMATION_IMAGE_PATH = "media/images/fileicon.png", ANIMATION_IMAGE_SIZE = {width: 25.5, height: 33};
  _$jscoverage['src/SVGUtility.js'][13]++;
  var $ = jQuery;
  _$jscoverage['src/SVGUtility.js'][16]++;
  var animationPrototype;
  _$jscoverage['src/SVGUtility.js'][17]++;
  function getAnimationPrototype() {
    _$jscoverage['src/SVGUtility.js'][18]++;
    if ((! animationPrototype)) {
      _$jscoverage['src/SVGUtility.js'][19]++;
      animationPrototype = document.createElementNS("http://www.w3.org/2000/svg", "image");
      _$jscoverage['src/SVGUtility.js'][20]++;
      animationPrototype.setAttributeNS("http://www.w3.org/1999/xlink", "xlink:href", ANIMATION_IMAGE_PATH);
      _$jscoverage['src/SVGUtility.js'][21]++;
      animationPrototype.setAttribute("width", ANIMATION_IMAGE_SIZE.width);
      _$jscoverage['src/SVGUtility.js'][22]++;
      animationPrototype.setAttribute("height", ANIMATION_IMAGE_SIZE.height);
    }
    _$jscoverage['src/SVGUtility.js'][24]++;
    return animationPrototype;
}
  _$jscoverage['src/SVGUtility.js'][27]++;
  function getJQuerySVGRectanglesByActivityID(activityID) {
    _$jscoverage['src/SVGUtility.js'][28]++;
    return $("svg rect").filter((function () {
  _$jscoverage['src/SVGUtility.js'][29]++;
  return ($(this).attr("bpmn:activity-id") == activityID);
}));
}
  _$jscoverage['src/SVGUtility.js'][32]++;
  function getCircles(activityID) {
    _$jscoverage['src/SVGUtility.js'][33]++;
    return $("svg circle").filter((function () {
  _$jscoverage['src/SVGUtility.js'][34]++;
  return ($(this).attr("bpmn:activity-id") == activityID);
}));
}
  _$jscoverage['src/SVGUtility.js'][38]++;
  function getJQuerySVGRectanglesByActivityGroupID(activityGroupID) {
    _$jscoverage['src/SVGUtility.js'][39]++;
    return $("svg rect").filter((function () {
  _$jscoverage['src/SVGUtility.js'][40]++;
  return ($(this).attr("bpmn:pool-id") == activityGroupID);
}));
}
  _$jscoverage['src/SVGUtility.js'][44]++;
  return ({getTaskRectangle: (function (activityID) {
  _$jscoverage['src/SVGUtility.js'][51]++;
  var rectangles = getJQuerySVGRectanglesByActivityID(activityID);
  _$jscoverage['src/SVGUtility.js'][52]++;
  if ((rectangles.length == 0)) {
    _$jscoverage['src/SVGUtility.js'][53]++;
    rectangles = getCircles(activityID);
  }
  _$jscoverage['src/SVGUtility.js'][55]++;
  if ((rectangles.length == 0)) {
    _$jscoverage['src/SVGUtility.js'][56]++;
    throw new Error(("No rectangles/circles with activityID:[" + activityID + "] found"));
  }
  _$jscoverage['src/SVGUtility.js'][58]++;
  var that = Object.create(WoSec.baseObject);
  _$jscoverage['src/SVGUtility.js'][63]++;
  that.getPosition = (function () {
  _$jscoverage['src/SVGUtility.js'][64]++;
  return ({x: parseInt($(rectangles[0]).attr("x")), y: parseInt($(rectangles[0]).attr("y")), width: parseInt($(rectangles[0]).attr("width")), height: parseInt($(rectangles[0]).attr("height")), getCenter: (function () {
  _$jscoverage['src/SVGUtility.js'][70]++;
  return ({x: (this.x + (this.width / 2)), y: (this.y + (this.height / 2))});
})});
});
  _$jscoverage['src/SVGUtility.js'][78]++;
  var texts = $("svg text").filter((function () {
  _$jscoverage['src/SVGUtility.js'][79]++;
  var pos = that.getPosition();
  _$jscoverage['src/SVGUtility.js'][80]++;
  return ((Math.abs((parseInt($(this).attr("x")) - pos.x)) < pos.width) && (Math.abs((parseInt($(this).attr("y")) - pos.y)) < pos.height));
}));
  _$jscoverage['src/SVGUtility.js'][84]++;
  function adjustPositionForAnimation(position) {
    _$jscoverage['src/SVGUtility.js'][85]++;
    position.x -= (ANIMATION_IMAGE_SIZE.width / 2);
    _$jscoverage['src/SVGUtility.js'][86]++;
    position.y -= (ANIMATION_IMAGE_SIZE.height / 2);
    _$jscoverage['src/SVGUtility.js'][87]++;
    return position;
}
  _$jscoverage['src/SVGUtility.js'][90]++;
  var animation = this.createAnimation(activityID, adjustPositionForAnimation(that.getPosition().getCenter()));
  _$jscoverage['src/SVGUtility.js'][96]++;
  that.showAnimation = (function (task) {
  _$jscoverage['src/SVGUtility.js'][97]++;
  animation.show(adjustPositionForAnimation(task.getPosition().getCenter()));
  _$jscoverage['src/SVGUtility.js'][98]++;
  return this;
});
  _$jscoverage['src/SVGUtility.js'][104]++;
  that.highlight = (function () {
  _$jscoverage['src/SVGUtility.js'][105]++;
  rectangles.each((function () {
  _$jscoverage['src/SVGUtility.js'][106]++;
  $(this).effect("pulsate", {times: 3}, 1000);
}));
  _$jscoverage['src/SVGUtility.js'][108]++;
  return this;
});
  _$jscoverage['src/SVGUtility.js'][114]++;
  that.markObtrusive = (function () {
  _$jscoverage['src/SVGUtility.js'][115]++;
  rectangles.each((function () {
  _$jscoverage['src/SVGUtility.js'][116]++;
  $(this).attr("fill", $(("#" + CSS_ID_COLORSTORE_OBTRUSIVE_COLOR)).css("color"));
}));
  _$jscoverage['src/SVGUtility.js'][118]++;
  return this;
});
  _$jscoverage['src/SVGUtility.js'][124]++;
  that.markUnobtrusive = (function () {
  _$jscoverage['src/SVGUtility.js'][125]++;
  rectangles.each((function () {
  _$jscoverage['src/SVGUtility.js'][126]++;
  $(this).attr("fill", $(("#" + CSS_ID_COLORSTORE_UNOBTRUSIVE_COLOR)).css("color"));
}));
  _$jscoverage['src/SVGUtility.js'][128]++;
  return this;
});
  _$jscoverage['src/SVGUtility.js'][135]++;
  that.reset = (function () {
  _$jscoverage['src/SVGUtility.js'][136]++;
  rectangles.each((function () {
  _$jscoverage['src/SVGUtility.js'][137]++;
  $(this).attr("fill", $(("#" + CSS_ID_COLORSTORE_RESET_COLOR)).css("color"));
}));
  _$jscoverage['src/SVGUtility.js'][139]++;
  return this;
});
  _$jscoverage['src/SVGUtility.js'][146]++;
  that.registerOnClick = (function (handler) {
  _$jscoverage['src/SVGUtility.js'][147]++;
  $(rectangles[0]).click(handler);
  _$jscoverage['src/SVGUtility.js'][148]++;
  texts.each((function () {
  _$jscoverage['src/SVGUtility.js'][149]++;
  $(this).click(handler);
}));
  _$jscoverage['src/SVGUtility.js'][151]++;
  return this;
});
  _$jscoverage['src/SVGUtility.js'][158]++;
  that.registerOnHover = (function (handler) {
  _$jscoverage['src/SVGUtility.js'][159]++;
  $(rectangles[0]).hover(handler);
  _$jscoverage['src/SVGUtility.js'][160]++;
  texts.each((function () {
  _$jscoverage['src/SVGUtility.js'][161]++;
  $(this).hover(handler);
}));
  _$jscoverage['src/SVGUtility.js'][163]++;
  return this;
});
  _$jscoverage['src/SVGUtility.js'][166]++;
  return that;
}), createAnimation: (function (id, position) {
  _$jscoverage['src/SVGUtility.js'][174]++;
  var that = Object.create(WoSec.baseObject);
  _$jscoverage['src/SVGUtility.js'][175]++;
  var icon = getAnimationPrototype().cloneNode(true);
  _$jscoverage['src/SVGUtility.js'][176]++;
  icon.setAttribute("id", id);
  _$jscoverage['src/SVGUtility.js'][177]++;
  $("svg")[0].appendChild(icon);
  _$jscoverage['src/SVGUtility.js'][178]++;
  var jQueryIcon = $(("#" + id));
  _$jscoverage['src/SVGUtility.js'][179]++;
  jQueryIcon.hide();
  _$jscoverage['src/SVGUtility.js'][180]++;
  jQueryIcon.attr("x", position.x);
  _$jscoverage['src/SVGUtility.js'][181]++;
  jQueryIcon.attr("y", position.y);
  _$jscoverage['src/SVGUtility.js'][183]++;
  that.show = (function (endPosition) {
  _$jscoverage['src/SVGUtility.js'][184]++;
  jQueryIcon.show();
  _$jscoverage['src/SVGUtility.js'][185]++;
  jQueryIcon.animate({svgY: endPosition.y}, 2000, (function () {
  _$jscoverage['src/SVGUtility.js'][186]++;
  jQueryIcon.hide();
}));
  _$jscoverage['src/SVGUtility.js'][188]++;
  jQueryIcon.attr("y", position.y);
  _$jscoverage['src/SVGUtility.js'][189]++;
  return this;
});
  _$jscoverage['src/SVGUtility.js'][192]++;
  return that;
}), getTaskLaneRectangle: (function (activityGroupID) {
  _$jscoverage['src/SVGUtility.js'][200]++;
  var jQueryRectangles = getJQuerySVGRectanglesByActivityGroupID(activityGroupID);
  _$jscoverage['src/SVGUtility.js'][201]++;
  var that = Object.create(WoSec.baseObject);
  _$jscoverage['src/SVGUtility.js'][205]++;
  that.highlight = (function () {
  _$jscoverage['src/SVGUtility.js'][206]++;
  jQueryRectangles.each((function () {
  _$jscoverage['src/SVGUtility.js'][207]++;
  $(this).effect("pulsate", {times: 1}, 1000);
}));
});
  _$jscoverage['src/SVGUtility.js'][210]++;
  return that;
})});
})();
