/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['src/WoSec.js']) {
  _$jscoverage['src/WoSec.js'] = [];
  _$jscoverage['src/WoSec.js'][2] = 0;
  _$jscoverage['src/WoSec.js'][5] = 0;
  _$jscoverage['src/WoSec.js'][6] = 0;
  _$jscoverage['src/WoSec.js'][7] = 0;
  _$jscoverage['src/WoSec.js'][8] = 0;
  _$jscoverage['src/WoSec.js'][9] = 0;
  _$jscoverage['src/WoSec.js'][13] = 0;
  _$jscoverage['src/WoSec.js'][14] = 0;
  _$jscoverage['src/WoSec.js'][16] = 0;
  _$jscoverage['src/WoSec.js'][17] = 0;
  _$jscoverage['src/WoSec.js'][18] = 0;
  _$jscoverage['src/WoSec.js'][20] = 0;
  _$jscoverage['src/WoSec.js'][21] = 0;
  _$jscoverage['src/WoSec.js'][23] = 0;
  _$jscoverage['src/WoSec.js'][24] = 0;
  _$jscoverage['src/WoSec.js'][29] = 0;
  _$jscoverage['src/WoSec.js'][31] = 0;
  _$jscoverage['src/WoSec.js'][34] = 0;
  _$jscoverage['src/WoSec.js'][36] = 0;
  _$jscoverage['src/WoSec.js'][42] = 0;
  _$jscoverage['src/WoSec.js'][44] = 0;
  _$jscoverage['src/WoSec.js'][45] = 0;
  _$jscoverage['src/WoSec.js'][46] = 0;
  _$jscoverage['src/WoSec.js'][58] = 0;
  _$jscoverage['src/WoSec.js'][60] = 0;
  _$jscoverage['src/WoSec.js'][65] = 0;
  _$jscoverage['src/WoSec.js'][70] = 0;
  _$jscoverage['src/WoSec.js'][72] = 0;
  _$jscoverage['src/WoSec.js'][73] = 0;
  _$jscoverage['src/WoSec.js'][74] = 0;
  _$jscoverage['src/WoSec.js'][76] = 0;
  _$jscoverage['src/WoSec.js'][77] = 0;
  _$jscoverage['src/WoSec.js'][79] = 0;
  _$jscoverage['src/WoSec.js'][83] = 0;
  _$jscoverage['src/WoSec.js'][84] = 0;
  _$jscoverage['src/WoSec.js'][85] = 0;
  _$jscoverage['src/WoSec.js'][86] = 0;
}
_$jscoverage['src/WoSec.js'].source = ["","<span class=\"k\">var</span> WoSec <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span> <span class=\"c\">// Namespace</span>","","<span class=\"c\">// ES5 Functions</span>","<span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">typeof</span> Object<span class=\"k\">.</span>create <span class=\"k\">!==</span> <span class=\"s\">'function'</span><span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"c\">//source: http://javascript.crockford.com/prototypal.html</span>","    Object<span class=\"k\">.</span>create <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>o<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">function</span> F<span class=\"k\">()</span> <span class=\"k\">{}</span>","        F<span class=\"k\">.</span>prototype <span class=\"k\">=</span> o<span class=\"k\">;</span>","        <span class=\"k\">return</span> <span class=\"k\">new</span> F<span class=\"k\">();</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","<span class=\"k\">}</span>","","<span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">typeof</span> Array<span class=\"k\">.</span>prototype<span class=\"k\">.</span>forEach <span class=\"k\">!==</span> <span class=\"s\">'function'</span><span class=\"k\">)</span> <span class=\"k\">{</span>","  Array<span class=\"k\">.</span>prototype<span class=\"k\">.</span>forEach <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>callback<span class=\"k\">)</span><span class=\"c\">//[, thisObject])</span>","  <span class=\"k\">{</span>","    <span class=\"k\">var</span> len <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>length<span class=\"k\">;</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">typeof</span> callback <span class=\"k\">!=</span> <span class=\"s\">\"function\"</span><span class=\"k\">)</span>","      <span class=\"k\">throw</span> <span class=\"k\">new</span> TypeError<span class=\"k\">();</span>","","    <span class=\"k\">var</span> thisObject <span class=\"k\">=</span> arguments<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">];</span>","    <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> len<span class=\"k\">;</span> i<span class=\"k\">++)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span>i <span class=\"k\">in</span> <span class=\"k\">this</span><span class=\"k\">)</span>","        callback<span class=\"k\">.</span>call<span class=\"k\">(</span>thisObject<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">[</span>i<span class=\"k\">],</span> i<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">;</span>","<span class=\"k\">}</span>","","<span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">typeof</span> Function<span class=\"k\">.</span>prototype<span class=\"k\">.</span>bind <span class=\"k\">!==</span> <span class=\"s\">\"function\"</span><span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"c\">// http://webreflection.blogspot.com/2010/02/functionprototypebind.html</span>","","    Function<span class=\"k\">.</span>prototype<span class=\"k\">.</span>bind <span class=\"k\">=</span> <span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">(</span>slice<span class=\"k\">)</span><span class=\"k\">{</span>","","        <span class=\"c\">// (C) WebReflection - Mit Style License</span>","        <span class=\"k\">function</span> bind<span class=\"k\">(</span>context<span class=\"k\">)</span> <span class=\"k\">{</span>","","            <span class=\"k\">var</span> self <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">;</span> <span class=\"c\">// \"trapped\" function reference</span>","","            <span class=\"c\">// only if there is more than an argument</span>","            <span class=\"c\">// we are interested into more complex operations</span>","            <span class=\"c\">// this will speed up common bind creation</span>","            <span class=\"c\">// avoiding useless slices over arguments</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"s\">1</span> <span class=\"k\">&lt;</span> arguments<span class=\"k\">.</span>length<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"c\">// extra arguments to send by default</span>","                <span class=\"k\">var</span> $arguments <span class=\"k\">=</span> slice<span class=\"k\">.</span>call<span class=\"k\">(</span>arguments<span class=\"k\">,</span> <span class=\"s\">1</span><span class=\"k\">);</span>","                <span class=\"k\">return</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","                    <span class=\"k\">return</span> self<span class=\"k\">.</span>apply<span class=\"k\">(</span>","                        context<span class=\"k\">,</span>","                        <span class=\"c\">// thanks @kangax for this suggestion</span>","                        arguments<span class=\"k\">.</span>length <span class=\"k\">?</span>","                            <span class=\"c\">// concat arguments with those received</span>","                            $arguments<span class=\"k\">.</span>concat<span class=\"k\">(</span>slice<span class=\"k\">.</span>call<span class=\"k\">(</span>arguments<span class=\"k\">))</span> <span class=\"k\">:</span>","                            <span class=\"c\">// send just arguments, no concat, no slice</span>","                            $arguments","                    <span class=\"k\">);</span>","                <span class=\"k\">}</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","            <span class=\"c\">// optimized callback</span>","            <span class=\"k\">return</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","                <span class=\"c\">// speed up when function is called without arguments</span>","                <span class=\"k\">return</span> arguments<span class=\"k\">.</span>length <span class=\"k\">?</span> self<span class=\"k\">.</span>apply<span class=\"k\">(</span>context<span class=\"k\">,</span> arguments<span class=\"k\">)</span> <span class=\"k\">:</span> self<span class=\"k\">.</span>call<span class=\"k\">(</span>context<span class=\"k\">);</span>","            <span class=\"k\">}</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        <span class=\"c\">// the named function</span>","        <span class=\"k\">return</span> bind<span class=\"k\">;</span>","","    <span class=\"k\">}</span><span class=\"k\">(</span>Array<span class=\"k\">.</span>prototype<span class=\"k\">.</span>slice<span class=\"k\">));</span>","<span class=\"k\">}</span>","","WoSec<span class=\"k\">.</span>baseObject <span class=\"k\">=</span> <span class=\"k\">{</span>","\tlater<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>msec<span class=\"k\">,</span> method<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> that <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">,</span> args <span class=\"k\">=</span> Array<span class=\"k\">.</span>prototype<span class=\"k\">.</span>slice<span class=\"k\">.</span>apply<span class=\"k\">(</span>arguments<span class=\"k\">,</span> <span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">]);</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">typeof</span> method <span class=\"k\">===</span> <span class=\"s\">'string'</span><span class=\"k\">)</span> <span class=\"k\">{</span>","            method <span class=\"k\">=</span> that<span class=\"k\">[</span>method<span class=\"k\">];</span>","        <span class=\"k\">}</span>","        setTimeout<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            method<span class=\"k\">.</span>apply<span class=\"k\">(</span>that<span class=\"k\">,</span> args<span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span> msec<span class=\"k\">);</span>","        <span class=\"k\">return</span> that<span class=\"k\">;</span> <span class=\"c\">// Cascade</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span>","","WoSec<span class=\"k\">.</span>inherit <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>subType<span class=\"k\">,</span> superType<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> prototype <span class=\"k\">=</span> Object<span class=\"k\">.</span>create<span class=\"k\">(</span>superType<span class=\"k\">.</span>prototype<span class=\"k\">);</span>","    prototype<span class=\"k\">.</span>constructor <span class=\"k\">=</span> subType<span class=\"k\">;</span>","    subType<span class=\"k\">.</span>prototype <span class=\"k\">=</span> prototype<span class=\"k\">;</span>","<span class=\"k\">}</span>","","","<span class=\"c\">// crashes with jquery ui, moved to WoSec.baseObject</span>","<span class=\"c\">//if (typeof Object.prototype.later !== 'function') { // source: source: http://www.slideshare.net/douglascrockford/crockford-on-javascript-act-iii-function-the-ultimate (slides 43/44)</span>","<span class=\"c\">//\tObject.prototype.later = function (msec, method) {</span>","<span class=\"c\">//\t\tvar that = this, args = Array.prototype.slice.apply(arguments, [2]);</span>","<span class=\"c\">//\t\tif (typeof method === 'string') {</span>","<span class=\"c\">//\t\t\tmethod = that[method];</span>","<span class=\"c\">//\t\t}</span>","<span class=\"c\">//\t\tsetTimeout(function () {</span>","<span class=\"c\">//\t\t\tmethod.apply(that, args);</span>","<span class=\"c\">//\t\t}, msec);</span>","<span class=\"c\">//\t\treturn that; // Cascade</span>","<span class=\"c\">//\t};</span>","<span class=\"c\">//}</span>","","","<span class=\"c\">//function class(extend, initializer, methods) { // aka new_constructor, source: http://www.slideshare.net/douglascrockford/crockford-on-javascript-act-iii-function-the-ultimate </span>","<span class=\"c\">//\tvar func, prototype = Object.create(extend &amp;&amp; extend.prototype);</span>","<span class=\"c\">//\tif (methods) {</span>","<span class=\"c\">//\t\tmethods.keys().forEach(function (key) {</span>","<span class=\"c\">//\t\tprototype[key] = methods[key];</span>","<span class=\"c\">//\t});</span>","<span class=\"c\">//\t}</span>","<span class=\"c\">//\tfunc = function () {</span>","<span class=\"c\">//\t\tvar that = Object.create(prototype);</span>","<span class=\"c\">//\tif (typeof initializer === 'function') {</span>","<span class=\"c\">//\t\tinitializer.apply(that, arguments);</span>","<span class=\"c\">//\t}</span>","<span class=\"c\">//\treturn that;</span>","<span class=\"c\">//\t};</span>","<span class=\"c\">//\tfunc.prototype = prototype;</span>","<span class=\"c\">//\tprototype.constructor = func;</span>","<span class=\"c\">//\treturn func;</span>","<span class=\"c\">//}</span>"];
_$jscoverage['src/WoSec.js'][2]++;
var WoSec = {};
_$jscoverage['src/WoSec.js'][5]++;
if (((typeof Object.create) !== "function")) {
  _$jscoverage['src/WoSec.js'][6]++;
  Object.create = (function (o) {
  _$jscoverage['src/WoSec.js'][7]++;
  function F() {
}
  _$jscoverage['src/WoSec.js'][8]++;
  F.prototype = o;
  _$jscoverage['src/WoSec.js'][9]++;
  return new F();
});
}
_$jscoverage['src/WoSec.js'][13]++;
if (((typeof Array.prototype.forEach) !== "function")) {
  _$jscoverage['src/WoSec.js'][14]++;
  Array.prototype.forEach = (function (callback) {
  _$jscoverage['src/WoSec.js'][16]++;
  var len = this.length;
  _$jscoverage['src/WoSec.js'][17]++;
  if (((typeof callback) != "function")) {
    _$jscoverage['src/WoSec.js'][18]++;
    throw new TypeError();
  }
  _$jscoverage['src/WoSec.js'][20]++;
  var thisObject = arguments[1];
  _$jscoverage['src/WoSec.js'][21]++;
  for (var i = 0; (i < len); (i++)) {
    _$jscoverage['src/WoSec.js'][23]++;
    if ((i in this)) {
      _$jscoverage['src/WoSec.js'][24]++;
      callback.call(thisObject, this[i], i, this);
    }
}
});
}
_$jscoverage['src/WoSec.js'][29]++;
if (((typeof Function.prototype.bind) !== "function")) {
  _$jscoverage['src/WoSec.js'][31]++;
  Function.prototype.bind = (function (slice) {
  _$jscoverage['src/WoSec.js'][34]++;
  function bind(context) {
    _$jscoverage['src/WoSec.js'][36]++;
    var self = this;
    _$jscoverage['src/WoSec.js'][42]++;
    if ((1 < arguments.length)) {
      _$jscoverage['src/WoSec.js'][44]++;
      var $arguments = slice.call(arguments, 1);
      _$jscoverage['src/WoSec.js'][45]++;
      return (function () {
  _$jscoverage['src/WoSec.js'][46]++;
  return self.apply(context, (arguments.length? $arguments.concat(slice.call(arguments)): $arguments));
});
    }
    _$jscoverage['src/WoSec.js'][58]++;
    return (function () {
  _$jscoverage['src/WoSec.js'][60]++;
  return (arguments.length? self.apply(context, arguments): self.call(context));
});
}
  _$jscoverage['src/WoSec.js'][65]++;
  return bind;
})(Array.prototype.slice);
}
_$jscoverage['src/WoSec.js'][70]++;
WoSec.baseObject = {later: (function (msec, method) {
  _$jscoverage['src/WoSec.js'][72]++;
  var that = this, args = Array.prototype.slice.apply(arguments, [2]);
  _$jscoverage['src/WoSec.js'][73]++;
  if (((typeof method) === "string")) {
    _$jscoverage['src/WoSec.js'][74]++;
    method = that[method];
  }
  _$jscoverage['src/WoSec.js'][76]++;
  setTimeout((function () {
  _$jscoverage['src/WoSec.js'][77]++;
  method.apply(that, args);
}), msec);
  _$jscoverage['src/WoSec.js'][79]++;
  return that;
})};
_$jscoverage['src/WoSec.js'][83]++;
WoSec.inherit = (function (subType, superType) {
  _$jscoverage['src/WoSec.js'][84]++;
  var prototype = Object.create(superType.prototype);
  _$jscoverage['src/WoSec.js'][85]++;
  prototype.constructor = subType;
  _$jscoverage['src/WoSec.js'][86]++;
  subType.prototype = prototype;
});
