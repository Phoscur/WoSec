/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['overview.min.js']) {
  _$jscoverage['overview.min.js'] = [];
  _$jscoverage['overview.min.js'][1] = 0;
}
_$jscoverage['overview.min.js'].source = ["$<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">var</span> c<span class=\"k\">=</span><span class=\"s\">\"UpdateController?type=Instance\"</span><span class=\"k\">;</span><span class=\"k\">var</span> b<span class=\"k\">=</span><span class=\"s\">\"SingleInstanceController?instance=\"</span><span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">typeof</span> Array<span class=\"k\">.</span>prototype<span class=\"k\">.</span>forEach<span class=\"k\">!==</span><span class=\"s\">\"function\"</span><span class=\"k\">)</span><span class=\"k\">{</span>Array<span class=\"k\">.</span>prototype<span class=\"k\">.</span>forEach<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>k<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> g<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>length<span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">typeof</span> k<span class=\"k\">!=</span><span class=\"s\">\"function\"</span><span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">throw</span> <span class=\"k\">new</span> TypeError<span class=\"k\">()</span><span class=\"k\">}</span><span class=\"k\">var</span> h<span class=\"k\">=</span>arguments<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">];</span><span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> j<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">;</span>j<span class=\"k\">&lt;</span>g<span class=\"k\">;</span>j<span class=\"k\">++)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span>j <span class=\"k\">in</span> <span class=\"k\">this</span><span class=\"k\">)</span><span class=\"k\">{</span>k<span class=\"k\">.</span>call<span class=\"k\">(</span>h<span class=\"k\">,</span><span class=\"k\">this</span><span class=\"k\">[</span>j<span class=\"k\">],</span>j<span class=\"k\">,</span><span class=\"k\">this</span><span class=\"k\">)</span><span class=\"k\">}}}}</span><span class=\"k\">function</span> e<span class=\"k\">(</span>j<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> i<span class=\"k\">=(((</span><span class=\"k\">new</span> Date<span class=\"k\">()).</span>getTime<span class=\"k\">()-</span>j<span class=\"k\">*</span><span class=\"s\">1000</span><span class=\"k\">)/</span><span class=\"s\">1000</span><span class=\"k\">),</span>g<span class=\"k\">=</span>Math<span class=\"k\">.</span>floor<span class=\"k\">(</span>i<span class=\"k\">/</span><span class=\"s\">86400</span><span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>isNaN<span class=\"k\">(</span>g<span class=\"k\">)||</span>g<span class=\"k\">&lt;</span><span class=\"s\">0</span><span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">return</span><span class=\"k\">}</span><span class=\"k\">var</span> h<span class=\"k\">=</span><span class=\"k\">new</span> Date<span class=\"k\">(</span>j<span class=\"k\">*</span><span class=\"s\">1000</span><span class=\"k\">);</span><span class=\"k\">return</span><span class=\"s\">'&lt;span title=\"'</span><span class=\"k\">+</span>h<span class=\"k\">.</span>getDay<span class=\"k\">()+</span><span class=\"s\">\".\"</span><span class=\"k\">+(</span>h<span class=\"k\">.</span>getMonth<span class=\"k\">()+</span><span class=\"s\">1</span><span class=\"k\">)+</span><span class=\"s\">\".\"</span><span class=\"k\">+</span>h<span class=\"k\">.</span>getFullYear<span class=\"k\">()+</span><span class=\"s\">\" \"</span><span class=\"k\">+</span>h<span class=\"k\">.</span>getHours<span class=\"k\">()+</span><span class=\"s\">\":\"</span><span class=\"k\">+</span>h<span class=\"k\">.</span>getMinutes<span class=\"k\">()+</span><span class=\"s\">'\"&gt;'</span><span class=\"k\">+(</span>g<span class=\"k\">==</span><span class=\"s\">0</span><span class=\"k\">&amp;&amp;(</span>i<span class=\"k\">&lt;</span><span class=\"s\">60</span><span class=\"k\">&amp;&amp;</span><span class=\"s\">\"gerade eben\"</span><span class=\"k\">||</span>i<span class=\"k\">&lt;</span><span class=\"s\">120</span><span class=\"k\">&amp;&amp;</span><span class=\"s\">\"vor einer Minute\"</span><span class=\"k\">||</span>i<span class=\"k\">&lt;</span><span class=\"s\">3600</span><span class=\"k\">&amp;&amp;</span><span class=\"s\">\"vor \"</span><span class=\"k\">+</span>Math<span class=\"k\">.</span>floor<span class=\"k\">(</span>i<span class=\"k\">/</span><span class=\"s\">60</span><span class=\"k\">)+</span><span class=\"s\">\" Minuten\"</span><span class=\"k\">||</span>i<span class=\"k\">&lt;</span><span class=\"s\">7200</span><span class=\"k\">&amp;&amp;</span><span class=\"s\">\"vor einer Stunde\"</span><span class=\"k\">||</span>i<span class=\"k\">&lt;</span><span class=\"s\">86400</span><span class=\"k\">&amp;&amp;</span><span class=\"s\">\"vor \"</span><span class=\"k\">+</span>Math<span class=\"k\">.</span>floor<span class=\"k\">(</span>i<span class=\"k\">/</span><span class=\"s\">3600</span><span class=\"k\">)+</span><span class=\"s\">\" Stunden\"</span><span class=\"k\">)||</span>g<span class=\"k\">==</span><span class=\"s\">1</span><span class=\"k\">&amp;&amp;</span><span class=\"s\">\"Gestern\"</span><span class=\"k\">||</span>g<span class=\"k\">&lt;</span><span class=\"s\">7</span><span class=\"k\">&amp;&amp;</span><span class=\"s\">\"vor \"</span><span class=\"k\">+</span>g<span class=\"k\">+</span><span class=\"s\">\" Tagen\"</span><span class=\"k\">||</span>g<span class=\"k\">&lt;</span><span class=\"s\">31</span><span class=\"k\">&amp;&amp;</span><span class=\"s\">\"vor \"</span><span class=\"k\">+</span>Math<span class=\"k\">.</span>ceil<span class=\"k\">(</span>g<span class=\"k\">/</span><span class=\"s\">7</span><span class=\"k\">)+</span><span class=\"s\">\" Wochen\"</span><span class=\"k\">||</span><span class=\"s\">\"vor \"</span><span class=\"k\">+</span>Math<span class=\"k\">.</span>ceil<span class=\"k\">(</span>g<span class=\"k\">/</span><span class=\"s\">365</span><span class=\"k\">)+</span><span class=\"s\">\" Jahren\"</span><span class=\"k\">)+</span><span class=\"s\">\"&lt;/span&gt;\"</span><span class=\"k\">}</span><span class=\"k\">var</span> a<span class=\"k\">=</span><span class=\"k\">{</span>terminateInstance<span class=\"k\">:</span><span class=\"s\">\"Instanz beendet\"</span><span class=\"k\">,</span>createInstance<span class=\"k\">:</span><span class=\"s\">\"Instanz gestartet\"</span><span class=\"k\">,</span>humanActivityExecuted<span class=\"k\">:</span><span class=\"s\">\"Aktivit&#195;&#164;t (Human-Task) wurde ausgef&#195;&#188;hrt\"</span><span class=\"k\">,</span>eventActivityExecuted<span class=\"k\">:</span><span class=\"s\">\"Aktivit&#195;&#164;t (Event) wurde ausgef&#195;&#188;hrt\"</span><span class=\"k\">,</span>WSActivityExecuted<span class=\"k\">:</span><span class=\"s\">\"Aktivit&#195;&#164;t (Webservice-Aufruf) wurde ausgef&#195;&#188;hrt\"</span><span class=\"k\">,</span>WSProviderSelected<span class=\"k\">:</span><span class=\"s\">\"Anbieter ausgew&#195;&#164;hlt\"</span><span class=\"k\">,</span>startActivityExecution<span class=\"k\">:</span><span class=\"s\">\"Aktivit&#195;&#164;t unmittelbar vor Ausf&#195;&#188;hrung\"</span><span class=\"k\">,</span>DataTransferredToWS<span class=\"k\">:</span><span class=\"s\">\"&#195;&#156;bertragung von Daten an Webservice\"</span><span class=\"k\">,</span>DataTransferredFromWS<span class=\"k\">:</span><span class=\"s\">\"R&#195;&#188;ckgabe von Daten von einem Webservice\"</span><span class=\"k\">,</span>HumanTaskExecutorSelected<span class=\"k\">:</span><span class=\"s\">\"Benutzer f&#195;&#188;r Aktivit&#195;&#164;t ausgew&#195;&#164;hlt\"</span><span class=\"k\">,</span>DataTransferredToHuman<span class=\"k\">:</span><span class=\"s\">\"&#195;&#156;bertragung von Daten an Menschen\"</span><span class=\"k\">,</span>DataTransferredFromHuman<span class=\"k\">:</span><span class=\"s\">\"Eingabe von Daten durch Menschen\"</span><span class=\"k\">}</span><span class=\"k\">;</span><span class=\"k\">var</span> f<span class=\"k\">=(</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">var</span> j<span class=\"k\">=</span><span class=\"k\">{}</span><span class=\"k\">;</span><span class=\"k\">var</span> h<span class=\"k\">=</span>$<span class=\"k\">(</span><span class=\"s\">\"#instancestable\"</span><span class=\"k\">);</span><span class=\"k\">var</span> g<span class=\"k\">=</span>$<span class=\"k\">(</span><span class=\"s\">\"&lt;tr&gt;&lt;td&gt;&lt;a/&gt;&lt;/td&gt;&lt;td/&gt;&lt;td/&gt;&lt;td/&gt;&lt;/tr&gt;\"</span><span class=\"k\">);</span><span class=\"k\">function</span> i<span class=\"k\">(</span>n<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> m<span class=\"k\">=</span><span class=\"k\">{}</span><span class=\"k\">;</span><span class=\"k\">var</span> l<span class=\"k\">=</span>g<span class=\"k\">.</span>clone<span class=\"k\">();</span><span class=\"k\">var</span> k<span class=\"k\">=</span>l<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">\"td\"</span><span class=\"k\">);</span>m<span class=\"k\">.</span>update<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>o<span class=\"k\">)</span><span class=\"k\">{</span>$<span class=\"k\">(</span>k<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]).</span>find<span class=\"k\">(</span><span class=\"s\">\"a\"</span><span class=\"k\">).</span>attr<span class=\"k\">(</span><span class=\"s\">\"href\"</span><span class=\"k\">,</span>b<span class=\"k\">+</span>o<span class=\"k\">.</span>id<span class=\"k\">).</span>text<span class=\"k\">(</span>o<span class=\"k\">.</span>id<span class=\"k\">);</span>$<span class=\"k\">(</span>k<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]).</span>text<span class=\"k\">(</span>o<span class=\"k\">.</span>workflowName<span class=\"k\">);</span>$<span class=\"k\">(</span>k<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">]).</span>html<span class=\"k\">(</span>e<span class=\"k\">(</span>o<span class=\"k\">.</span>create<span class=\"k\">));</span>$<span class=\"k\">(</span>k<span class=\"k\">[</span><span class=\"s\">3</span><span class=\"k\">]).</span>html<span class=\"k\">(</span>a<span class=\"k\">[</span>o<span class=\"k\">.</span>lastEvent<span class=\"k\">]+</span><span class=\"s\">\" \"</span><span class=\"k\">+</span>e<span class=\"k\">(</span>o<span class=\"k\">.</span>finished<span class=\"k\">));</span><span class=\"k\">if</span><span class=\"k\">(</span>o<span class=\"k\">.</span>lastEvent<span class=\"k\">==</span><span class=\"s\">\"terminateInstance\"</span><span class=\"k\">)</span><span class=\"k\">{</span>l<span class=\"k\">.</span>addClass<span class=\"k\">(</span><span class=\"s\">\"finished-instance\"</span><span class=\"k\">)</span><span class=\"k\">}}</span><span class=\"k\">;</span>l<span class=\"k\">.</span>hide<span class=\"k\">();</span>h<span class=\"k\">.</span>append<span class=\"k\">(</span>l<span class=\"k\">);</span>m<span class=\"k\">.</span>update<span class=\"k\">(</span>n<span class=\"k\">);</span>l<span class=\"k\">.</span>fadeIn<span class=\"k\">();</span>l<span class=\"k\">.</span>css<span class=\"k\">(</span><span class=\"s\">\"display\"</span><span class=\"k\">,</span><span class=\"s\">\"table-row\"</span><span class=\"k\">);</span><span class=\"k\">return</span> m<span class=\"k\">}</span><span class=\"k\">return</span><span class=\"k\">{</span>update<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>k<span class=\"k\">)</span><span class=\"k\">{</span>k<span class=\"k\">.</span>forEach<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span>l<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(!</span>j<span class=\"k\">[</span>l<span class=\"k\">.</span>id<span class=\"k\">])</span><span class=\"k\">{</span>j<span class=\"k\">[</span>l<span class=\"k\">.</span>id<span class=\"k\">]=</span>i<span class=\"k\">(</span>l<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">else</span><span class=\"k\">{</span>j<span class=\"k\">[</span>l<span class=\"k\">.</span>id<span class=\"k\">].</span>update<span class=\"k\">(</span>l<span class=\"k\">)</span><span class=\"k\">}}</span><span class=\"k\">)</span><span class=\"k\">}}}</span><span class=\"k\">());</span><span class=\"k\">var</span> d<span class=\"k\">=(</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">return</span><span class=\"k\">{</span>init<span class=\"k\">:</span><span class=\"k\">function</span> g<span class=\"k\">()</span><span class=\"k\">{</span>$<span class=\"k\">.</span>getJSON<span class=\"k\">(</span>c<span class=\"k\">,</span><span class=\"k\">{}</span><span class=\"k\">,</span><span class=\"k\">function</span><span class=\"k\">(</span>h<span class=\"k\">)</span><span class=\"k\">{</span>f<span class=\"k\">.</span>update<span class=\"k\">(</span>h<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">);</span>setTimeout<span class=\"k\">(</span>g<span class=\"k\">,</span><span class=\"s\">5000</span><span class=\"k\">);</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">}}}</span><span class=\"k\">()).</span>init<span class=\"k\">()</span><span class=\"k\">}</span><span class=\"k\">);</span>"];
_$jscoverage['overview.min.js'][1]++;
$((function () {
  _$jscoverage['overview.min.js'][1]++;
  var c = "UpdateController?type=Instance";
  _$jscoverage['overview.min.js'][1]++;
  var b = "SingleInstanceController?instance=";
  _$jscoverage['overview.min.js'][1]++;
  if (((typeof Array.prototype.forEach) !== "function")) {
    _$jscoverage['overview.min.js'][1]++;
    Array.prototype.forEach = (function (k) {
  _$jscoverage['overview.min.js'][1]++;
  var g = this.length;
  _$jscoverage['overview.min.js'][1]++;
  if (((typeof k) != "function")) {
    _$jscoverage['overview.min.js'][1]++;
    throw new TypeError();
  }
  _$jscoverage['overview.min.js'][1]++;
  var h = arguments[1];
  _$jscoverage['overview.min.js'][1]++;
  for (var j = 0; (j < g); (j++)) {
    _$jscoverage['overview.min.js'][1]++;
    if ((j in this)) {
      _$jscoverage['overview.min.js'][1]++;
      k.call(h, this[j], j, this);
    }
}
});
  }
  _$jscoverage['overview.min.js'][1]++;
  function e(j) {
    _$jscoverage['overview.min.js'][1]++;
    var i = ((new Date().getTime() - (j * 1000)) / 1000), g = Math.floor((i / 86400));
    _$jscoverage['overview.min.js'][1]++;
    if ((isNaN(g) || (g < 0))) {
      _$jscoverage['overview.min.js'][1]++;
      return;
    }
    _$jscoverage['overview.min.js'][1]++;
    var h = new Date((j * 1000));
    _$jscoverage['overview.min.js'][1]++;
    return ("<span title=\"" + h.getDay() + "." + (h.getMonth() + 1) + "." + h.getFullYear() + " " + h.getHours() + ":" + h.getMinutes() + "\">" + (((g == 0) && (((i < 60) && "gerade eben") || ((i < 120) && "vor einer Minute") || ((i < 3600) && ("vor " + Math.floor((i / 60)) + " Minuten")) || ((i < 7200) && "vor einer Stunde") || ((i < 86400) && ("vor " + Math.floor((i / 3600)) + " Stunden")))) || ((g == 1) && "Gestern") || ((g < 7) && ("vor " + g + " Tagen")) || ((g < 31) && ("vor " + Math.ceil((g / 7)) + " Wochen")) || ("vor " + Math.ceil((g / 365)) + " Jahren")) + "</span>");
}
  _$jscoverage['overview.min.js'][1]++;
  var a = {terminateInstance: "Instanz beendet", createInstance: "Instanz gestartet", humanActivityExecuted: "Aktivit\u00c3\u00a4t (Human-Task) wurde ausgef\u00c3\u00bchrt", eventActivityExecuted: "Aktivit\u00c3\u00a4t (Event) wurde ausgef\u00c3\u00bchrt", WSActivityExecuted: "Aktivit\u00c3\u00a4t (Webservice-Aufruf) wurde ausgef\u00c3\u00bchrt", WSProviderSelected: "Anbieter ausgew\u00c3\u00a4hlt", startActivityExecution: "Aktivit\u00c3\u00a4t unmittelbar vor Ausf\u00c3\u00bchrung", DataTransferredToWS: "\u00c3\u009cbertragung von Daten an Webservice", DataTransferredFromWS: "R\u00c3\u00bcckgabe von Daten von einem Webservice", HumanTaskExecutorSelected: "Benutzer f\u00c3\u00bcr Aktivit\u00c3\u00a4t ausgew\u00c3\u00a4hlt", DataTransferredToHuman: "\u00c3\u009cbertragung von Daten an Menschen", DataTransferredFromHuman: "Eingabe von Daten durch Menschen"};
  _$jscoverage['overview.min.js'][1]++;
  var f = (function () {
  _$jscoverage['overview.min.js'][1]++;
  var j = {};
  _$jscoverage['overview.min.js'][1]++;
  var h = $("#instancestable");
  _$jscoverage['overview.min.js'][1]++;
  var g = $("<tr><td><a/></td><td/><td/><td/></tr>");
  _$jscoverage['overview.min.js'][1]++;
  function i(n) {
    _$jscoverage['overview.min.js'][1]++;
    var m = {};
    _$jscoverage['overview.min.js'][1]++;
    var l = g.clone();
    _$jscoverage['overview.min.js'][1]++;
    var k = l.find("td");
    _$jscoverage['overview.min.js'][1]++;
    m.update = (function (o) {
  _$jscoverage['overview.min.js'][1]++;
  $(k[0]).find("a").attr("href", (b + o.id)).text(o.id);
  _$jscoverage['overview.min.js'][1]++;
  $(k[1]).text(o.workflowName);
  _$jscoverage['overview.min.js'][1]++;
  $(k[2]).html(e(o.create));
  _$jscoverage['overview.min.js'][1]++;
  $(k[3]).html((a[o.lastEvent] + " " + e(o.finished)));
  _$jscoverage['overview.min.js'][1]++;
  if ((o.lastEvent == "terminateInstance")) {
    _$jscoverage['overview.min.js'][1]++;
    l.addClass("finished-instance");
  }
});
    _$jscoverage['overview.min.js'][1]++;
    l.hide();
    _$jscoverage['overview.min.js'][1]++;
    h.append(l);
    _$jscoverage['overview.min.js'][1]++;
    m.update(n);
    _$jscoverage['overview.min.js'][1]++;
    l.fadeIn();
    _$jscoverage['overview.min.js'][1]++;
    l.css("display", "table-row");
    _$jscoverage['overview.min.js'][1]++;
    return m;
}
  _$jscoverage['overview.min.js'][1]++;
  return ({update: (function (k) {
  _$jscoverage['overview.min.js'][1]++;
  k.forEach((function (l) {
  _$jscoverage['overview.min.js'][1]++;
  if ((! j[l.id])) {
    _$jscoverage['overview.min.js'][1]++;
    j[l.id] = i(l);
  }
  else {
    _$jscoverage['overview.min.js'][1]++;
    j[l.id].update(l);
  }
}));
})});
})();
  _$jscoverage['overview.min.js'][1]++;
  var d = (function () {
  _$jscoverage['overview.min.js'][1]++;
  return ({init: (function g() {
  _$jscoverage['overview.min.js'][1]++;
  $.getJSON(c, {}, (function (h) {
  _$jscoverage['overview.min.js'][1]++;
  f.update(h);
}));
  _$jscoverage['overview.min.js'][1]++;
  setTimeout(g, 5000);
  _$jscoverage['overview.min.js'][1]++;
  return this;
})});
})().init();
}));
