/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['WoSec.js']) {
  _$jscoverage['WoSec.js'] = [];
  _$jscoverage['WoSec.js'][2] = 0;
  _$jscoverage['WoSec.js'][5] = 0;
  _$jscoverage['WoSec.js'][6] = 0;
  _$jscoverage['WoSec.js'][7] = 0;
  _$jscoverage['WoSec.js'][8] = 0;
  _$jscoverage['WoSec.js'][9] = 0;
  _$jscoverage['WoSec.js'][13] = 0;
  _$jscoverage['WoSec.js'][14] = 0;
  _$jscoverage['WoSec.js'][16] = 0;
  _$jscoverage['WoSec.js'][17] = 0;
  _$jscoverage['WoSec.js'][18] = 0;
  _$jscoverage['WoSec.js'][20] = 0;
  _$jscoverage['WoSec.js'][21] = 0;
  _$jscoverage['WoSec.js'][23] = 0;
  _$jscoverage['WoSec.js'][24] = 0;
  _$jscoverage['WoSec.js'][29] = 0;
  _$jscoverage['WoSec.js'][31] = 0;
  _$jscoverage['WoSec.js'][34] = 0;
  _$jscoverage['WoSec.js'][36] = 0;
  _$jscoverage['WoSec.js'][42] = 0;
  _$jscoverage['WoSec.js'][44] = 0;
  _$jscoverage['WoSec.js'][45] = 0;
  _$jscoverage['WoSec.js'][46] = 0;
  _$jscoverage['WoSec.js'][58] = 0;
  _$jscoverage['WoSec.js'][60] = 0;
  _$jscoverage['WoSec.js'][65] = 0;
  _$jscoverage['WoSec.js'][70] = 0;
  _$jscoverage['WoSec.js'][72] = 0;
  _$jscoverage['WoSec.js'][73] = 0;
  _$jscoverage['WoSec.js'][74] = 0;
  _$jscoverage['WoSec.js'][76] = 0;
  _$jscoverage['WoSec.js'][77] = 0;
  _$jscoverage['WoSec.js'][79] = 0;
  _$jscoverage['WoSec.js'][83] = 0;
  _$jscoverage['WoSec.js'][84] = 0;
  _$jscoverage['WoSec.js'][85] = 0;
  _$jscoverage['WoSec.js'][86] = 0;
  _$jscoverage['WoSec.js'][127] = 0;
  _$jscoverage['WoSec.js'][128] = 0;
  _$jscoverage['WoSec.js'][132] = 0;
  _$jscoverage['WoSec.js'][135] = 0;
  _$jscoverage['WoSec.js'][138] = 0;
  _$jscoverage['WoSec.js'][139] = 0;
  _$jscoverage['WoSec.js'][140] = 0;
  _$jscoverage['WoSec.js'][141] = 0;
  _$jscoverage['WoSec.js'][142] = 0;
  _$jscoverage['WoSec.js'][143] = 0;
  _$jscoverage['WoSec.js'][144] = 0;
  _$jscoverage['WoSec.js'][146] = 0;
  _$jscoverage['WoSec.js'][149] = 0;
  _$jscoverage['WoSec.js'][150] = 0;
  _$jscoverage['WoSec.js'][151] = 0;
  _$jscoverage['WoSec.js'][154] = 0;
  _$jscoverage['WoSec.js'][155] = 0;
  _$jscoverage['WoSec.js'][156] = 0;
  _$jscoverage['WoSec.js'][160] = 0;
  _$jscoverage['WoSec.js'][161] = 0;
  _$jscoverage['WoSec.js'][162] = 0;
  _$jscoverage['WoSec.js'][166] = 0;
  _$jscoverage['WoSec.js'][173] = 0;
  _$jscoverage['WoSec.js'][174] = 0;
  _$jscoverage['WoSec.js'][175] = 0;
  _$jscoverage['WoSec.js'][177] = 0;
  _$jscoverage['WoSec.js'][178] = 0;
  _$jscoverage['WoSec.js'][180] = 0;
  _$jscoverage['WoSec.js'][185] = 0;
  _$jscoverage['WoSec.js'][186] = 0;
  _$jscoverage['WoSec.js'][192] = 0;
  _$jscoverage['WoSec.js'][200] = 0;
  _$jscoverage['WoSec.js'][201] = 0;
  _$jscoverage['WoSec.js'][202] = 0;
  _$jscoverage['WoSec.js'][206] = 0;
  _$jscoverage['WoSec.js'][207] = 0;
  _$jscoverage['WoSec.js'][208] = 0;
  _$jscoverage['WoSec.js'][209] = 0;
  _$jscoverage['WoSec.js'][212] = 0;
  _$jscoverage['WoSec.js'][218] = 0;
  _$jscoverage['WoSec.js'][219] = 0;
  _$jscoverage['WoSec.js'][220] = 0;
  _$jscoverage['WoSec.js'][226] = 0;
  _$jscoverage['WoSec.js'][227] = 0;
  _$jscoverage['WoSec.js'][228] = 0;
  _$jscoverage['WoSec.js'][230] = 0;
  _$jscoverage['WoSec.js'][236] = 0;
  _$jscoverage['WoSec.js'][237] = 0;
  _$jscoverage['WoSec.js'][238] = 0;
  _$jscoverage['WoSec.js'][240] = 0;
  _$jscoverage['WoSec.js'][246] = 0;
  _$jscoverage['WoSec.js'][247] = 0;
  _$jscoverage['WoSec.js'][248] = 0;
  _$jscoverage['WoSec.js'][250] = 0;
  _$jscoverage['WoSec.js'][257] = 0;
  _$jscoverage['WoSec.js'][258] = 0;
  _$jscoverage['WoSec.js'][259] = 0;
  _$jscoverage['WoSec.js'][261] = 0;
  _$jscoverage['WoSec.js'][268] = 0;
  _$jscoverage['WoSec.js'][269] = 0;
  _$jscoverage['WoSec.js'][270] = 0;
  _$jscoverage['WoSec.js'][271] = 0;
  _$jscoverage['WoSec.js'][273] = 0;
  _$jscoverage['WoSec.js'][280] = 0;
  _$jscoverage['WoSec.js'][281] = 0;
  _$jscoverage['WoSec.js'][282] = 0;
  _$jscoverage['WoSec.js'][283] = 0;
  _$jscoverage['WoSec.js'][285] = 0;
  _$jscoverage['WoSec.js'][288] = 0;
  _$jscoverage['WoSec.js'][296] = 0;
  _$jscoverage['WoSec.js'][297] = 0;
  _$jscoverage['WoSec.js'][298] = 0;
  _$jscoverage['WoSec.js'][299] = 0;
  _$jscoverage['WoSec.js'][300] = 0;
  _$jscoverage['WoSec.js'][301] = 0;
  _$jscoverage['WoSec.js'][302] = 0;
  _$jscoverage['WoSec.js'][303] = 0;
  _$jscoverage['WoSec.js'][305] = 0;
  _$jscoverage['WoSec.js'][306] = 0;
  _$jscoverage['WoSec.js'][307] = 0;
  _$jscoverage['WoSec.js'][308] = 0;
  _$jscoverage['WoSec.js'][310] = 0;
  _$jscoverage['WoSec.js'][311] = 0;
  _$jscoverage['WoSec.js'][314] = 0;
  _$jscoverage['WoSec.js'][322] = 0;
  _$jscoverage['WoSec.js'][323] = 0;
  _$jscoverage['WoSec.js'][327] = 0;
  _$jscoverage['WoSec.js'][328] = 0;
  _$jscoverage['WoSec.js'][329] = 0;
  _$jscoverage['WoSec.js'][332] = 0;
  _$jscoverage['WoSec.js'][341] = 0;
  _$jscoverage['WoSec.js'][342] = 0;
  _$jscoverage['WoSec.js'][344] = 0;
  _$jscoverage['WoSec.js'][349] = 0;
  _$jscoverage['WoSec.js'][353] = 0;
  _$jscoverage['WoSec.js'][358] = 0;
  _$jscoverage['WoSec.js'][359] = 0;
  _$jscoverage['WoSec.js'][360] = 0;
  _$jscoverage['WoSec.js'][361] = 0;
  _$jscoverage['WoSec.js'][370] = 0;
  _$jscoverage['WoSec.js'][373] = 0;
  _$jscoverage['WoSec.js'][374] = 0;
  _$jscoverage['WoSec.js'][375] = 0;
  _$jscoverage['WoSec.js'][376] = 0;
  _$jscoverage['WoSec.js'][377] = 0;
  _$jscoverage['WoSec.js'][378] = 0;
  _$jscoverage['WoSec.js'][379] = 0;
  _$jscoverage['WoSec.js'][380] = 0;
  _$jscoverage['WoSec.js'][381] = 0;
  _$jscoverage['WoSec.js'][382] = 0;
  _$jscoverage['WoSec.js'][383] = 0;
  _$jscoverage['WoSec.js'][384] = 0;
  _$jscoverage['WoSec.js'][385] = 0;
  _$jscoverage['WoSec.js'][386] = 0;
  _$jscoverage['WoSec.js'][387] = 0;
  _$jscoverage['WoSec.js'][392] = 0;
  _$jscoverage['WoSec.js'][394] = 0;
  _$jscoverage['WoSec.js'][395] = 0;
  _$jscoverage['WoSec.js'][396] = 0;
  _$jscoverage['WoSec.js'][397] = 0;
  _$jscoverage['WoSec.js'][398] = 0;
  _$jscoverage['WoSec.js'][399] = 0;
  _$jscoverage['WoSec.js'][400] = 0;
  _$jscoverage['WoSec.js'][403] = 0;
  _$jscoverage['WoSec.js'][406] = 0;
  _$jscoverage['WoSec.js'][407] = 0;
  _$jscoverage['WoSec.js'][408] = 0;
  _$jscoverage['WoSec.js'][409] = 0;
  _$jscoverage['WoSec.js'][411] = 0;
  _$jscoverage['WoSec.js'][413] = 0;
  _$jscoverage['WoSec.js'][414] = 0;
  _$jscoverage['WoSec.js'][416] = 0;
  _$jscoverage['WoSec.js'][417] = 0;
  _$jscoverage['WoSec.js'][419] = 0;
  _$jscoverage['WoSec.js'][420] = 0;
  _$jscoverage['WoSec.js'][421] = 0;
  _$jscoverage['WoSec.js'][422] = 0;
  _$jscoverage['WoSec.js'][427] = 0;
  _$jscoverage['WoSec.js'][428] = 0;
  _$jscoverage['WoSec.js'][429] = 0;
  _$jscoverage['WoSec.js'][430] = 0;
  _$jscoverage['WoSec.js'][432] = 0;
  _$jscoverage['WoSec.js'][434] = 0;
  _$jscoverage['WoSec.js'][435] = 0;
  _$jscoverage['WoSec.js'][437] = 0;
  _$jscoverage['WoSec.js'][443] = 0;
  _$jscoverage['WoSec.js'][444] = 0;
  _$jscoverage['WoSec.js'][445] = 0;
  _$jscoverage['WoSec.js'][446] = 0;
  _$jscoverage['WoSec.js'][448] = 0;
  _$jscoverage['WoSec.js'][455] = 0;
  _$jscoverage['WoSec.js'][456] = 0;
  _$jscoverage['WoSec.js'][457] = 0;
  _$jscoverage['WoSec.js'][458] = 0;
  _$jscoverage['WoSec.js'][459] = 0;
  _$jscoverage['WoSec.js'][460] = 0;
  _$jscoverage['WoSec.js'][461] = 0;
  _$jscoverage['WoSec.js'][462] = 0;
  _$jscoverage['WoSec.js'][463] = 0;
  _$jscoverage['WoSec.js'][465] = 0;
  _$jscoverage['WoSec.js'][467] = 0;
  _$jscoverage['WoSec.js'][470] = 0;
  _$jscoverage['WoSec.js'][474] = 0;
  _$jscoverage['WoSec.js'][482] = 0;
  _$jscoverage['WoSec.js'][485] = 0;
  _$jscoverage['WoSec.js'][486] = 0;
  _$jscoverage['WoSec.js'][488] = 0;
  _$jscoverage['WoSec.js'][489] = 0;
  _$jscoverage['WoSec.js'][492] = 0;
  _$jscoverage['WoSec.js'][499] = 0;
  _$jscoverage['WoSec.js'][500] = 0;
  _$jscoverage['WoSec.js'][501] = 0;
  _$jscoverage['WoSec.js'][503] = 0;
  _$jscoverage['WoSec.js'][504] = 0;
  _$jscoverage['WoSec.js'][505] = 0;
  _$jscoverage['WoSec.js'][506] = 0;
  _$jscoverage['WoSec.js'][507] = 0;
  _$jscoverage['WoSec.js'][509] = 0;
  _$jscoverage['WoSec.js'][510] = 0;
  _$jscoverage['WoSec.js'][512] = 0;
  _$jscoverage['WoSec.js'][514] = 0;
  _$jscoverage['WoSec.js'][515] = 0;
  _$jscoverage['WoSec.js'][516] = 0;
  _$jscoverage['WoSec.js'][517] = 0;
  _$jscoverage['WoSec.js'][518] = 0;
  _$jscoverage['WoSec.js'][519] = 0;
  _$jscoverage['WoSec.js'][520] = 0;
  _$jscoverage['WoSec.js'][522] = 0;
  _$jscoverage['WoSec.js'][525] = 0;
  _$jscoverage['WoSec.js'][528] = 0;
  _$jscoverage['WoSec.js'][529] = 0;
  _$jscoverage['WoSec.js'][530] = 0;
  _$jscoverage['WoSec.js'][537] = 0;
  _$jscoverage['WoSec.js'][538] = 0;
  _$jscoverage['WoSec.js'][545] = 0;
  _$jscoverage['WoSec.js'][546] = 0;
  _$jscoverage['WoSec.js'][554] = 0;
  _$jscoverage['WoSec.js'][555] = 0;
  _$jscoverage['WoSec.js'][557] = 0;
  _$jscoverage['WoSec.js'][558] = 0;
  _$jscoverage['WoSec.js'][559] = 0;
  _$jscoverage['WoSec.js'][561] = 0;
  _$jscoverage['WoSec.js'][568] = 0;
  _$jscoverage['WoSec.js'][581] = 0;
  _$jscoverage['WoSec.js'][582] = 0;
  _$jscoverage['WoSec.js'][583] = 0;
  _$jscoverage['WoSec.js'][589] = 0;
  _$jscoverage['WoSec.js'][594] = 0;
  _$jscoverage['WoSec.js'][599] = 0;
  _$jscoverage['WoSec.js'][600] = 0;
  _$jscoverage['WoSec.js'][606] = 0;
  _$jscoverage['WoSec.js'][611] = 0;
  _$jscoverage['WoSec.js'][616] = 0;
  _$jscoverage['WoSec.js'][622] = 0;
  _$jscoverage['WoSec.js'][623] = 0;
  _$jscoverage['WoSec.js'][624] = 0;
  _$jscoverage['WoSec.js'][630] = 0;
  _$jscoverage['WoSec.js'][635] = 0;
  _$jscoverage['WoSec.js'][641] = 0;
  _$jscoverage['WoSec.js'][643] = 0;
  _$jscoverage['WoSec.js'][646] = 0;
  _$jscoverage['WoSec.js'][691] = 0;
  _$jscoverage['WoSec.js'][702] = 0;
  _$jscoverage['WoSec.js'][703] = 0;
  _$jscoverage['WoSec.js'][704] = 0;
  _$jscoverage['WoSec.js'][705] = 0;
  _$jscoverage['WoSec.js'][706] = 0;
  _$jscoverage['WoSec.js'][707] = 0;
  _$jscoverage['WoSec.js'][709] = 0;
  _$jscoverage['WoSec.js'][716] = 0;
  _$jscoverage['WoSec.js'][722] = 0;
  _$jscoverage['WoSec.js'][723] = 0;
  _$jscoverage['WoSec.js'][724] = 0;
  _$jscoverage['WoSec.js'][726] = 0;
  _$jscoverage['WoSec.js'][728] = 0;
  _$jscoverage['WoSec.js'][731] = 0;
  _$jscoverage['WoSec.js'][740] = 0;
  _$jscoverage['WoSec.js'][742] = 0;
  _$jscoverage['WoSec.js'][743] = 0;
  _$jscoverage['WoSec.js'][744] = 0;
  _$jscoverage['WoSec.js'][745] = 0;
  _$jscoverage['WoSec.js'][747] = 0;
  _$jscoverage['WoSec.js'][748] = 0;
  _$jscoverage['WoSec.js'][749] = 0;
  _$jscoverage['WoSec.js'][750] = 0;
  _$jscoverage['WoSec.js'][751] = 0;
  _$jscoverage['WoSec.js'][753] = 0;
  _$jscoverage['WoSec.js'][754] = 0;
  _$jscoverage['WoSec.js'][755] = 0;
  _$jscoverage['WoSec.js'][757] = 0;
  _$jscoverage['WoSec.js'][759] = 0;
  _$jscoverage['WoSec.js'][760] = 0;
  _$jscoverage['WoSec.js'][761] = 0;
  _$jscoverage['WoSec.js'][763] = 0;
  _$jscoverage['WoSec.js'][764] = 0;
  _$jscoverage['WoSec.js'][766] = 0;
  _$jscoverage['WoSec.js'][768] = 0;
  _$jscoverage['WoSec.js'][776] = 0;
  _$jscoverage['WoSec.js'][777] = 0;
  _$jscoverage['WoSec.js'][778] = 0;
  _$jscoverage['WoSec.js'][785] = 0;
  _$jscoverage['WoSec.js'][793] = 0;
  _$jscoverage['WoSec.js'][794] = 0;
  _$jscoverage['WoSec.js'][796] = 0;
  _$jscoverage['WoSec.js'][804] = 0;
  _$jscoverage['WoSec.js'][805] = 0;
  _$jscoverage['WoSec.js'][807] = 0;
  _$jscoverage['WoSec.js'][812] = 0;
  _$jscoverage['WoSec.js'][814] = 0;
  _$jscoverage['WoSec.js'][823] = 0;
  _$jscoverage['WoSec.js'][824] = 0;
  _$jscoverage['WoSec.js'][825] = 0;
  _$jscoverage['WoSec.js'][827] = 0;
  _$jscoverage['WoSec.js'][829] = 0;
  _$jscoverage['WoSec.js'][834] = 0;
  _$jscoverage['WoSec.js'][835] = 0;
  _$jscoverage['WoSec.js'][841] = 0;
  _$jscoverage['WoSec.js'][842] = 0;
  _$jscoverage['WoSec.js'][847] = 0;
  _$jscoverage['WoSec.js'][848] = 0;
  _$jscoverage['WoSec.js'][854] = 0;
  _$jscoverage['WoSec.js'][855] = 0;
  _$jscoverage['WoSec.js'][857] = 0;
  _$jscoverage['WoSec.js'][858] = 0;
  _$jscoverage['WoSec.js'][870] = 0;
  _$jscoverage['WoSec.js'][871] = 0;
  _$jscoverage['WoSec.js'][880] = 0;
  _$jscoverage['WoSec.js'][881] = 0;
  _$jscoverage['WoSec.js'][882] = 0;
  _$jscoverage['WoSec.js'][884] = 0;
  _$jscoverage['WoSec.js'][888] = 0;
  _$jscoverage['WoSec.js'][889] = 0;
  _$jscoverage['WoSec.js'][890] = 0;
  _$jscoverage['WoSec.js'][891] = 0;
  _$jscoverage['WoSec.js'][893] = 0;
  _$jscoverage['WoSec.js'][894] = 0;
  _$jscoverage['WoSec.js'][895] = 0;
  _$jscoverage['WoSec.js'][896] = 0;
  _$jscoverage['WoSec.js'][901] = 0;
  _$jscoverage['WoSec.js'][902] = 0;
  _$jscoverage['WoSec.js'][903] = 0;
  _$jscoverage['WoSec.js'][904] = 0;
  _$jscoverage['WoSec.js'][912] = 0;
  _$jscoverage['WoSec.js'][913] = 0;
  _$jscoverage['WoSec.js'][924] = 0;
  _$jscoverage['WoSec.js'][925] = 0;
  _$jscoverage['WoSec.js'][926] = 0;
  _$jscoverage['WoSec.js'][927] = 0;
  _$jscoverage['WoSec.js'][929] = 0;
  _$jscoverage['WoSec.js'][933] = 0;
  _$jscoverage['WoSec.js'][934] = 0;
  _$jscoverage['WoSec.js'][935] = 0;
  _$jscoverage['WoSec.js'][936] = 0;
  _$jscoverage['WoSec.js'][937] = 0;
  _$jscoverage['WoSec.js'][938] = 0;
  _$jscoverage['WoSec.js'][940] = 0;
  _$jscoverage['WoSec.js'][941] = 0;
  _$jscoverage['WoSec.js'][942] = 0;
  _$jscoverage['WoSec.js'][943] = 0;
  _$jscoverage['WoSec.js'][954] = 0;
  _$jscoverage['WoSec.js'][955] = 0;
  _$jscoverage['WoSec.js'][966] = 0;
  _$jscoverage['WoSec.js'][967] = 0;
  _$jscoverage['WoSec.js'][968] = 0;
  _$jscoverage['WoSec.js'][969] = 0;
  _$jscoverage['WoSec.js'][971] = 0;
  _$jscoverage['WoSec.js'][975] = 0;
  _$jscoverage['WoSec.js'][976] = 0;
  _$jscoverage['WoSec.js'][977] = 0;
  _$jscoverage['WoSec.js'][983] = 0;
  _$jscoverage['WoSec.js'][984] = 0;
  _$jscoverage['WoSec.js'][985] = 0;
  _$jscoverage['WoSec.js'][995] = 0;
  _$jscoverage['WoSec.js'][996] = 0;
  _$jscoverage['WoSec.js'][1007] = 0;
  _$jscoverage['WoSec.js'][1008] = 0;
  _$jscoverage['WoSec.js'][1009] = 0;
  _$jscoverage['WoSec.js'][1010] = 0;
  _$jscoverage['WoSec.js'][1012] = 0;
  _$jscoverage['WoSec.js'][1016] = 0;
  _$jscoverage['WoSec.js'][1017] = 0;
  _$jscoverage['WoSec.js'][1018] = 0;
  _$jscoverage['WoSec.js'][1024] = 0;
  _$jscoverage['WoSec.js'][1025] = 0;
  _$jscoverage['WoSec.js'][1026] = 0;
  _$jscoverage['WoSec.js'][1036] = 0;
  _$jscoverage['WoSec.js'][1037] = 0;
  _$jscoverage['WoSec.js'][1041] = 0;
  _$jscoverage['WoSec.js'][1042] = 0;
  _$jscoverage['WoSec.js'][1043] = 0;
  _$jscoverage['WoSec.js'][1044] = 0;
  _$jscoverage['WoSec.js'][1045] = 0;
  _$jscoverage['WoSec.js'][1046] = 0;
  _$jscoverage['WoSec.js'][1048] = 0;
  _$jscoverage['WoSec.js'][1058] = 0;
  _$jscoverage['WoSec.js'][1059] = 0;
  _$jscoverage['WoSec.js'][1060] = 0;
  _$jscoverage['WoSec.js'][1062] = 0;
  _$jscoverage['WoSec.js'][1063] = 0;
  _$jscoverage['WoSec.js'][1064] = 0;
  _$jscoverage['WoSec.js'][1066] = 0;
  _$jscoverage['WoSec.js'][1073] = 0;
  _$jscoverage['WoSec.js'][1074] = 0;
  _$jscoverage['WoSec.js'][1076] = 0;
  _$jscoverage['WoSec.js'][1077] = 0;
  _$jscoverage['WoSec.js'][1084] = 0;
  _$jscoverage['WoSec.js'][1093] = 0;
  _$jscoverage['WoSec.js'][1094] = 0;
  _$jscoverage['WoSec.js'][1095] = 0;
  _$jscoverage['WoSec.js'][1096] = 0;
  _$jscoverage['WoSec.js'][1098] = 0;
  _$jscoverage['WoSec.js'][1100] = 0;
  _$jscoverage['WoSec.js'][1101] = 0;
  _$jscoverage['WoSec.js'][1103] = 0;
  _$jscoverage['WoSec.js'][1115] = 0;
  _$jscoverage['WoSec.js'][1116] = 0;
  _$jscoverage['WoSec.js'][1117] = 0;
  _$jscoverage['WoSec.js'][1118] = 0;
  _$jscoverage['WoSec.js'][1119] = 0;
  _$jscoverage['WoSec.js'][1120] = 0;
  _$jscoverage['WoSec.js'][1122] = 0;
  _$jscoverage['WoSec.js'][1123] = 0;
  _$jscoverage['WoSec.js'][1125] = 0;
  _$jscoverage['WoSec.js'][1127] = 0;
  _$jscoverage['WoSec.js'][1140] = 0;
  _$jscoverage['WoSec.js'][1141] = 0;
  _$jscoverage['WoSec.js'][1142] = 0;
  _$jscoverage['WoSec.js'][1144] = 0;
  _$jscoverage['WoSec.js'][1146] = 0;
  _$jscoverage['WoSec.js'][1147] = 0;
  _$jscoverage['WoSec.js'][1156] = 0;
  _$jscoverage['WoSec.js'][1157] = 0;
  _$jscoverage['WoSec.js'][1159] = 0;
  _$jscoverage['WoSec.js'][1169] = 0;
  _$jscoverage['WoSec.js'][1170] = 0;
  _$jscoverage['WoSec.js'][1171] = 0;
  _$jscoverage['WoSec.js'][1173] = 0;
  _$jscoverage['WoSec.js'][1174] = 0;
  _$jscoverage['WoSec.js'][1175] = 0;
  _$jscoverage['WoSec.js'][1177] = 0;
  _$jscoverage['WoSec.js'][1182] = 0;
  _$jscoverage['WoSec.js'][1183] = 0;
  _$jscoverage['WoSec.js'][1184] = 0;
  _$jscoverage['WoSec.js'][1185] = 0;
  _$jscoverage['WoSec.js'][1188] = 0;
}
_$jscoverage['WoSec.js'].source = ["","<span class=\"k\">var</span> WoSec <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span> <span class=\"c\">// Namespace</span>","","<span class=\"c\">// ES5 Functions</span>","<span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">typeof</span> Object<span class=\"k\">.</span>create <span class=\"k\">!==</span> <span class=\"s\">'function'</span><span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"c\">//source: http://javascript.crockford.com/prototypal.html</span>","    Object<span class=\"k\">.</span>create <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>o<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">function</span> F<span class=\"k\">()</span> <span class=\"k\">{}</span>","        F<span class=\"k\">.</span>prototype <span class=\"k\">=</span> o<span class=\"k\">;</span>","        <span class=\"k\">return</span> <span class=\"k\">new</span> F<span class=\"k\">();</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","<span class=\"k\">}</span>","","<span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">typeof</span> Array<span class=\"k\">.</span>prototype<span class=\"k\">.</span>forEach <span class=\"k\">!==</span> <span class=\"s\">'function'</span><span class=\"k\">)</span> <span class=\"k\">{</span>","  Array<span class=\"k\">.</span>prototype<span class=\"k\">.</span>forEach <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>callback<span class=\"k\">)</span><span class=\"c\">//[, thisObject])</span>","  <span class=\"k\">{</span>","    <span class=\"k\">var</span> len <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>length<span class=\"k\">;</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">typeof</span> callback <span class=\"k\">!=</span> <span class=\"s\">\"function\"</span><span class=\"k\">)</span>","      <span class=\"k\">throw</span> <span class=\"k\">new</span> TypeError<span class=\"k\">();</span>","","    <span class=\"k\">var</span> thisObject <span class=\"k\">=</span> arguments<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">];</span>","    <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> len<span class=\"k\">;</span> i<span class=\"k\">++)</span>","    <span class=\"k\">{</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span>i <span class=\"k\">in</span> <span class=\"k\">this</span><span class=\"k\">)</span>","        callback<span class=\"k\">.</span>call<span class=\"k\">(</span>thisObject<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">[</span>i<span class=\"k\">],</span> i<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">;</span>","<span class=\"k\">}</span>","","<span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">typeof</span> Function<span class=\"k\">.</span>prototype<span class=\"k\">.</span>bind <span class=\"k\">!==</span> <span class=\"s\">\"function\"</span><span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"c\">// http://webreflection.blogspot.com/2010/02/functionprototypebind.html</span>","","    Function<span class=\"k\">.</span>prototype<span class=\"k\">.</span>bind <span class=\"k\">=</span> <span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">(</span>slice<span class=\"k\">)</span><span class=\"k\">{</span>","","        <span class=\"c\">// (C) WebReflection - Mit Style License</span>","        <span class=\"k\">function</span> bind<span class=\"k\">(</span>context<span class=\"k\">)</span> <span class=\"k\">{</span>","","            <span class=\"k\">var</span> self <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">;</span> <span class=\"c\">// \"trapped\" function reference</span>","","            <span class=\"c\">// only if there is more than an argument</span>","            <span class=\"c\">// we are interested into more complex operations</span>","            <span class=\"c\">// this will speed up common bind creation</span>","            <span class=\"c\">// avoiding useless slices over arguments</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"s\">1</span> <span class=\"k\">&lt;</span> arguments<span class=\"k\">.</span>length<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"c\">// extra arguments to send by default</span>","                <span class=\"k\">var</span> $arguments <span class=\"k\">=</span> slice<span class=\"k\">.</span>call<span class=\"k\">(</span>arguments<span class=\"k\">,</span> <span class=\"s\">1</span><span class=\"k\">);</span>","                <span class=\"k\">return</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","                    <span class=\"k\">return</span> self<span class=\"k\">.</span>apply<span class=\"k\">(</span>","                        context<span class=\"k\">,</span>","                        <span class=\"c\">// thanks @kangax for this suggestion</span>","                        arguments<span class=\"k\">.</span>length <span class=\"k\">?</span>","                            <span class=\"c\">// concat arguments with those received</span>","                            $arguments<span class=\"k\">.</span>concat<span class=\"k\">(</span>slice<span class=\"k\">.</span>call<span class=\"k\">(</span>arguments<span class=\"k\">))</span> <span class=\"k\">:</span>","                            <span class=\"c\">// send just arguments, no concat, no slice</span>","                            $arguments","                    <span class=\"k\">);</span>","                <span class=\"k\">}</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","            <span class=\"c\">// optimized callback</span>","            <span class=\"k\">return</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","                <span class=\"c\">// speed up when function is called without arguments</span>","                <span class=\"k\">return</span> arguments<span class=\"k\">.</span>length <span class=\"k\">?</span> self<span class=\"k\">.</span>apply<span class=\"k\">(</span>context<span class=\"k\">,</span> arguments<span class=\"k\">)</span> <span class=\"k\">:</span> self<span class=\"k\">.</span>call<span class=\"k\">(</span>context<span class=\"k\">);</span>","            <span class=\"k\">}</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        <span class=\"c\">// the named function</span>","        <span class=\"k\">return</span> bind<span class=\"k\">;</span>","","    <span class=\"k\">}</span><span class=\"k\">(</span>Array<span class=\"k\">.</span>prototype<span class=\"k\">.</span>slice<span class=\"k\">));</span>","<span class=\"k\">}</span>","","WoSec<span class=\"k\">.</span>baseObject <span class=\"k\">=</span> <span class=\"k\">{</span>","\tlater<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>msec<span class=\"k\">,</span> method<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> that <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">,</span> args <span class=\"k\">=</span> Array<span class=\"k\">.</span>prototype<span class=\"k\">.</span>slice<span class=\"k\">.</span>apply<span class=\"k\">(</span>arguments<span class=\"k\">,</span> <span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">]);</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">typeof</span> method <span class=\"k\">===</span> <span class=\"s\">'string'</span><span class=\"k\">)</span> <span class=\"k\">{</span>","            method <span class=\"k\">=</span> that<span class=\"k\">[</span>method<span class=\"k\">];</span>","        <span class=\"k\">}</span>","        setTimeout<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            method<span class=\"k\">.</span>apply<span class=\"k\">(</span>that<span class=\"k\">,</span> args<span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span> msec<span class=\"k\">);</span>","        <span class=\"k\">return</span> that<span class=\"k\">;</span> <span class=\"c\">// Cascade</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span>","","WoSec<span class=\"k\">.</span>inherit <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>subType<span class=\"k\">,</span> superType<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> prototype <span class=\"k\">=</span> Object<span class=\"k\">.</span>create<span class=\"k\">(</span>superType<span class=\"k\">.</span>prototype<span class=\"k\">);</span>","    prototype<span class=\"k\">.</span>constructor <span class=\"k\">=</span> subType<span class=\"k\">;</span>","    subType<span class=\"k\">.</span>prototype <span class=\"k\">=</span> prototype<span class=\"k\">;</span>","<span class=\"k\">}</span>","","","<span class=\"c\">// crashes with jquery ui, moved to WoSec.baseObject</span>","<span class=\"c\">//if (typeof Object.prototype.later !== 'function') { // source: source: http://www.slideshare.net/douglascrockford/crockford-on-javascript-act-iii-function-the-ultimate (slides 43/44)</span>","<span class=\"c\">//\tObject.prototype.later = function (msec, method) {</span>","<span class=\"c\">//\t\tvar that = this, args = Array.prototype.slice.apply(arguments, [2]);</span>","<span class=\"c\">//\t\tif (typeof method === 'string') {</span>","<span class=\"c\">//\t\t\tmethod = that[method];</span>","<span class=\"c\">//\t\t}</span>","<span class=\"c\">//\t\tsetTimeout(function () {</span>","<span class=\"c\">//\t\t\tmethod.apply(that, args);</span>","<span class=\"c\">//\t\t}, msec);</span>","<span class=\"c\">//\t\treturn that; // Cascade</span>","<span class=\"c\">//\t};</span>","<span class=\"c\">//}</span>","","","<span class=\"c\">//function class(extend, initializer, methods) { // aka new_constructor, source: http://www.slideshare.net/douglascrockford/crockford-on-javascript-act-iii-function-the-ultimate </span>","<span class=\"c\">//\tvar func, prototype = Object.create(extend &amp;&amp; extend.prototype);</span>","<span class=\"c\">//\tif (methods) {</span>","<span class=\"c\">//\t\tmethods.keys().forEach(function (key) {</span>","<span class=\"c\">//\t\tprototype[key] = methods[key];</span>","<span class=\"c\">//\t});</span>","<span class=\"c\">//\t}</span>","<span class=\"c\">//\tfunc = function () {</span>","<span class=\"c\">//\t\tvar that = Object.create(prototype);</span>","<span class=\"c\">//\tif (typeof initializer === 'function') {</span>","<span class=\"c\">//\t\tinitializer.apply(that, arguments);</span>","<span class=\"c\">//\t}</span>","<span class=\"c\">//\treturn that;</span>","<span class=\"c\">//\t};</span>","<span class=\"c\">//\tfunc.prototype = prototype;</span>","<span class=\"c\">//\tprototype.constructor = func;</span>","<span class=\"c\">//\treturn func;</span>","<span class=\"c\">//}</span>","<span class=\"c\">/**</span>","<span class=\"c\"> * Singleton (UtilityKlasse), das Funktionalit&#195;&#164;t zur Verwaltung von SVG-Elementen bereitstellt;</span>","<span class=\"c\"> * erstellt SVGRectangles.</span>","<span class=\"c\"> */</span>","WoSec<span class=\"k\">.</span>svgUtility <span class=\"k\">=</span> <span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t<span class=\"k\">var</span> CSS_ID_COLORSTORE <span class=\"k\">=</span> <span class=\"s\">'color-store'</span>","\t<span class=\"k\">,</span>\tCSS_ID_COLORSTORE_UNOBTRUSIVE_COLOR <span class=\"k\">=</span> <span class=\"s\">'rect-unobtrusive'</span>","\t<span class=\"k\">,</span>   CSS_ID_COLORSTORE_OBTRUSIVE_COLOR <span class=\"k\">=</span> <span class=\"s\">'rect-obtrusive'</span>","\t<span class=\"k\">,</span>   CSS_ID_COLORSTORE_RESET_COLOR <span class=\"k\">=</span> <span class=\"s\">'rect-reset'</span><span class=\"k\">;</span>","\t<span class=\"k\">var</span> ANIMATION_IMAGE_PATH <span class=\"k\">=</span> <span class=\"s\">\"media/images/fileicon.png\"</span> <span class=\"c\">// {width: 34, height: 44}</span>","\t<span class=\"k\">,</span>\tANIMATION_IMAGE_SIZE <span class=\"k\">=</span> <span class=\"k\">{</span>width<span class=\"k\">:</span> <span class=\"s\">25.5</span><span class=\"k\">,</span> height<span class=\"k\">:</span> <span class=\"s\">33</span><span class=\"k\">}</span><span class=\"k\">;</span>","\t","\t<span class=\"k\">var</span> $ <span class=\"k\">=</span> jQuery<span class=\"k\">;</span>","\t","    ","    <span class=\"k\">var</span> animationPrototype<span class=\"k\">;</span>","\t<span class=\"k\">function</span> getAnimationPrototype<span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">if</span> <span class=\"k\">(!</span>animationPrototype<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\tanimationPrototype <span class=\"k\">=</span> document<span class=\"k\">.</span>createElementNS<span class=\"k\">(</span><span class=\"s\">'http://www.w3.org/2000/svg'</span><span class=\"k\">,</span> <span class=\"s\">\"image\"</span><span class=\"k\">);</span>","\t\t\tanimationPrototype<span class=\"k\">.</span>setAttributeNS<span class=\"k\">(</span><span class=\"s\">\"http://www.w3.org/1999/xlink\"</span><span class=\"k\">,</span><span class=\"s\">\"xlink:href\"</span><span class=\"k\">,</span> ANIMATION_IMAGE_PATH<span class=\"k\">);</span>","\t\t\tanimationPrototype<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span><span class=\"s\">\"width\"</span><span class=\"k\">,</span> ANIMATION_IMAGE_SIZE<span class=\"k\">.</span>width<span class=\"k\">);</span>","\t\t\tanimationPrototype<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span><span class=\"s\">\"height\"</span><span class=\"k\">,</span> ANIMATION_IMAGE_SIZE<span class=\"k\">.</span>height<span class=\"k\">);</span>","\t\t<span class=\"k\">}</span>","\t\t<span class=\"k\">return</span> animationPrototype<span class=\"k\">;</span>","\t<span class=\"k\">}</span>","","    <span class=\"k\">function</span> getJQuerySVGRectanglesByActivityID<span class=\"k\">(</span>activityID<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> $<span class=\"k\">(</span><span class=\"s\">'svg rect'</span><span class=\"k\">).</span>filter<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> $<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>attr<span class=\"k\">(</span><span class=\"s\">'bpmn:activity-id'</span><span class=\"k\">)</span> <span class=\"k\">==</span> activityID<span class=\"k\">;</span><span class=\"c\">// &amp;&amp; $(this).attr('fill') == 'white';</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","\t<span class=\"k\">function</span> getCircles<span class=\"k\">(</span>activityID<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> $<span class=\"k\">(</span><span class=\"s\">'svg circle'</span><span class=\"k\">).</span>filter<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> $<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>attr<span class=\"k\">(</span><span class=\"s\">'bpmn:activity-id'</span><span class=\"k\">)</span> <span class=\"k\">==</span> activityID<span class=\"k\">;</span><span class=\"c\">// &amp;&amp; $(this).attr('fill') == 'white';</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","\t<span class=\"k\">}</span>","","    <span class=\"k\">function</span> getJQuerySVGRectanglesByActivityGroupID<span class=\"k\">(</span>activityGroupID<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> $<span class=\"k\">(</span><span class=\"s\">'svg rect'</span><span class=\"k\">).</span>filter<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> $<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>attr<span class=\"k\">(</span><span class=\"s\">'bpmn:pool-id'</span><span class=\"k\">)</span> <span class=\"k\">==</span> activityGroupID<span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","    ","    <span class=\"k\">return</span> <span class=\"k\">{</span>","\t\t<span class=\"c\">/**</span>","<span class=\"c\">\t\t * Bietet Zugriff und Manipulationsm&#195;&#182;glichkeiten auf ein Task-Rechteck im SVG.</span>","<span class=\"c\">\t\t * @param {String} activityID</span>","<span class=\"c\">\t\t * @return {SVGRectangle} neues SVGRechteck</span>","<span class=\"c\">\t\t */</span>","        getTaskRectangle<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>activityID<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> rectangles <span class=\"k\">=</span> getJQuerySVGRectanglesByActivityID<span class=\"k\">(</span>activityID<span class=\"k\">);</span>","\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>rectangles<span class=\"k\">.</span>length <span class=\"k\">==</span> <span class=\"s\">0</span><span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"c\">// couldn't find rectangles, try circles (\"start\"-task)</span>","\t\t\t\trectangles <span class=\"k\">=</span> getCircles<span class=\"k\">(</span>activityID<span class=\"k\">);</span>","\t\t\t<span class=\"k\">}</span>","\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>rectangles<span class=\"k\">.</span>length <span class=\"k\">==</span> <span class=\"s\">0</span><span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">throw</span> <span class=\"k\">new</span> Error<span class=\"k\">(</span><span class=\"s\">\"No rectangles/circles with activityID:[\"</span> <span class=\"k\">+</span> activityID <span class=\"k\">+</span> <span class=\"s\">\"] found\"</span><span class=\"k\">);</span>","\t\t\t<span class=\"k\">}</span>","            <span class=\"k\">var</span> that <span class=\"k\">=</span> Object<span class=\"k\">.</span>create<span class=\"k\">(</span>WoSec<span class=\"k\">.</span>baseObject<span class=\"k\">);</span>","\t\t\t<span class=\"c\">/**</span>","<span class=\"c\">\t\t\t * Gibt die Position des Rechtecks zur&#195;&#188;ck.</span>","<span class=\"c\">\t\t\t * @return {Object} Position mit x,y,width und height- Eigenschaften (Integer), sowie getCenter()-Methode, welche den Mittelpunkt des Rechtecks zur&#195;&#188;ck gibt</span>","<span class=\"c\">\t\t\t */</span>","\t\t\tthat<span class=\"k\">.</span>getPosition <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">return</span> <span class=\"k\">{</span>","\t\t\t\t\tx<span class=\"k\">:</span> parseInt<span class=\"k\">(</span>$<span class=\"k\">(</span>rectangles<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]).</span>attr<span class=\"k\">(</span><span class=\"s\">\"x\"</span><span class=\"k\">)),</span>","\t\t\t\t\ty<span class=\"k\">:</span> parseInt<span class=\"k\">(</span>$<span class=\"k\">(</span>rectangles<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]).</span>attr<span class=\"k\">(</span><span class=\"s\">\"y\"</span><span class=\"k\">)),</span>","\t\t\t\t\twidth<span class=\"k\">:</span> parseInt<span class=\"k\">(</span>$<span class=\"k\">(</span>rectangles<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]).</span>attr<span class=\"k\">(</span><span class=\"s\">\"width\"</span><span class=\"k\">)),</span>","\t\t\t\t\theight<span class=\"k\">:</span> parseInt<span class=\"k\">(</span>$<span class=\"k\">(</span>rectangles<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]).</span>attr<span class=\"k\">(</span><span class=\"s\">\"height\"</span><span class=\"k\">)),</span>","\t\t\t\t\tgetCenter<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t\t\t\t\t<span class=\"k\">return</span> <span class=\"k\">{</span>","\t\t\t\t\t\t\tx<span class=\"k\">:</span> <span class=\"k\">this</span><span class=\"k\">.</span>x <span class=\"k\">+</span> <span class=\"k\">this</span><span class=\"k\">.</span>width<span class=\"k\">/</span><span class=\"s\">2</span><span class=\"k\">,</span>","\t\t\t\t\t\t\ty<span class=\"k\">:</span> <span class=\"k\">this</span><span class=\"k\">.</span>y <span class=\"k\">+</span> <span class=\"k\">this</span><span class=\"k\">.</span>height<span class=\"k\">/</span><span class=\"s\">2</span>","\t\t\t\t\t\t<span class=\"k\">}</span><span class=\"k\">;</span>","\t\t\t\t\t<span class=\"k\">}</span>","\t\t\t\t<span class=\"k\">}</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">;</span>","\t\t\t","\t\t\t<span class=\"k\">var</span> texts <span class=\"k\">=</span> $<span class=\"k\">(</span><span class=\"s\">\"svg text\"</span><span class=\"k\">).</span>filter<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">var</span> pos <span class=\"k\">=</span> that<span class=\"k\">.</span>getPosition<span class=\"k\">();</span>","\t\t\t\t<span class=\"k\">return</span> Math<span class=\"k\">.</span>abs<span class=\"k\">(</span>parseInt<span class=\"k\">(</span>$<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>attr<span class=\"k\">(</span><span class=\"s\">'x'</span><span class=\"k\">))</span> <span class=\"k\">-</span> pos<span class=\"k\">.</span>x<span class=\"k\">)</span> <span class=\"k\">&lt;</span> pos<span class=\"k\">.</span>width","\t\t\t\t    <span class=\"k\">&amp;&amp;</span> Math<span class=\"k\">.</span>abs<span class=\"k\">(</span>parseInt<span class=\"k\">(</span>$<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>attr<span class=\"k\">(</span><span class=\"s\">'y'</span><span class=\"k\">))</span> <span class=\"k\">-</span> pos<span class=\"k\">.</span>y<span class=\"k\">)</span> <span class=\"k\">&lt;</span> pos<span class=\"k\">.</span>height<span class=\"k\">;</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t\t\t","\t\t\t<span class=\"k\">function</span> adjustPositionForAnimation<span class=\"k\">(</span>position<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\tposition<span class=\"k\">.</span>x <span class=\"k\">-=</span> ANIMATION_IMAGE_SIZE<span class=\"k\">.</span>width<span class=\"k\">/</span><span class=\"s\">2</span><span class=\"k\">;</span>","\t\t\t\tposition<span class=\"k\">.</span>y <span class=\"k\">-=</span> ANIMATION_IMAGE_SIZE<span class=\"k\">.</span>height<span class=\"k\">/</span><span class=\"s\">2</span><span class=\"k\">;</span>","\t\t\t\t<span class=\"k\">return</span> position<span class=\"k\">;</span>","\t\t\t<span class=\"k\">}</span>","\t\t\t","\t\t\t<span class=\"k\">var</span> animation <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>createAnimation<span class=\"k\">(</span>activityID<span class=\"k\">,</span> adjustPositionForAnimation<span class=\"k\">(</span>that<span class=\"k\">.</span>getPosition<span class=\"k\">().</span>getCenter<span class=\"k\">()));</span>","\t\t\t<span class=\"c\">/**</span>","<span class=\"c\">\t\t\t * Zeigt eine Datenanimation zwischen zwei Tasks</span>","<span class=\"c\">\t\t\t * @param {Task} Ziel-Task</span>","<span class=\"c\">\t\t\t * @return {SVGRectangle} self</span>","<span class=\"c\">\t\t\t */</span>","\t\t\tthat<span class=\"k\">.</span>showAnimation <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>task<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\tanimation<span class=\"k\">.</span>show<span class=\"k\">(</span>adjustPositionForAnimation<span class=\"k\">(</span>task<span class=\"k\">.</span>getPosition<span class=\"k\">().</span>getCenter<span class=\"k\">()));</span>","\t\t\t\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","\t\t\t<span class=\"k\">}</span>","\t\t\t<span class=\"c\">/**</span>","<span class=\"c\">\t\t\t * Hebt das Rechteck hervor</span>","<span class=\"c\">\t\t\t * @return {SVGRectangle} self</span>","<span class=\"c\">\t\t\t */</span>","            that<span class=\"k\">.</span>highlight <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                rectangles<span class=\"k\">.</span>each<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t\t\t\t$<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>effect<span class=\"k\">(</span><span class=\"s\">'pulsate'</span><span class=\"k\">,</span> <span class=\"k\">{</span> times<span class=\"k\">:</span><span class=\"s\">3</span> <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"s\">1000</span><span class=\"k\">);</span>","\t\t\t\t<span class=\"k\">}</span><span class=\"k\">)</span>","\t            <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","            <span class=\"k\">}</span><span class=\"k\">;</span>","\t\t\t<span class=\"c\">/**</span>","<span class=\"c\">\t\t\t * F&#195;&#164;rbt das Rechteck in einer auff&#195;&#164;lligen Farbe.</span>","<span class=\"c\">\t\t\t * @return {SVGRectangle} self</span>","<span class=\"c\">\t\t\t */</span>","            that<span class=\"k\">.</span>markObtrusive <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                rectangles<span class=\"k\">.</span>each<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t\t\t\t$<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>attr<span class=\"k\">(</span><span class=\"s\">'fill'</span><span class=\"k\">,</span> $<span class=\"k\">(</span><span class=\"s\">'#'</span><span class=\"k\">+</span>CSS_ID_COLORSTORE_OBTRUSIVE_COLOR<span class=\"k\">).</span>css<span class=\"k\">(</span><span class=\"s\">'color'</span><span class=\"k\">));</span>","\t\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","                <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","            <span class=\"k\">}</span><span class=\"k\">;</span>","\t\t\t<span class=\"c\">/**</span>","<span class=\"c\">\t\t\t * F&#195;&#164;rbt das Rechteck in einer unauff&#195;&#164;lligen Farbe.</span>","<span class=\"c\">\t\t\t * @return {SVGRectangle} self</span>","<span class=\"c\">\t\t\t */</span>","            that<span class=\"k\">.</span>markUnobtrusive <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                rectangles<span class=\"k\">.</span>each<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                    $<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>attr<span class=\"k\">(</span><span class=\"s\">'fill'</span><span class=\"k\">,</span> $<span class=\"k\">(</span><span class=\"s\">'#'</span><span class=\"k\">+</span>CSS_ID_COLORSTORE_UNOBTRUSIVE_COLOR<span class=\"k\">).</span>css<span class=\"k\">(</span><span class=\"s\">'color'</span><span class=\"k\">));</span>","                <span class=\"k\">}</span><span class=\"k\">);</span>","                <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","            <span class=\"k\">}</span><span class=\"k\">;</span>","\t\t\t","\t\t\t<span class=\"c\">/**</span>","<span class=\"c\">\t\t\t * Setzt das Rechteck zur&#195;&#188;ck (farblich)</span>","<span class=\"c\">\t\t\t * @return {SVGRectangle} self</span>","<span class=\"c\">\t\t\t */</span>","\t\t\tthat<span class=\"k\">.</span>reset <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t\t\trectangles<span class=\"k\">.</span>each<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                    $<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>attr<span class=\"k\">(</span><span class=\"s\">'fill'</span><span class=\"k\">,</span> $<span class=\"k\">(</span><span class=\"s\">'#'</span><span class=\"k\">+</span>CSS_ID_COLORSTORE_RESET_COLOR<span class=\"k\">).</span>css<span class=\"k\">(</span><span class=\"s\">'color'</span><span class=\"k\">));</span>","                <span class=\"k\">}</span><span class=\"k\">);</span>","                <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","            <span class=\"k\">}</span><span class=\"k\">;</span>","\t\t\t<span class=\"c\">/**</span>","<span class=\"c\">\t\t\t * Registriert Eventhandler f&#195;&#188;r das OnClick-Event des Rechtecks.</span>","<span class=\"c\">\t\t\t * @param {Function} handler Der zu bindende Eventhandler</span>","<span class=\"c\">\t\t\t * @return {SVGRectangle} self</span>","<span class=\"c\">\t\t\t */</span>","\t\t\tthat<span class=\"k\">.</span>registerOnClick <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>handler<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t$<span class=\"k\">(</span>rectangles<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]).</span>click<span class=\"k\">(</span>handler<span class=\"k\">);</span>","                texts<span class=\"k\">.</span>each<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                    $<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>click<span class=\"k\">(</span>handler<span class=\"k\">);</span>","                <span class=\"k\">}</span><span class=\"k\">)</span>","\t\t\t\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">;</span>","\t\t\t<span class=\"c\">/**</span>","<span class=\"c\">\t\t\t * Registriert Eventhandler f&#195;&#188;r as OnHover-Event des Rechtecks.</span>","<span class=\"c\">\t\t\t * @param {Function} handler Der zu bindende Eventhandler</span>","<span class=\"c\">\t\t\t * @return {SVGRectangle} self</span>","<span class=\"c\">\t\t\t */</span>","\t\t\tthat<span class=\"k\">.</span>registerOnHover <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>handler<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t$<span class=\"k\">(</span>rectangles<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]).</span>hover<span class=\"k\">(</span>handler<span class=\"k\">);</span>","\t\t\t\ttexts<span class=\"k\">.</span>each<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t\t\t\t$<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>hover<span class=\"k\">(</span>handler<span class=\"k\">);</span>","\t\t\t\t<span class=\"k\">}</span><span class=\"k\">)</span>","\t\t\t\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">;</span>","\t\t\t","            <span class=\"k\">return</span> that<span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","\t\t<span class=\"c\">/**</span>","<span class=\"c\">\t\t * Erstellt neue Animation mit show(endPosition)-Methode.</span>","<span class=\"c\">\t\t * @param {String} id</span>","<span class=\"c\">\t\t * @param {Object} position</span>","<span class=\"c\">\t\t */</span>","\t\tcreateAnimation<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>id<span class=\"k\">,</span> position<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">var</span> that <span class=\"k\">=</span> Object<span class=\"k\">.</span>create<span class=\"k\">(</span>WoSec<span class=\"k\">.</span>baseObject<span class=\"k\">);</span>","\t\t\t<span class=\"k\">var</span> icon <span class=\"k\">=</span> getAnimationPrototype<span class=\"k\">().</span>cloneNode<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">);</span>","\t\t\ticon<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span><span class=\"s\">\"id\"</span><span class=\"k\">,</span> id<span class=\"k\">);</span>","\t\t\t$<span class=\"k\">(</span><span class=\"s\">'svg'</span><span class=\"k\">)[</span><span class=\"s\">0</span><span class=\"k\">].</span>appendChild<span class=\"k\">(</span>icon<span class=\"k\">);</span>","\t\t\t<span class=\"k\">var</span> jQueryIcon <span class=\"k\">=</span> $<span class=\"k\">(</span><span class=\"s\">\"#\"</span><span class=\"k\">+</span>id<span class=\"k\">);</span>","\t\t\tjQueryIcon<span class=\"k\">.</span>hide<span class=\"k\">();</span>","\t\t\tjQueryIcon<span class=\"k\">.</span>attr<span class=\"k\">(</span><span class=\"s\">\"x\"</span><span class=\"k\">,</span> position<span class=\"k\">.</span>x<span class=\"k\">);</span>","\t\t\tjQueryIcon<span class=\"k\">.</span>attr<span class=\"k\">(</span><span class=\"s\">\"y\"</span><span class=\"k\">,</span> position<span class=\"k\">.</span>y<span class=\"k\">);</span>","\t\t\t","\t\t\tthat<span class=\"k\">.</span>show <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>endPosition<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\tjQueryIcon<span class=\"k\">.</span>show<span class=\"k\">();</span>","\t\t\t\tjQueryIcon<span class=\"k\">.</span>animate<span class=\"k\">(</span><span class=\"k\">{</span>svgY<span class=\"k\">:</span> endPosition<span class=\"k\">.</span>y<span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"s\">2000</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t\t\t\tjQueryIcon<span class=\"k\">.</span>hide<span class=\"k\">();</span>","\t\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t\t\t\tjQueryIcon<span class=\"k\">.</span>attr<span class=\"k\">(</span><span class=\"s\">\"y\"</span><span class=\"k\">,</span> position<span class=\"k\">.</span>y<span class=\"k\">)</span>","\t\t\t\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">;</span>","\t\t\t","\t\t\t<span class=\"k\">return</span> that<span class=\"k\">;</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","\t\t<span class=\"c\">/**</span>","<span class=\"c\">\t\t * Bietet Hervorheben-Effekt f&#195;&#188;r ein TaskLane-Rechteck im SVG.</span>","<span class=\"c\">\t\t * @param {String} activityGroupID</span>","<span class=\"c\">\t\t * @return {SVGRectangle} SVGRechteck, das nur das Hervorheben unterst&#195;&#188;tzt</span>","<span class=\"c\">\t\t */</span>","        getTaskLaneRectangle<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>activityGroupID<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> jQueryRectangles <span class=\"k\">=</span> getJQuerySVGRectanglesByActivityGroupID<span class=\"k\">(</span>activityGroupID<span class=\"k\">);</span>","            <span class=\"k\">var</span> that <span class=\"k\">=</span> Object<span class=\"k\">.</span>create<span class=\"k\">(</span>WoSec<span class=\"k\">.</span>baseObject<span class=\"k\">);</span>","\t\t\t<span class=\"c\">/**</span>","<span class=\"c\">\t\t\t * @see SVGRectangle.highlight</span>","<span class=\"c\">\t\t\t */</span>","            that<span class=\"k\">.</span>highlight <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                jQueryRectangles<span class=\"k\">.</span>each<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t\t\t\t$<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>effect<span class=\"k\">(</span><span class=\"s\">'pulsate'</span><span class=\"k\">,</span> <span class=\"k\">{</span> times<span class=\"k\">:</span><span class=\"s\">1</span> <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"s\">1000</span><span class=\"k\">);</span>","\t\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","            <span class=\"k\">}</span><span class=\"k\">;</span>","\t\t\t<span class=\"k\">return</span> that<span class=\"k\">;</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">());</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * Singleton (UtilityKlasse),</span>","<span class=\"c\"> * das Funktionalit&#195;&#164;t zur Verwaltung von HTML-Elementen bereitstellt; erstellt Infoboxen.</span>","<span class=\"c\"> */</span>","WoSec<span class=\"k\">.</span>htmlRenderer <span class=\"k\">=</span> <span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> $ <span class=\"k\">=</span> jQuery<span class=\"k\">;</span>","\t","\t<span class=\"k\">var</span> CSS_ID_INFOBOXES <span class=\"k\">=</span> <span class=\"s\">\"infoboxes\"</span>","\t<span class=\"k\">,</span>   CSS_CLASS_INFOBOX <span class=\"k\">=</span> <span class=\"s\">\"infobox\"</span>","\t<span class=\"k\">,</span>   CSS_CLASS_INFOBOX_PARTICIPANT <span class=\"k\">=</span> <span class=\"s\">\"infobox-participant\"</span>","\t<span class=\"k\">,</span>   CSS_CLASS_INFOBOX_DATA <span class=\"k\">=</span> <span class=\"s\">\"infobox-data\"</span>","\t<span class=\"k\">,</span>\tINFOBOX_HIDE_DELAY_MS <span class=\"k\">=</span> <span class=\"s\">3000</span><span class=\"k\">;</span>","\t<span class=\"k\">var</span> CSS_ID_DATABOX <span class=\"k\">=</span> <span class=\"s\">\"databox\"</span>","\t<span class=\"k\">,</span>\tCSS_CLASS_DATABOX_ENTRY <span class=\"k\">=</span> <span class=\"s\">\"databox-entry\"</span>","\t<span class=\"k\">,</span>\tCSS_ID_DATABOX_HOVER <span class=\"k\">=</span> <span class=\"s\">\"databox-hover\"</span>","\t<span class=\"k\">,</span>\tDATABOX_HIDE_DELAY_MS <span class=\"k\">=</span> <span class=\"s\">1500</span><span class=\"k\">;</span>","\t<span class=\"k\">var</span> TIMESLIDER_EVENT_IMAGE_PATH <span class=\"k\">=</span> <span class=\"s\">\"media/images/shiney_star_icon.png\"</span>","\t<span class=\"k\">,</span>   CSS_CLASS_TIMESLIDER_EVENT_LINK <span class=\"k\">=</span> <span class=\"s\">\"dock-item2\"</span>","\t<span class=\"k\">,</span>   CSS_CLASS_TIMESLIDER_CONTAINER <span class=\"k\">=</span> <span class=\"s\">\"dock-container2\"</span>","\t<span class=\"k\">,</span>   CSS_ID_TIMESLIDER_PLAY_BUTTON <span class=\"k\">=</span> <span class=\"s\">\"play\"</span><span class=\"k\">;</span>","\t","\t<span class=\"k\">var</span> infoboxPrototype<span class=\"k\">;</span> <span class=\"c\">// lazy creation when DOM ready</span>","\t<span class=\"k\">function</span> getInfoboxPrototype<span class=\"k\">()</span><span class=\"k\">{</span>","\t\t<span class=\"k\">if</span> <span class=\"k\">(!</span>infoboxPrototype<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\tinfoboxPrototype <span class=\"k\">=</span> $<span class=\"k\">(</span><span class=\"s\">'&lt;div class=\"'</span> <span class=\"k\">+</span> CSS_CLASS_INFOBOX <span class=\"k\">+</span> <span class=\"s\">'\"&gt;'</span> <span class=\"k\">+</span>","\t\t\t<span class=\"s\">'&lt;div class=\"'</span> <span class=\"k\">+</span>","\t\t\tCSS_CLASS_INFOBOX_PARTICIPANT <span class=\"k\">+</span>","\t\t\t<span class=\"s\">'\"&gt;Testtest&lt;/div&gt;'</span> <span class=\"k\">+</span>","\t\t\t<span class=\"s\">'&lt;div class=\"'</span> <span class=\"k\">+</span>","\t\t\tCSS_CLASS_INFOBOX_DATA <span class=\"k\">+</span>","\t\t\t<span class=\"s\">'\"&gt;Blablubb&lt;/div&gt;'</span> <span class=\"k\">+</span>","\t\t\t<span class=\"s\">'&lt;/div&gt;'</span><span class=\"k\">).</span>hide<span class=\"k\">();</span>","\t\t<span class=\"k\">}</span>","\t\t<span class=\"k\">return</span> infoboxPrototype<span class=\"k\">;</span>","\t<span class=\"k\">}</span>","\t","\t<span class=\"k\">var</span> databoxInitialized <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","\t<span class=\"k\">function</span> initDatabox<span class=\"k\">()</span> <span class=\"k\">{</span>","\t\tdataboxInitialized <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","\t\t<span class=\"k\">var</span> showDatabox <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","\t\t<span class=\"k\">var</span> pinDatabox <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","\t\t<span class=\"k\">var</span> initialDataboxPosition <span class=\"k\">=</span> parseInt<span class=\"k\">(</span>$<span class=\"k\">(</span><span class=\"s\">\"#\"</span><span class=\"k\">+</span>CSS_ID_DATABOX<span class=\"k\">).</span>css<span class=\"k\">(</span><span class=\"s\">\"left\"</span><span class=\"k\">));</span>","\t\t<span class=\"k\">var</span> jQueryDatabox <span class=\"k\">=</span> $<span class=\"k\">(</span><span class=\"s\">\"#\"</span><span class=\"k\">+</span>CSS_ID_DATABOX<span class=\"k\">);</span>","\t\t$<span class=\"k\">(</span><span class=\"s\">\"#\"</span><span class=\"k\">+</span>CSS_ID_DATABOX_HOVER<span class=\"k\">).</span>hover<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">if</span> <span class=\"k\">(!</span>showDatabox <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>pinDatabox<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\tshowDatabox <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","\t\t\t\tjQueryDatabox<span class=\"k\">.</span>animate<span class=\"k\">(</span><span class=\"k\">{</span>left<span class=\"k\">:</span> <span class=\"k\">-</span><span class=\"s\">10</span><span class=\"k\">}</span><span class=\"k\">);</span>","\t\t\t\tsetTimeout<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(!</span>pinDatabox<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\tjQueryDatabox<span class=\"k\">.</span>animate<span class=\"k\">(</span><span class=\"k\">{</span>left<span class=\"k\">:</span> initialDataboxPosition<span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"s\">\"slow\"</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t\t\t\t\t\tshowDatabox <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","\t\t\t\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t\t\t\t\t<span class=\"k\">}</span>","\t\t\t\t<span class=\"k\">}</span><span class=\"k\">,</span> DATABOX_HIDE_DELAY_MS<span class=\"k\">);</span>","\t\t\t<span class=\"k\">}</span>","\t\t\t<span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t\tjQueryDatabox<span class=\"k\">.</span>click<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>showDatabox <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>pinDatabox<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\tpinDatabox <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","\t\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>pinDatabox<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\tpinDatabox <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","\t\t\t\t$<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>animate<span class=\"k\">(</span><span class=\"k\">{</span>left<span class=\"k\">:</span> initialDataboxPosition<span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"s\">\"slow\"</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t\t\t\tshowDatabox <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","\t\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t\t\t<span class=\"k\">}</span>","\t\t\t<span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t<span class=\"k\">}</span>","    <span class=\"k\">var</span> dataEntryPrototype<span class=\"k\">;</span>","\t<span class=\"k\">function</span> getDataEntryPrototype<span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">if</span> <span class=\"k\">(!</span>dataEntryPrototype<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\tdataEntryPrototype <span class=\"k\">=</span> $<span class=\"k\">(</span><span class=\"s\">'&lt;div class=\"'</span> <span class=\"k\">+</span> CSS_CLASS_DATABOX_ENTRY <span class=\"k\">+</span> <span class=\"s\">'\"&gt;&lt;/div&gt;'</span><span class=\"k\">);</span>","\t\t<span class=\"k\">}</span>","\t\t<span class=\"k\">return</span> dataEntryPrototype<span class=\"k\">;</span>","\t<span class=\"k\">}</span>","\t<span class=\"k\">var</span> databoxData <span class=\"k\">=</span> <span class=\"k\">[];</span>","\t<span class=\"k\">var</span> databox <span class=\"k\">=</span> <span class=\"k\">{</span>","\t\tadd<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>data<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">if</span> <span class=\"k\">(!</span>databoxInitialized<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\tinitDatabox<span class=\"k\">();</span>","\t\t\t<span class=\"k\">}</span>","\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>data <span class=\"k\">&amp;&amp;</span> databoxData<span class=\"k\">.</span>indexOf<span class=\"k\">(</span>data<span class=\"k\">)</span> <span class=\"k\">==</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">var</span> dataEntry <span class=\"k\">=</span> getDataEntryPrototype<span class=\"k\">().</span>clone<span class=\"k\">().</span>appendTo<span class=\"k\">(</span><span class=\"s\">\"#\"</span><span class=\"k\">+</span>CSS_ID_DATABOX<span class=\"k\">);</span>","\t\t\t\tdataEntry<span class=\"k\">.</span>text<span class=\"k\">(</span>data<span class=\"k\">);</span>","\t\t\t\tdataboxData<span class=\"k\">.</span>push<span class=\"k\">(</span>data<span class=\"k\">);</span>","\t\t\t<span class=\"k\">}</span>","\t\t<span class=\"k\">}</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","\t","\t<span class=\"k\">var</span> timeSliderEventPrototype<span class=\"k\">;</span> <span class=\"c\">// &lt;a class=\"dock-item2\" href=\"#\"&gt;&lt;span&gt;test1&lt;/span&gt;&lt;img src=\"media/images/shiney_star_icon.png\" /&gt;&lt;/a&gt;</span>","\t<span class=\"k\">function</span> getTimeSliderEventPrototype<span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">if</span> <span class=\"k\">(!</span>timeSliderEventPrototype<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\ttimeSliderEventPrototype <span class=\"k\">=</span> $<span class=\"k\">(</span><span class=\"s\">'&lt;a class=\"'</span> <span class=\"k\">+</span> CSS_CLASS_TIMESLIDER_EVENT_LINK <span class=\"k\">+</span> <span class=\"s\">'\"&gt;&lt;span/&gt;&lt;img src=\"'</span> <span class=\"k\">+</span> TIMESLIDER_EVENT_IMAGE_PATH <span class=\"k\">+</span> <span class=\"s\">'\" /&gt;&lt;/a&gt;'</span><span class=\"k\">);</span>","\t\t<span class=\"k\">}</span>","\t\t<span class=\"k\">return</span> timeSliderEventPrototype<span class=\"k\">;</span>","\t<span class=\"k\">}</span>","\t<span class=\"k\">var</span> timeSliderEvents <span class=\"k\">=</span> <span class=\"k\">[];</span>","\t<span class=\"k\">var</span> eventChain<span class=\"k\">;</span>","    ","    <span class=\"k\">return</span> <span class=\"k\">{</span>","\t\ttimeSlider<span class=\"k\">:</span> <span class=\"k\">{</span>","\t\t\t<span class=\"c\">/**</span>","<span class=\"c\">\t\t\t * Initialisiert den TimeSlider wenn der DOM bereit ist</span>","<span class=\"c\">\t\t\t */</span>","\t\t\tinit<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t\t\teventChain <span class=\"k\">=</span> WoSec<span class=\"k\">.</span>eventChain<span class=\"k\">;</span>","\t\t\t\teventChain<span class=\"k\">.</span>registerObserver<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span>","\t\t\t\t$<span class=\"k\">(</span><span class=\"s\">\"#\"</span><span class=\"k\">+</span>CSS_ID_TIMESLIDER_PLAY_BUTTON<span class=\"k\">).</span>click<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t\t\t\teventChain<span class=\"k\">.</span>play<span class=\"k\">();</span>","\t\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t\t\t\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","\t\t\t<span class=\"c\">/**</span>","<span class=\"c\">\t\t\t * Teil des Beobachtermusters, setzt den TimeSlider in Kenntnis, dass sich die EventChain ge&#195;&#164;ndert hat.</span>","<span class=\"c\">\t\t\t * @return {TimeSlider} self</span>","<span class=\"c\">\t\t\t */</span>","\t\t\tnotify<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t\t\teventChain<span class=\"k\">.</span>forEach<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span>eventCommand<span class=\"k\">,</span> i<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(!</span>timeSliderEvents<span class=\"k\">[</span>i<span class=\"k\">])</span> <span class=\"k\">{</span> <span class=\"c\">// if not yet created</span>","\t\t\t\t\t\t<span class=\"k\">var</span> event <span class=\"k\">=</span> getTimeSliderEventPrototype<span class=\"k\">().</span>clone<span class=\"k\">().</span>appendTo<span class=\"k\">(</span><span class=\"s\">'.'</span><span class=\"k\">+</span>CSS_CLASS_TIMESLIDER_CONTAINER<span class=\"k\">);</span> <span class=\"c\">// create new entry</span>","\t\t\t\t\t\tevent<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">\"span\"</span><span class=\"k\">).</span>text<span class=\"k\">(</span>eventCommand<span class=\"k\">.</span>getTimestamp<span class=\"k\">());</span>","\t\t\t\t\t\tevent<span class=\"k\">.</span>click<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span> <span class=\"c\">// register onclick handler</span>","\t\t\t\t\t\t    <span class=\"k\">var</span> backwards <span class=\"k\">=</span> i <span class=\"k\">&lt;</span> eventChain<span class=\"k\">.</span>getCurrentPosition<span class=\"k\">();</span> <span class=\"c\">// go backwards if the position is before the current position of the eventchain</span>","\t\t\t\t\t\t\teventChain<span class=\"k\">.</span>seek<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span>eventCommand<span class=\"k\">,</span> j<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"c\">// seek the corresponding event</span>","\t\t\t\t\t\t\t     <span class=\"k\">if</span> <span class=\"k\">(!</span>backwards<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\t\t\t \teventCommand<span class=\"k\">.</span>execute<span class=\"k\">();</span>","\t\t\t\t\t\t\t\t <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","\t\t\t\t\t\t\t\t \teventCommand<span class=\"k\">.</span>unwind<span class=\"k\">();</span>","\t\t\t\t\t\t\t\t <span class=\"k\">}</span>","\t\t\t\t\t\t\t\t<span class=\"k\">return</span> i <span class=\"k\">!=</span> j<span class=\"k\">;</span> <span class=\"c\">// stop on == j</span>","\t\t\t\t\t\t\t<span class=\"k\">}</span><span class=\"k\">,</span> backwards<span class=\"k\">);</span> ","\t\t\t\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t\t\t\t\t\ttimeSliderEvents<span class=\"k\">.</span>push<span class=\"k\">(</span>event<span class=\"k\">);</span>","\t\t\t\t\t<span class=\"k\">}</span>","\t\t\t\t\t","\t\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t\t\t\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","\t\t\t<span class=\"k\">}</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","\t\t<span class=\"c\">/**</span>","<span class=\"c\">\t\t * Stellt die Informationsfl&#195;&#164;che dar, die beim Klicken bzw. &#195;&#156;berfahren eines Tasks mit der Maus erscheint.</span>","<span class=\"c\">\t\t * @return {Infobox} neue Infobox</span>","<span class=\"c\">\t\t */</span>","        createInfobox<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> infobox <span class=\"k\">=</span> getInfoboxPrototype<span class=\"k\">().</span>clone<span class=\"k\">().</span>appendTo<span class=\"k\">(</span><span class=\"s\">\"#\"</span><span class=\"k\">+</span>CSS_ID_INFOBOXES<span class=\"k\">);</span>","\t\t\t","\t\t\t","            <span class=\"k\">function</span> setParticipant<span class=\"k\">(</span>participant<span class=\"k\">)</span> <span class=\"k\">{</span>","                infobox<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">\".\"</span><span class=\"k\">+</span>CSS_CLASS_INFOBOX_PARTICIPANT<span class=\"k\">).</span>text<span class=\"k\">(</span>participant<span class=\"k\">.</span>name<span class=\"k\">);</span>","            <span class=\"k\">}</span>","\t\t\t<span class=\"k\">function</span> setData<span class=\"k\">(</span>data<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\tinfobox<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">\".\"</span><span class=\"k\">+</span>CSS_CLASS_INFOBOX_DATA<span class=\"k\">).</span>text<span class=\"k\">(</span>data<span class=\"k\">);</span>","\t\t\t<span class=\"k\">}</span>","\t\t\t","            <span class=\"k\">return</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"c\">/**</span>","<span class=\"c\">\t\t\t\t * Bindet die Infobox an ein Rechteck im SVG.</span>","<span class=\"c\">\t\t\t\t * @param {SVGRectangle} rectangle Rechteck im SVG</span>","<span class=\"c\">\t\t\t\t * @return {Infobox} self</span>","<span class=\"c\">\t\t\t\t */</span>","\t\t\t\tbindToSVGRectangle<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>rectangle<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t<span class=\"k\">var</span> position <span class=\"k\">=</span> rectangle<span class=\"k\">.</span>getPosition<span class=\"k\">();</span>","\t\t\t\t    infobox<span class=\"k\">.</span>css<span class=\"k\">(</span><span class=\"s\">\"top\"</span><span class=\"k\">,</span> position<span class=\"k\">.</span>y <span class=\"k\">+</span> position<span class=\"k\">.</span>height<span class=\"k\">);</span>","\t\t\t\t    infobox<span class=\"k\">.</span>css<span class=\"k\">(</span><span class=\"s\">\"left\"</span><span class=\"k\">,</span> position<span class=\"k\">.</span>x <span class=\"k\">+</span> position<span class=\"k\">.</span>width<span class=\"k\">);</span>","\t\t\t\t    ","\t\t\t\t\t<span class=\"k\">var</span> showInfobox <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","\t\t\t\t\t<span class=\"k\">var</span> inside <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","\t\t\t\t\t<span class=\"k\">var</span> onClickHandler <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(!</span>showInfobox<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\t\tshowInfobox <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","\t\t\t\t\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","\t\t\t\t\t\t\tinfobox<span class=\"k\">.</span>slideToggle<span class=\"k\">(</span><span class=\"s\">\"slow\"</span><span class=\"k\">);</span>","\t\t\t\t\t\t\tshowInfobox <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","\t\t\t\t\t\t<span class=\"k\">}</span>","\t\t\t\t\t\t<span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","\t\t\t\t\t<span class=\"k\">}</span><span class=\"k\">;</span>","\t\t\t\t\t<span class=\"k\">var</span> onHoverHandler <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(!</span>showInfobox <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>inside<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\t\tinside <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","\t\t\t\t\t\t\tinfobox<span class=\"k\">.</span>slideToggle<span class=\"k\">(</span><span class=\"s\">\"slow\"</span><span class=\"k\">);</span>","\t\t\t\t\t\t\tsetTimeout<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t\t\t\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(!</span>showInfobox<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\t\t\t\tinfobox<span class=\"k\">.</span>slideToggle<span class=\"k\">(</span><span class=\"s\">\"slow\"</span><span class=\"k\">);</span>","\t\t\t\t\t\t\t\t<span class=\"k\">}</span>","\t\t\t\t\t\t\t\tinside <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","\t\t\t\t\t\t\t<span class=\"k\">}</span><span class=\"k\">,</span> INFOBOX_HIDE_DELAY_MS<span class=\"k\">);</span>","\t\t\t\t\t\t<span class=\"k\">}</span>","\t\t\t\t\t\t<span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","\t\t\t\t\t<span class=\"k\">}</span><span class=\"k\">;</span>","\t\t\t\t\t","\t\t\t\t\trectangle<span class=\"k\">.</span>registerOnHover<span class=\"k\">(</span>onHoverHandler<span class=\"k\">);</span>","\t\t\t\t\tinfobox<span class=\"k\">.</span>click<span class=\"k\">(</span>onClickHandler<span class=\"k\">);</span>","\t\t\t\t\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","\t\t\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","\t\t\t\t<span class=\"c\">/**</span>","<span class=\"c\">\t\t\t\t * Zeigt die Informationsfl&#195;&#164;che.</span>","<span class=\"c\">\t\t\t\t * @return {Infobox} self</span>","<span class=\"c\">\t\t\t\t */</span>","                show<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                    infobox<span class=\"k\">.</span>show<span class=\"k\">();</span>","\t\t\t\t\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","                <span class=\"k\">}</span><span class=\"k\">,</span>","\t\t\t\t<span class=\"c\">/**</span>","<span class=\"c\">\t\t\t\t * Verbirgt die Informationsfl&#195;&#164;che.</span>","<span class=\"c\">\t\t\t\t * @return {Infobox} self</span>","<span class=\"c\">\t\t\t\t */</span>","                hide<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                    infobox<span class=\"k\">.</span>hide<span class=\"k\">();</span>","\t\t\t\t\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","                <span class=\"k\">}</span><span class=\"k\">,</span>","\t\t\t\t<span class=\"c\">/**</span>","<span class=\"c\">\t\t\t\t * Setzt den Inhalt (User/Provider sowie Daten) der Infobox</span>","<span class=\"c\">\t\t\t\t * @param {Object} information</span>","<span class=\"c\">\t\t\t\t * @return {Infobox} self</span>","<span class=\"c\">\t\t\t\t */</span>","\t\t\t\tsetContent<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>information<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>information<span class=\"k\">.</span>participant<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\tsetParticipant<span class=\"k\">(</span>information<span class=\"k\">.</span>participant<span class=\"k\">);</span>","\t\t\t\t\t<span class=\"k\">}</span>","\t\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>information<span class=\"k\">.</span>data<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\tsetData<span class=\"k\">(</span>information<span class=\"k\">.</span>data<span class=\"k\">);</span>","\t\t\t\t\t\tdatabox<span class=\"k\">.</span>add<span class=\"k\">(</span>information<span class=\"k\">.</span>data<span class=\"k\">);</span>","\t\t\t\t\t<span class=\"k\">}</span>","\t\t\t\t\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","\t\t\t\t<span class=\"k\">}</span>","            <span class=\"k\">}</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">());</span>","","<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","    ","<span class=\"c\">// var workflow = WoSec.workflow; need late initializiation because of cross dependency</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * Ein Task-Objekt ist assoziiert mit einer Aktivit&#195;&#164;t des BPMN SVG Diagramms.</span>","<span class=\"c\"> * Es verwaltet die zugeh&#195;&#182;rige Infobox und das SVGRectangle,</span>","<span class=\"c\"> * an die Anweisungen zur Darstellung delegiert werden.</span>","<span class=\"c\"> * @param {Infobox} infobox</span>","<span class=\"c\"> * @param {SVGRectangle} rectangle</span>","<span class=\"c\"> * @param {String} correspondingActivityID</span>","<span class=\"c\"> * @return {Task} neues Task-Objekt</span>","<span class=\"c\"> */</span>","<span class=\"k\">function</span> newTask<span class=\"k\">(</span>infobox<span class=\"k\">,</span> rectangle<span class=\"k\">,</span> correspondingActivityID<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> that <span class=\"k\">=</span> Object<span class=\"k\">.</span>create<span class=\"k\">(</span>WoSec<span class=\"k\">.</span>baseObject<span class=\"k\">);</span>","\tinfobox<span class=\"k\">.</span>bindToSVGRectangle<span class=\"k\">(</span>rectangle<span class=\"k\">);</span>","\t","\t<span class=\"c\">/**</span>","<span class=\"c\">\t * @see Infobox.show</span>","<span class=\"c\">\t * @return {Task} self</span>","<span class=\"c\">\t */</span>","    that<span class=\"k\">.</span>showInfobox <span class=\"k\">=</span> infobox<span class=\"k\">.</span>show<span class=\"k\">;</span>","\t<span class=\"c\">/**</span>","<span class=\"c\">\t * @see Infobox.hide</span>","<span class=\"c\">\t * @return {Task} self</span>","<span class=\"c\">\t */</span>","    that<span class=\"k\">.</span>hideInfobox <span class=\"k\">=</span> infobox<span class=\"k\">.</span>hide<span class=\"k\">;</span>","\t<span class=\"c\">/**</span>","<span class=\"c\">\t * Gibt den korrespondierenden Task zur&#195;&#188;ck</span>","<span class=\"c\">\t * @return {Task} korrespondierender Task</span>","<span class=\"c\">\t */</span>","\tthat<span class=\"k\">.</span>getCorrespondingTask <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> <span class=\"k\">typeof</span><span class=\"k\">(</span>correspondingActivityID<span class=\"k\">)</span> <span class=\"k\">==</span> <span class=\"s\">\"string\"</span> <span class=\"k\">&amp;&amp;</span> correspondingActivityID <span class=\"k\">!=</span> <span class=\"s\">\"\"</span> <span class=\"k\">&amp;&amp;</span> WoSec<span class=\"k\">.</span>workflow<span class=\"k\">.</span>getTaskByID<span class=\"k\">(</span>correspondingActivityID<span class=\"k\">);</span> <span class=\"c\">// lazy load</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","\t<span class=\"c\">/**</span>","<span class=\"c\">\t * @see SVGRectangle.highlight</span>","<span class=\"c\">\t * @return {Task} self</span>","<span class=\"c\">\t */</span>","    that<span class=\"k\">.</span>highlight <span class=\"k\">=</span> rectangle<span class=\"k\">.</span>highlight<span class=\"k\">;</span>","\t<span class=\"c\">/**</span>","<span class=\"c\">\t * @see Infobox.setContent</span>","<span class=\"c\">\t * @return {Task} self</span>","<span class=\"c\">\t */</span>","    that<span class=\"k\">.</span>setInformation <span class=\"k\">=</span> infobox<span class=\"k\">.</span>setContent<span class=\"k\">;</span>","\t","\t<span class=\"c\">/**</span>","<span class=\"c\">\t * @see SVGRectangle.getPosition</span>","<span class=\"c\">\t */</span>","\tthat<span class=\"k\">.</span>getPosition <span class=\"k\">=</span> rectangle<span class=\"k\">.</span>getPosition<span class=\"k\">;</span>","\t","\t<span class=\"c\">/**</span>","<span class=\"c\">\t * @see SVGRectangle.showAnimation</span>","<span class=\"c\">\t * @return {Task} self</span>","<span class=\"c\">\t */</span>","\tthat<span class=\"k\">.</span>animateData <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","\t\trectangle<span class=\"k\">.</span>showAnimation<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>getCorrespondingTask<span class=\"k\">());</span>","\t\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","\t<span class=\"k\">}</span>","\t<span class=\"c\">/**</span>","<span class=\"c\">\t * @see SVGRectangle.markObtrusive</span>","<span class=\"c\">\t * @return {Task} self</span>","<span class=\"c\">\t */</span>","    that<span class=\"k\">.</span>markActive <span class=\"k\">=</span> rectangle<span class=\"k\">.</span>markObtrusive<span class=\"k\">;</span>","\t<span class=\"c\">/**</span>","<span class=\"c\">\t * @see SVGRectangle.markUnobtrusive</span>","<span class=\"c\">\t * @return {Task} self</span>","<span class=\"c\">\t */</span>","    that<span class=\"k\">.</span>markFinished <span class=\"k\">=</span> rectangle<span class=\"k\">.</span>markUnobtrusive<span class=\"k\">;</span>","\t","\t<span class=\"c\">/**</span>","<span class=\"c\">\t * @see SVGRectangle.reset</span>","<span class=\"c\">\t * @return {Task} self</span>","<span class=\"c\">\t */</span>","\tthat<span class=\"k\">.</span>reset <span class=\"k\">=</span> rectangle<span class=\"k\">.</span>reset<span class=\"k\">;</span>","\t","\t<span class=\"k\">return</span> that<span class=\"k\">;</span>","<span class=\"k\">}</span>","","WoSec<span class=\"k\">.</span>newTask <span class=\"k\">=</span> newTask<span class=\"k\">;</span>","","<span class=\"k\">}</span><span class=\"k\">());</span>","","","<span class=\"c\">/*</span>","<span class=\"c\"> * Another version of Task without powerConstructor</span>","<span class=\"c\"> */</span>","<span class=\"c\">/*(function() {</span>","","<span class=\"c\">// import</span>","<span class=\"c\">var workflow = WoSec.workflow;</span>","","<span class=\"c\">function Task(htmlInfobox, svgRectangle, correspondingActivityID) {</span>","<span class=\"c\">    this.infobox = htmlInfobox;</span>","<span class=\"c\">    this.rectangle = svgRectangle;</span>","<span class=\"c\">    this.correspondingActivityID = correspondingActivityID;</span>","<span class=\"c\">}</span>","<span class=\"c\">Task.prototype.highlight = function() {</span>","<span class=\"c\">    this.rectangle.highlight();</span>","<span class=\"c\">};</span>","<span class=\"c\">Task.prototype.getInfobox = function() {</span>","<span class=\"c\">    return this.infobox;</span>","<span class=\"c\">};</span>","<span class=\"c\">Task.prototype.setParticipant = function(participant) {</span>","<span class=\"c\">    this.infobox.setParticipant(participant);</span>","<span class=\"c\">};</span>","<span class=\"c\">Task.prototype.getCorrespondingTask = function() {</span>","<span class=\"c\">    return workflow.getTaskByID(this.correspondingActivityID); // lazy load</span>","<span class=\"c\">};</span>","<span class=\"c\">Task.prototype.markActive = function() {</span>","<span class=\"c\">    this.rectangle.markObtrusive();</span>","<span class=\"c\">};</span>","","<span class=\"c\">Task.prototype.markFinished = function() {</span>","<span class=\"c\">    this.rectangle.markUnobtrusive();</span>","<span class=\"c\">};</span>","","","","<span class=\"c\">// export</span>","<span class=\"c\">WoSec.Task = Task;</span>","","<span class=\"c\">}());*/</span>","","<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","","<span class=\"c\">// var workflow = WoSec.workflow; need late initializiation because of cross dependency</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * Ein Tasklane-Objekt ist assoziiert mit einer ActivityGroup des BPMN SVG Diagramms.</span>","<span class=\"c\"> * Es verwaltet das zugeh&#195;&#182;rige SVGRectangle, an das Anweisungen zur Darstellung delegiert werden.</span>","<span class=\"c\"> * @param {SVGRectangle} rectangle</span>","<span class=\"c\"> * @param {Array} activityIDs</span>","<span class=\"c\"> * @return {TaskLane}</span>","<span class=\"c\"> */</span>","<span class=\"k\">function</span> newTaskLane<span class=\"k\">(</span>rectangle<span class=\"k\">,</span> activityIDs<span class=\"k\">)</span> <span class=\"k\">{</span>","\t<span class=\"k\">var</span> that <span class=\"k\">=</span> Object<span class=\"k\">.</span>create<span class=\"k\">(</span>WoSec<span class=\"k\">.</span>baseObject<span class=\"k\">);</span>","\t<span class=\"k\">var</span> getTasks <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">var</span> tasks <span class=\"k\">=</span> <span class=\"k\">[];</span>","\t\tactivityIDs<span class=\"k\">.</span>forEach<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span>activityID<span class=\"k\">,</span> index<span class=\"k\">)</span> <span class=\"k\">{</span> ","            tasks<span class=\"k\">[</span>index<span class=\"k\">]</span> <span class=\"k\">=</span> WoSec<span class=\"k\">.</span>workflow<span class=\"k\">.</span>getTaskByID<span class=\"k\">(</span>activityID<span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","\t\t<span class=\"k\">return</span> tasks<span class=\"k\">;</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","\t","\t<span class=\"c\">/**</span>","<span class=\"c\">\t * @see SVGRectangle.highlight</span>","<span class=\"c\">\t * @return {TaskLane} self</span>","<span class=\"c\">\t */</span>","\tthat<span class=\"k\">.</span>highlight <span class=\"k\">=</span> rectangle<span class=\"k\">.</span>highlight<span class=\"k\">;</span>","\t<span class=\"c\">/**</span>","<span class=\"c\">\t * Setzt Informationen f&#195;&#188;r alle Task in der Lane</span>","<span class=\"c\">\t * @param {Object} information</span>","<span class=\"c\">\t * @return {TaskLane} self</span>","<span class=\"c\">\t */</span>","\tthat<span class=\"k\">.</span>setInformation <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>information<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\tgetTasks<span class=\"k\">().</span>forEach<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span>task<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\ttask<span class=\"k\">.</span>setInformation<span class=\"k\">(</span>information<span class=\"k\">);</span>","\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","\t<span class=\"k\">return</span> that<span class=\"k\">;</span>","<span class=\"k\">}</span>","","WoSec<span class=\"k\">.</span>newTaskLane <span class=\"k\">=</span> newTaskLane<span class=\"k\">;</span>","","<span class=\"k\">}</span><span class=\"k\">());</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * Das Objekt Workflow stellt ein Singleton dar,</span>","<span class=\"c\"> * das Methoden zum Finden und Erstellen von Tasks (Tasklanes) bereitstellt.</span>","<span class=\"c\"> * Es speichert das Task Repository.</span>","<span class=\"c\"> */</span>","WoSec<span class=\"k\">.</span>workflow <span class=\"k\">=</span> <span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span> <span class=\"c\">// Singleton pattern begin</span>","    <span class=\"c\">// import</span>","\t<span class=\"k\">var</span> newTask <span class=\"k\">=</span> WoSec<span class=\"k\">.</span>newTask<span class=\"k\">;</span>","\t<span class=\"k\">var</span> newTaskLane <span class=\"k\">=</span> WoSec<span class=\"k\">.</span>newTaskLane<span class=\"k\">;</span>","\t<span class=\"k\">var</span> htmlRenderer <span class=\"k\">=</span> WoSec<span class=\"k\">.</span>htmlRenderer<span class=\"k\">;</span>","\t<span class=\"k\">var</span> svgUtility <span class=\"k\">=</span> WoSec<span class=\"k\">.</span>svgUtility<span class=\"k\">;</span>","\t","\t<span class=\"k\">var</span> thisInstanceID<span class=\"k\">;</span>","    <span class=\"k\">var</span> taskRepository <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span> <span class=\"c\">// ID =&gt; Task</span>","    <span class=\"k\">var</span> taskLaneRepository <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span> <span class=\"c\">// ID =&gt; TaskLane</span>","\t<span class=\"k\">var</span> correspondingActivities <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span> <span class=\"c\">// ID =&gt; ID</span>","\t<span class=\"k\">var</span> activitiesInALane <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span> <span class=\"c\">// TaskLaneID =&gt; [TaskIDs]</span>","\t","    <span class=\"k\">function</span> createTask<span class=\"k\">(</span>activityID<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">typeof</span><span class=\"k\">(</span>activityID<span class=\"k\">)</span> <span class=\"k\">!=</span> <span class=\"s\">\"string\"</span><span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">throw</span> <span class=\"k\">new</span> TypeError<span class=\"k\">(</span><span class=\"s\">\"The given ID is not a String\"</span><span class=\"k\">);</span>","\t\t<span class=\"k\">}</span>","        <span class=\"k\">return</span> newTask<span class=\"k\">(</span>htmlRenderer<span class=\"k\">.</span>createInfobox<span class=\"k\">(),</span> svgUtility<span class=\"k\">.</span>getTaskRectangle<span class=\"k\">(</span>activityID<span class=\"k\">),</span> correspondingActivities<span class=\"k\">[</span>activityID<span class=\"k\">]);</span>","    <span class=\"k\">}</span>","    <span class=\"k\">function</span> createTaskLane<span class=\"k\">(</span>activityGroupID<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">typeof</span><span class=\"k\">(</span>activityGroupID<span class=\"k\">)</span> <span class=\"k\">!=</span> <span class=\"s\">\"string\"</span><span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">throw</span> <span class=\"k\">new</span> TypeError<span class=\"k\">(</span><span class=\"s\">\"The given groupID is not a String\"</span><span class=\"k\">);</span>","\t\t<span class=\"k\">}</span>","\t\t<span class=\"k\">if</span> <span class=\"k\">(!</span>activitiesInALane<span class=\"k\">[</span>activityGroupID<span class=\"k\">])</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">throw</span> <span class=\"k\">new</span> Error<span class=\"k\">(</span><span class=\"s\">\"Unknown activityGroupID\"</span><span class=\"k\">);</span>","\t\t<span class=\"k\">}</span>","        <span class=\"k\">return</span> newTaskLane<span class=\"k\">(</span>svgUtility<span class=\"k\">.</span>getTaskLaneRectangle<span class=\"k\">(</span>activityGroupID<span class=\"k\">),</span> activitiesInALane<span class=\"k\">[</span>activityGroupID<span class=\"k\">]);</span>","    <span class=\"k\">}</span>","    <span class=\"k\">return</span> <span class=\"k\">{</span>","\t\t<span class=\"c\">/**</span>","<span class=\"c\">\t\t * Initialisiert den Workflow mit den korrespondierenden Tasks und Tasks in einer TaskLane</span>","<span class=\"c\">\t\t * @param {String} InstanzID</span>","<span class=\"c\">\t\t * @param {Object} correspondingActivitiesIDs korrespondierende Tasks ID =&gt; ID</span>","<span class=\"c\">\t\t * @param {Object} activityIDsForALane Tasks in einer TaskLane TaskLaneID =&gt; [TaskIDs]</span>","<span class=\"c\">\t\t */</span>","\t\tinit<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>instanceID<span class=\"k\">,</span> correspondingActivitiesIDs<span class=\"k\">,</span> activityIDsForALane<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\tthisInstanceID <span class=\"k\">=</span> instanceID<span class=\"k\">;</span>","\t\t\tcorrespondingActivities <span class=\"k\">=</span> correspondingActivitiesIDs<span class=\"k\">;</span>","\t\t\tactivitiesInALane <span class=\"k\">=</span> activityIDsForALane<span class=\"k\">;</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","\t\t<span class=\"c\">/**</span>","<span class=\"c\">\t\t * Gibt die InstanzID des Workflows zur&#195;&#188;ck</span>","<span class=\"c\">\t\t * @return InstanzID</span>","<span class=\"c\">\t\t */</span>","\t\tgetInstanceID<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">return</span> thisInstanceID<span class=\"k\">;</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","\t\t<span class=\"c\">/**</span>","<span class=\"c\">\t\t * Liefert den Task mit der angegebenen ID zur&#195;&#188;ck</span>","<span class=\"c\">\t\t * @param {String} activityID</span>","<span class=\"c\">\t\t * @return {Task} Task ggf. aus Repository</span>","<span class=\"c\">\t\t */</span>","        getTaskByID<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>activityID<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">if</span> <span class=\"k\">(!</span>taskRepository<span class=\"k\">[</span>activityID<span class=\"k\">])</span> <span class=\"k\">{</span>","\t\t\t\ttaskRepository<span class=\"k\">[</span>activityID<span class=\"k\">]</span> <span class=\"k\">=</span> createTask<span class=\"k\">(</span>activityID<span class=\"k\">)</span>","\t\t\t<span class=\"k\">}</span>","            <span class=\"k\">return</span> taskRepository<span class=\"k\">[</span>activityID<span class=\"k\">];</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","\t\t<span class=\"c\">/**</span>","<span class=\"c\">\t\t * Liefert die Lane mit der angegebenen ID zur&#195;&#188;ck</span>","<span class=\"c\">\t\t * @param {String} activityGroupID</span>","<span class=\"c\">\t\t * @return {TaskLane} TaskLane ggf. aus Repository</span>","<span class=\"c\">\t\t */</span>","        getTaskLaneByID<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>activityGroupID<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">if</span> <span class=\"k\">(!</span>taskLaneRepository<span class=\"k\">[</span>activityGroupID<span class=\"k\">])</span> <span class=\"k\">{</span>","\t\t\t\ttaskLaneRepository<span class=\"k\">[</span>activityGroupID<span class=\"k\">]</span> <span class=\"k\">=</span> createTaskLane<span class=\"k\">(</span>activityGroupID<span class=\"k\">);</span>","\t\t\t<span class=\"k\">}</span>","            <span class=\"k\">return</span> taskLaneRepository<span class=\"k\">[</span>activityGroupID<span class=\"k\">];</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">());</span> <span class=\"c\">// Singleton pattern end</span>","","<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","","<span class=\"k\">var</span> workflow <span class=\"k\">=</span> WoSec<span class=\"k\">.</span>workflow<span class=\"k\">;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * Basisklasse f&#195;&#188;r Events unterschiedlichen Typs, bietet Ausf&#195;&#188;hren- und Animiere-Methoden.</span>","<span class=\"c\"> * Speichert einen zugeh&#195;&#182;rigen Zeitstempel.</span>","<span class=\"c\"> * Entwurfsmuster Befehl (Command)</span>","<span class=\"c\"> * Namespace f&#195;&#188;r alle EventCommands</span>","<span class=\"c\"> * @param {Integer} timestamp Zeitstempel</span>","<span class=\"c\"> */</span>","<span class=\"k\">function</span> EventCommand<span class=\"k\">(</span>timestamp<span class=\"k\">)</span> <span class=\"k\">{</span><span class=\"c\">// interface (and abstract class)</span>","\t<span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">typeof</span><span class=\"k\">(</span>timestamp<span class=\"k\">)</span> <span class=\"k\">!=</span> <span class=\"s\">\"number\"</span><span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">throw</span> <span class=\"k\">new</span> Error<span class=\"k\">(</span><span class=\"s\">\"Timestamp [\"</span> <span class=\"k\">+</span> timestamp <span class=\"k\">+</span> <span class=\"s\">\"] is not a number\"</span><span class=\"k\">);</span>","\t<span class=\"k\">}</span>","\t<span class=\"k\">this</span><span class=\"k\">.</span>timestamp <span class=\"k\">=</span> timestamp<span class=\"k\">;</span>","<span class=\"k\">}</span> ","EventCommand<span class=\"k\">.</span>prototype <span class=\"k\">=</span> Object<span class=\"k\">.</span>create<span class=\"k\">(</span>WoSec<span class=\"k\">.</span>baseObject<span class=\"k\">);</span>","<span class=\"c\">/**</span>","<span class=\"c\"> * F&#195;&#188;hrt den Befehl aus.</span>","<span class=\"c\"> * @return {EventCommand}</span>","<span class=\"c\"> */</span>","EventCommand<span class=\"k\">.</span>prototype<span class=\"k\">.</span>execute <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","<span class=\"c\">/**</span>","<span class=\"c\"> * F&#195;&#188;hrt die Animation des Befehls aus.</span>","<span class=\"c\"> * @return {EventCommand}</span>","<span class=\"c\"> */</span>","EventCommand<span class=\"k\">.</span>prototype<span class=\"k\">.</span>animate <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","<span class=\"c\">/**</span>","<span class=\"c\"> * Macht den Befehl r&#195;&#188;ckg&#195;&#164;ngig</span>","<span class=\"c\"> */</span>","EventCommand<span class=\"k\">.</span>prototype<span class=\"k\">.</span>unwind <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","<span class=\"k\">}</span>","<span class=\"c\">/**</span>","<span class=\"c\"> * Gibt den Zeitstempel des Events zur&#195;&#188;ck</span>","<span class=\"c\"> * @return {Integer}</span>","<span class=\"c\"> */</span>","EventCommand<span class=\"k\">.</span>prototype<span class=\"k\">.</span>getTimestamp <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>timestamp<span class=\"k\">;</span>","<span class=\"k\">}</span>","EventCommand<span class=\"k\">.</span>create <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>event<span class=\"k\">)</span> <span class=\"k\">{</span>","\t<span class=\"k\">return</span> <span class=\"k\">new</span> EventCommand<span class=\"k\">(</span>event<span class=\"k\">.</span>timestamp<span class=\"k\">);</span>","<span class=\"k\">}</span>","","","<span class=\"c\">// wei&#195;&#159; nicht so recht hier... gibt verschiedene M&#195;&#182;glichkeiten das umzusetzen. Ich denke mal das der klassische Ansatz der einfachste ist...</span>","<span class=\"c\">// WoSec.inherit erm&#195;&#182;glicht jedenfalls die Nutzung des instanceof Operators</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * Abstrakte Klasse. Abstrahiert HighlightingEvent und MarkFinishedEvent,</span>","<span class=\"c\"> * die beide eine Status&#195;&#164;nderung eines Tasks darstellen.</span>","<span class=\"c\"> * @augments EventCommand</span>","<span class=\"c\"> */</span>","<span class=\"k\">function</span> StateChangingEvent<span class=\"k\">()</span> <span class=\"k\">{}</span>","WoSec<span class=\"k\">.</span>inherit<span class=\"k\">(</span>StateChangingEvent<span class=\"k\">,</span> EventCommand<span class=\"k\">);</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * Beim Starten einer Aktivit&#195;&#164;t delegiert dieses Objekt die Anweisung,</span>","<span class=\"c\"> * sich hervorzuheben, an den zugeh&#195;&#182;rigen Task.</span>","<span class=\"c\"> * @augments StateChangingEvent</span>","<span class=\"c\"> * @param {Task} task Zugeh&#195;&#182;riger Task</span>","<span class=\"c\"> * @param {Integer} timestamp Zeitstempel</span>","<span class=\"c\"> */</span>","<span class=\"k\">function</span> HighlightingEvent<span class=\"k\">(</span>task<span class=\"k\">,</span> timestamp<span class=\"k\">)</span> <span class=\"k\">{</span>","\tEventCommand<span class=\"k\">.</span>call<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> timestamp<span class=\"k\">);</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>task <span class=\"k\">=</span> task<span class=\"k\">;</span>","<span class=\"k\">}</span>","WoSec<span class=\"k\">.</span>inherit<span class=\"k\">(</span>HighlightingEvent<span class=\"k\">,</span> StateChangingEvent<span class=\"k\">);</span>","<span class=\"c\">/**</span>","<span class=\"c\"> * @see EventCommand.execute</span>","<span class=\"c\"> */</span>","HighlightingEvent<span class=\"k\">.</span>prototype<span class=\"k\">.</span>execute <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>task<span class=\"k\">.</span>markActive<span class=\"k\">();</span>","\t<span class=\"k\">this</span><span class=\"k\">.</span>task<span class=\"k\">.</span>getCorrespondingTask<span class=\"k\">()</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">this</span><span class=\"k\">.</span>task<span class=\"k\">.</span>getCorrespondingTask<span class=\"k\">().</span>markActive<span class=\"k\">();</span>","\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","HighlightingEvent<span class=\"k\">.</span>prototype<span class=\"k\">.</span>unwind <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t<span class=\"k\">this</span><span class=\"k\">.</span>task<span class=\"k\">.</span>reset<span class=\"k\">();</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>task<span class=\"k\">.</span>getCorrespondingTask<span class=\"k\">()</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">this</span><span class=\"k\">.</span>task<span class=\"k\">.</span>getCorrespondingTask<span class=\"k\">().</span>reset<span class=\"k\">();</span>","\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","<span class=\"k\">}</span>","<span class=\"c\">/**</span>","<span class=\"c\"> * @see EventCommand.animate</span>","<span class=\"c\"> */</span>","HighlightingEvent<span class=\"k\">.</span>prototype<span class=\"k\">.</span>animate <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>task<span class=\"k\">.</span>highlight<span class=\"k\">();</span>","\t<span class=\"k\">this</span><span class=\"k\">.</span>task<span class=\"k\">.</span>getCorrespondingTask<span class=\"k\">()</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">this</span><span class=\"k\">.</span>task<span class=\"k\">.</span>getCorrespondingTask<span class=\"k\">().</span>highlight<span class=\"k\">();</span>","\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","<span class=\"c\">/**</span>","<span class=\"c\"> * Factory Methode zur Erstellung eines HighlightingEvent</span>","<span class=\"c\"> * @param {Object} event Eventdaten</span>","<span class=\"c\"> * @param {String} event.activityID Aktivit&#195;&#164;ts ID</span>","<span class=\"c\"> * @param {Integer} event.timestamp Zeitstempel</span>","<span class=\"c\"> */</span>","HighlightingEvent<span class=\"k\">.</span>create <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>event<span class=\"k\">)</span> <span class=\"k\">{</span>","\t<span class=\"k\">return</span> <span class=\"k\">new</span> HighlightingEvent<span class=\"k\">(</span>workflow<span class=\"k\">.</span>getTaskByID<span class=\"k\">(</span>event<span class=\"k\">.</span>activityID<span class=\"k\">),</span> event<span class=\"k\">.</span>timestamp<span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * Beim Beenden einer Aktivit&#195;&#164;t delegiert dieses Objekt die Anweisung an den zugeh&#195;&#182;rigen Task,</span>","<span class=\"c\"> *  sich als beendet zu markieren.</span>","<span class=\"c\"> * @augments StateChangingEvent</span>","<span class=\"c\"> * @param {Task} task Zugeh&#195;&#182;riger Task</span>","<span class=\"c\"> * @param {Object} information Zus&#195;&#164;tzliche Eventinformationen</span>","<span class=\"c\"> * @param {Integer} timestamp Zeitstempel</span>","<span class=\"c\"> */</span>","<span class=\"k\">function</span> MarkFinishedEvent<span class=\"k\">(</span>task<span class=\"k\">,</span> information<span class=\"k\">,</span> timestamp<span class=\"k\">)</span> <span class=\"k\">{</span>","\tEventCommand<span class=\"k\">.</span>call<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> timestamp<span class=\"k\">);</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>task <span class=\"k\">=</span> task<span class=\"k\">;</span>","\t<span class=\"k\">this</span><span class=\"k\">.</span>information <span class=\"k\">=</span> information <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","<span class=\"k\">}</span>","WoSec<span class=\"k\">.</span>inherit<span class=\"k\">(</span>MarkFinishedEvent<span class=\"k\">,</span> StateChangingEvent<span class=\"k\">);</span>","<span class=\"c\">/**</span>","<span class=\"c\"> * @see EventCommand.execute</span>","<span class=\"c\"> */</span>","MarkFinishedEvent<span class=\"k\">.</span>prototype<span class=\"k\">.</span>execute <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>task<span class=\"k\">.</span>markFinished<span class=\"k\">();</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>task<span class=\"k\">.</span>getCorrespondingTask<span class=\"k\">()</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">this</span><span class=\"k\">.</span>task<span class=\"k\">.</span>getCorrespondingTask<span class=\"k\">().</span>markFinished<span class=\"k\">();</span>","\t<span class=\"k\">this</span><span class=\"k\">.</span>task<span class=\"k\">.</span>setInformation<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>information<span class=\"k\">);</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>task<span class=\"k\">.</span>getCorrespondingTask<span class=\"k\">()</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">this</span><span class=\"k\">.</span>task<span class=\"k\">.</span>getCorrespondingTask<span class=\"k\">().</span>setInformation<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>information<span class=\"k\">);</span>","\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","MarkFinishedEvent<span class=\"k\">.</span>prototype<span class=\"k\">.</span>unwind <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t<span class=\"k\">this</span><span class=\"k\">.</span>task<span class=\"k\">.</span>markActive<span class=\"k\">();</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>task<span class=\"k\">.</span>getCorrespondingTask<span class=\"k\">()</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">this</span><span class=\"k\">.</span>task<span class=\"k\">.</span>getCorrespondingTask<span class=\"k\">().</span>markActive<span class=\"k\">();</span>","\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","<span class=\"k\">}</span>","<span class=\"c\">//MarkFinishedEvent.prototype.animate = function() {}; // NOP</span>","<span class=\"c\">/**</span>","<span class=\"c\"> * Factory Methode zur Erstellung eines MarkFinishedEvent</span>","<span class=\"c\"> * @param {Object} event Eventdaten</span>","<span class=\"c\"> * @param {String} event.activityID Aktivit&#195;&#164;ts ID</span>","<span class=\"c\"> * @param {Integer} event.timestamp Zeitstempel</span>","<span class=\"c\"> * @param {Object} event.information zus&#195;&#164;tzliche Eventinformationen</span>","<span class=\"c\"> * </span>","<span class=\"c\"> */</span>","MarkFinishedEvent<span class=\"k\">.</span>create <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>event<span class=\"k\">)</span> <span class=\"k\">{</span>","\t<span class=\"k\">return</span> <span class=\"k\">new</span> MarkFinishedEvent<span class=\"k\">(</span>workflow<span class=\"k\">.</span>getTaskByID<span class=\"k\">(</span>event<span class=\"k\">.</span>activityID<span class=\"k\">),</span> event<span class=\"k\">.</span>information<span class=\"k\">,</span> event<span class=\"k\">.</span>timestamp<span class=\"k\">);</span>","<span class=\"k\">}</span>","","","<span class=\"c\">/**</span>","<span class=\"c\"> * Bei einem Datentransfer delegiert dieses Objekt die Anweisung an den zugeh&#195;&#182;rigen Task,</span>","<span class=\"c\"> * eine Animation zum korrespondierenden Task darzustellen.</span>","<span class=\"c\"> * @param {Task} task Zugeh&#195;&#182;riger Task</span>","<span class=\"c\"> * @param {Object} information Zus&#195;&#164;tzliche Eventinformationen</span>","<span class=\"c\"> * @param {Integer} timestamp Zeitstempel</span>","<span class=\"c\"> */</span>","<span class=\"k\">function</span> TransferingDataEvent<span class=\"k\">(</span>task<span class=\"k\">,</span> information<span class=\"k\">,</span> timestamp<span class=\"k\">)</span> <span class=\"k\">{</span>","\tEventCommand<span class=\"k\">.</span>call<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> timestamp<span class=\"k\">);</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>task <span class=\"k\">=</span> task<span class=\"k\">;</span>","\t<span class=\"k\">this</span><span class=\"k\">.</span>information <span class=\"k\">=</span> information <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","<span class=\"k\">}</span>","WoSec<span class=\"k\">.</span>inherit<span class=\"k\">(</span>TransferingDataEvent<span class=\"k\">,</span> EventCommand<span class=\"k\">);</span>","<span class=\"c\">/**</span>","<span class=\"c\"> * @see EventCommand.execute</span>","<span class=\"c\"> */</span>","TransferingDataEvent<span class=\"k\">.</span>prototype<span class=\"k\">.</span>execute <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>task<span class=\"k\">.</span>setInformation<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>information<span class=\"k\">);</span>","\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","<span class=\"c\">// TransferingDataEvent.prototype.unwind = function() {} // NOP</span>","<span class=\"c\">/**</span>","<span class=\"c\"> * @see EventCommand.animate</span>","<span class=\"c\"> */</span>","TransferingDataEvent<span class=\"k\">.</span>prototype<span class=\"k\">.</span>animate <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>task<span class=\"k\">.</span>animateData<span class=\"k\">();</span>","\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","<span class=\"c\">/**</span>","<span class=\"c\"> * Factory Methode zur Erstellung eines TransferingDataEvent</span>","<span class=\"c\"> * @param {Object} event Eventdaten</span>","<span class=\"c\"> * @param {String} event.activityID Aktivit&#195;&#164;ts ID</span>","<span class=\"c\"> * @param {Integer} event.timestamp Zeitstempel</span>","<span class=\"c\"> * @param {Object} event.information zus&#195;&#164;tzliche Eventinformationen</span>","<span class=\"c\"> * </span>","<span class=\"c\"> */</span>","TransferingDataEvent<span class=\"k\">.</span>create <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>event<span class=\"k\">)</span> <span class=\"k\">{</span>","\t<span class=\"k\">return</span> <span class=\"k\">new</span> TransferingDataEvent<span class=\"k\">(</span>workflow<span class=\"k\">.</span>getTaskByID<span class=\"k\">(</span>event<span class=\"k\">.</span>activityID<span class=\"k\">),</span> event<span class=\"k\">.</span>information<span class=\"k\">,</span> event<span class=\"k\">.</span>timestamp<span class=\"k\">);</span>","<span class=\"k\">}</span>","","","<span class=\"c\">/**</span>","<span class=\"c\"> * Bei der Festlegung des zugewiesenen Users bzw. Providers delegiert dieses Objekt die Anweisung,</span>","<span class=\"c\"> * sich hervorzuheben und den Participant festzulegen, an die zugeh&#195;&#182;rige TaskLane sich hervorzuheben.</span>","<span class=\"c\"> * @param {TaskLane} taskLane Zugeh&#195;&#182;rige TaskLane</span>","<span class=\"c\"> * @param {Object} information Zus&#195;&#164;tzliche Eventinformationen</span>","<span class=\"c\"> * @param {Integer} timestamp Zeitstempel</span>","<span class=\"c\"> */</span>","<span class=\"k\">function</span> SpecifyingParticipantEvent<span class=\"k\">(</span>taskLane<span class=\"k\">,</span> information<span class=\"k\">,</span> timestamp<span class=\"k\">)</span> <span class=\"k\">{</span>","\tEventCommand<span class=\"k\">.</span>call<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> timestamp<span class=\"k\">);</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>taskLane <span class=\"k\">=</span> taskLane<span class=\"k\">;</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>information <span class=\"k\">=</span> information <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","<span class=\"k\">}</span>","WoSec<span class=\"k\">.</span>inherit<span class=\"k\">(</span>SpecifyingParticipantEvent<span class=\"k\">,</span> EventCommand<span class=\"k\">);</span>","<span class=\"c\">/**</span>","<span class=\"c\"> * @see EventCommand.execute</span>","<span class=\"c\"> */</span>","SpecifyingParticipantEvent<span class=\"k\">.</span>prototype<span class=\"k\">.</span>execute <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>taskLane<span class=\"k\">.</span>setInformation<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>information<span class=\"k\">);</span>","\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","<span class=\"c\">// SpecifyingParticipantEvent.prototype.unwind = function() {} // NOP</span>","<span class=\"c\">/**</span>","<span class=\"c\"> * @see EventCommand.animate</span>","<span class=\"c\"> */</span>","SpecifyingParticipantEvent<span class=\"k\">.</span>prototype<span class=\"k\">.</span>animate <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","    <span class=\"k\">this</span><span class=\"k\">.</span>taskLane<span class=\"k\">.</span>highlight<span class=\"k\">();</span>","\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","<span class=\"c\">/**</span>","<span class=\"c\"> * Factory Methode zur Erstellung eines SpecifyingParticipantEvent</span>","<span class=\"c\"> * @param {Object} event Eventdaten</span>","<span class=\"c\"> * @param {String} event.activityGroupID Aktivit&#195;&#164;tsGruppen ID</span>","<span class=\"c\"> * @param {Integer} event.timestamp Zeitstempel</span>","<span class=\"c\"> * @param {Object} event.information zus&#195;&#164;tzliche Eventinformationen</span>","<span class=\"c\"> * @param {Object} event.information.participant ausgew&#195;&#164;hlter Provider oder User</span>","<span class=\"c\"> */</span>","SpecifyingParticipantEvent<span class=\"k\">.</span>create <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>event<span class=\"k\">)</span> <span class=\"k\">{</span>","\t<span class=\"k\">return</span> <span class=\"k\">new</span> SpecifyingParticipantEvent<span class=\"k\">(</span>workflow<span class=\"k\">.</span>getTaskLaneByID<span class=\"k\">(</span>event<span class=\"k\">.</span>activityGroupID<span class=\"k\">),</span> event<span class=\"k\">.</span>information<span class=\"k\">,</span> event<span class=\"k\">.</span>timestamp<span class=\"k\">);</span>","<span class=\"k\">}</span>","","<span class=\"c\">// exports</span>","EventCommand<span class=\"k\">.</span>EventCommand <span class=\"k\">=</span> EventCommand<span class=\"k\">;</span>","EventCommand<span class=\"k\">.</span>StateChanging <span class=\"k\">=</span> StateChangingEvent<span class=\"k\">;</span>","EventCommand<span class=\"k\">.</span>Highlighting <span class=\"k\">=</span> HighlightingEvent<span class=\"k\">;</span>","EventCommand<span class=\"k\">.</span>MarkFinished <span class=\"k\">=</span> MarkFinishedEvent<span class=\"k\">;</span>","EventCommand<span class=\"k\">.</span>TransferingData <span class=\"k\">=</span> TransferingDataEvent<span class=\"k\">;</span>","EventCommand<span class=\"k\">.</span>SpecifyingParticipant <span class=\"k\">=</span> SpecifyingParticipantEvent<span class=\"k\">;</span>","","WoSec<span class=\"k\">.</span>EventCommand <span class=\"k\">=</span> EventCommand<span class=\"k\">;</span>","","<span class=\"k\">}</span><span class=\"k\">());</span>","","","<span class=\"c\">/**</span>","<span class=\"c\"> * Singleton zur Verwaltung einer Liste von EventCommands</span>","<span class=\"c\"> * und eines Zeigers zur momentanen (zeitlichen) Position der Events</span>","<span class=\"c\"> * @type EventChain</span>","<span class=\"c\"> */</span>","WoSec<span class=\"k\">.</span>eventChain <span class=\"k\">=</span> <span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","\t<span class=\"k\">var</span> PLAY_TIME_BETWEEN_EVENTS_MS <span class=\"k\">=</span> <span class=\"s\">750</span><span class=\"k\">;</span>","\t<span class=\"k\">var</span> EventCommand <span class=\"k\">=</span> WoSec<span class=\"k\">.</span>EventCommand<span class=\"k\">;</span>","    ","\t<span class=\"k\">var</span> events <span class=\"k\">=</span> <span class=\"k\">[];</span>","\t<span class=\"k\">var</span> currentPosition <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","\t<span class=\"k\">var</span> observers <span class=\"k\">=</span> <span class=\"k\">[];</span>","","    <span class=\"k\">return</span> <span class=\"k\">{</span>","\t\t<span class=\"c\">/**</span>","<span class=\"c\">\t\t * Registriert einen Beobachter</span>","<span class=\"c\">\t\t * @param {Object} observer</span>","<span class=\"c\">\t\t * @return {EventChain} self</span>","<span class=\"c\">\t\t */</span>","\t\tregisterObserver<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>observer<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">typeof</span> observer<span class=\"k\">.</span>notify <span class=\"k\">!==</span> <span class=\"s\">\"function\"</span><span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">throw</span> <span class=\"k\">new</span> Error<span class=\"k\">(</span><span class=\"s\">\"Observer has to support notify()-Method\"</span><span class=\"k\">);</span>","\t\t\t<span class=\"k\">}</span>","\t\t\tobservers<span class=\"k\">.</span>push<span class=\"k\">(</span>observer<span class=\"k\">);</span>","\t\t\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","\t\t<span class=\"c\">/**</span>","<span class=\"c\">\t\t * Gibt die momentane Position in der EventChain zur&#195;&#188;ck</span>","<span class=\"c\">\t\t * @return {Integer} momentane Position</span>","<span class=\"c\">\t\t */</span>","\t\tgetCurrentPosition<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">return</span> currentPosition<span class=\"k\">;</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","\t\t<span class=\"c\">/**</span>","<span class=\"c\">\t\t * Verarbeitet JSON Daten, erstellt neue EventCommands und f&#195;&#188;gt sie dem Repository hinzu.</span>","<span class=\"c\">\t\t * @memberOf EventChain</span>","<span class=\"c\">\t\t * @param {Array} data JSON daten</span>","<span class=\"c\">\t\t * @return {EventChain} self</span>","<span class=\"c\">\t\t */</span>","        add<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>data<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\tdata <span class=\"k\">=</span> data <span class=\"k\">||</span> <span class=\"k\">[];</span>","            data<span class=\"k\">.</span>forEach<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span>event<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(!</span>EventCommand<span class=\"k\">[</span>event<span class=\"k\">.</span>eventCommand<span class=\"k\">])</span> <span class=\"k\">{</span>","\t\t\t\t\t<span class=\"k\">throw</span> <span class=\"k\">new</span> Error<span class=\"k\">(</span><span class=\"s\">\"Unknown EventCommand: \"</span> <span class=\"k\">+</span> event<span class=\"k\">.</span>eventCommand<span class=\"k\">);</span>","\t\t\t\t<span class=\"k\">}</span>","\t\t\t\tevents<span class=\"k\">.</span>push<span class=\"k\">(</span>EventCommand<span class=\"k\">[</span>event<span class=\"k\">.</span>eventCommand<span class=\"k\">].</span>create<span class=\"k\">(</span>event<span class=\"k\">));</span> <span class=\"c\">// factory method</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t\t\tobservers<span class=\"k\">.</span>forEach<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span>observer<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\tobserver<span class=\"k\">.</span>notify<span class=\"k\">();</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t\t\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","\t\t<span class=\"c\">/**</span>","<span class=\"c\">\t\t * Iteriert &#195;&#188;ber Events und &#195;&#188;bergibt das jeweilige EventCommand an die &#195;&#188;bergebene Strategie.</span>","<span class=\"c\">\t\t * H&#195;&#164;lt an wenn die Strategie false zur&#195;&#188;ckgibt</span>","<span class=\"c\">\t\t * Informiert die Beobachter</span>","<span class=\"c\">\t\t * @memberOf EventChain</span>","<span class=\"c\">\t\t * @param {Function} strategy Strategie zur Iteration</span>","<span class=\"c\">\t\t * @param {Boolean} [backwards] true um die Kette r&#195;&#188;ckw&#195;&#164;rts zu durchlaufen</span>","<span class=\"c\">\t\t * @return {EventChain} self</span>","<span class=\"c\">\t\t */</span>","        seek<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>strategy<span class=\"k\">,</span> backwards<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> direction <span class=\"k\">=</span> backwards <span class=\"k\">?</span> <span class=\"k\">-</span><span class=\"s\">1</span> <span class=\"k\">:</span> <span class=\"s\">1</span><span class=\"k\">;</span>","\t\t\t<span class=\"k\">var</span> i <span class=\"k\">=</span> currentPosition<span class=\"k\">;</span>","            <span class=\"k\">while</span> <span class=\"k\">(</span><span class=\"s\">0</span> <span class=\"k\">&lt;=</span> i <span class=\"k\">&amp;&amp;</span> i <span class=\"k\">&lt;</span> events<span class=\"k\">.</span>length<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\tcurrentPosition <span class=\"k\">=</span> i<span class=\"k\">;</span>","\t\t\t\tobservers<span class=\"k\">.</span>forEach<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span>observer<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\tobserver<span class=\"k\">.</span>notify<span class=\"k\">();</span>","\t\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>strategy<span class=\"k\">(</span>events<span class=\"k\">[</span>i<span class=\"k\">],</span> i<span class=\"k\">)</span> <span class=\"k\">===</span> <span class=\"k\">false</span><span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t<span class=\"k\">break</span><span class=\"k\">;</span>","\t\t\t\t<span class=\"k\">}</span>","\t\t\t\ti <span class=\"k\">+=</span> direction","\t\t\t<span class=\"k\">}</span>","\t\t\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","\t\t<span class=\"c\">/**</span>","<span class=\"c\">\t\t * Iteriert &#195;&#188;ber alle Events</span>","<span class=\"c\">\t\t * @see Array.prototype.forEach</span>","<span class=\"c\">\t\t */</span>","\t\tforEach<span class=\"k\">:</span> events<span class=\"k\">.</span>forEach<span class=\"k\">.</span>bind<span class=\"k\">(</span>events<span class=\"k\">),</span>","\t\t<span class=\"c\">/**</span>","<span class=\"c\">\t\t * Iteriert &#195;&#188;ber Events in einer angenehmen Geschwindigkeit und f&#195;&#188;hrt die EventCommands aus.</span>","<span class=\"c\">\t\t * @memberOf EventChain</span>","<span class=\"c\">\t\t * @return {EventChain} self</span>","<span class=\"c\">\t\t */</span>","        play<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">var</span> after <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","            <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>seek<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span>eventCommand<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\teventCommand<span class=\"k\">.</span>later<span class=\"k\">(</span>after<span class=\"k\">,</span> <span class=\"s\">\"execute\"</span><span class=\"k\">)</span>","\t\t\t\t            <span class=\"k\">.</span>later<span class=\"k\">(</span>after<span class=\"k\">,</span> <span class=\"s\">\"animate\"</span><span class=\"k\">);</span>","\t\t\t\tafter <span class=\"k\">+=</span> PLAY_TIME_BETWEEN_EVENTS_MS<span class=\"k\">;</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t\t\tcurrentPosition<span class=\"k\">++;</span>","\t\t\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","\t\t<span class=\"c\">/**</span>","<span class=\"c\">\t\t * Gibt das letzte EventCommand in der Kette zur&#195;&#188;ck,</span>","<span class=\"c\">\t\t * falls die Kette leer ist, wird ein EventCommand mit Zeitstempel 0 zur&#195;&#188;ckgegeben</span>","<span class=\"c\">\t\t * @memberOf EventChain</span>","<span class=\"c\">\t\t * @return {EventCommand} das letzte EventCommand in der Kette</span>","<span class=\"c\">\t\t */</span>","\t\tlast<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>events<span class=\"k\">[</span>events<span class=\"k\">.</span>length <span class=\"k\">-</span> <span class=\"s\">1</span><span class=\"k\">])</span> <span class=\"k\">{</span> <span class=\"c\">// if last event exists return it</span>","\t\t\t\t<span class=\"k\">return</span> events<span class=\"k\">[</span>events<span class=\"k\">.</span>length <span class=\"k\">-</span> <span class=\"s\">1</span><span class=\"k\">];</span>","\t\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">return</span> <span class=\"k\">new</span> EventCommand<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">);</span> <span class=\"c\">// else mock an event with timestamp zero for the ajaxUpdater</span>","\t\t\t<span class=\"k\">}</span>","\t\t<span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">());</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * Singleton zum Abfragen neuer Eventdaten alle paar Sekunden (Default 5).</span>","<span class=\"c\"> * Empfangene Eventdaten werden an die EventChain weitergegeben.</span>","<span class=\"c\"> */</span>","WoSec<span class=\"k\">.</span>ajaxUpdater <span class=\"k\">=</span> <span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t<span class=\"k\">var</span> DELAY_BETWEEN_POLLS <span class=\"k\">=</span> <span class=\"s\">5000</span><span class=\"k\">;</span>","\t<span class=\"k\">var</span> POLL_URL <span class=\"k\">=</span> <span class=\"s\">\"UpdateController?type=Event\"</span><span class=\"k\">;</span>","\t","\t<span class=\"k\">var</span> $ <span class=\"k\">=</span> jQuery<span class=\"k\">;</span>","    <span class=\"k\">var</span> eventChain <span class=\"k\">=</span> WoSec<span class=\"k\">.</span>eventChain<span class=\"k\">;</span>","\t<span class=\"k\">var</span> workflow <span class=\"k\">=</span> WoSec<span class=\"k\">.</span>workflow<span class=\"k\">;</span>","\t","    <span class=\"k\">return</span> <span class=\"k\">{</span>","\t\t<span class=\"c\">/**</span>","<span class=\"c\">\t\t * Startet den Abfrageprozess.</span>","<span class=\"c\">\t\t */</span>","        init<span class=\"k\">:</span> <span class=\"k\">function</span> loop<span class=\"k\">(</span>lastVisitedTimestamp<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\tlastVisitedTimestamp <span class=\"k\">=</span> lastVisitedTimestamp <span class=\"k\">||</span> <span class=\"s\">0</span><span class=\"k\">;</span>\t","\t\t\t$<span class=\"k\">.</span>getJSON<span class=\"k\">(</span>POLL_URL<span class=\"k\">,</span> <span class=\"k\">{</span>since<span class=\"k\">:</span> eventChain<span class=\"k\">.</span>last<span class=\"k\">().</span>getTimestamp<span class=\"k\">()</span> <span class=\"k\">+</span> <span class=\"s\">1</span><span class=\"k\">,</span> instance<span class=\"k\">:</span> workflow<span class=\"k\">.</span>getInstanceID<span class=\"k\">()</span><span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>data<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\teventChain<span class=\"k\">.</span>add<span class=\"k\">(</span>data<span class=\"k\">).</span>seek<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span>eventCommand<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t<span class=\"k\">return</span> eventCommand<span class=\"k\">.</span>getTimestamp<span class=\"k\">()</span> <span class=\"k\">&lt;=</span> lastVisitedTimestamp<span class=\"k\">;</span> <span class=\"c\">// seek forward until the timestamp is newer than the lastVisited</span>","\t\t\t\t<span class=\"k\">}</span><span class=\"k\">).</span>play<span class=\"k\">();</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t\t\tsetTimeout<span class=\"k\">(</span>loop<span class=\"k\">,</span> DELAY_BETWEEN_POLLS<span class=\"k\">);</span>","\t\t<span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">());</span>"];
_$jscoverage['WoSec.js'][2]++;
var WoSec = {};
_$jscoverage['WoSec.js'][5]++;
if (((typeof Object.create) !== "function")) {
  _$jscoverage['WoSec.js'][6]++;
  Object.create = (function (o) {
  _$jscoverage['WoSec.js'][7]++;
  function F() {
}
  _$jscoverage['WoSec.js'][8]++;
  F.prototype = o;
  _$jscoverage['WoSec.js'][9]++;
  return new F();
});
}
_$jscoverage['WoSec.js'][13]++;
if (((typeof Array.prototype.forEach) !== "function")) {
  _$jscoverage['WoSec.js'][14]++;
  Array.prototype.forEach = (function (callback) {
  _$jscoverage['WoSec.js'][16]++;
  var len = this.length;
  _$jscoverage['WoSec.js'][17]++;
  if (((typeof callback) != "function")) {
    _$jscoverage['WoSec.js'][18]++;
    throw new TypeError();
  }
  _$jscoverage['WoSec.js'][20]++;
  var thisObject = arguments[1];
  _$jscoverage['WoSec.js'][21]++;
  for (var i = 0; (i < len); (i++)) {
    _$jscoverage['WoSec.js'][23]++;
    if ((i in this)) {
      _$jscoverage['WoSec.js'][24]++;
      callback.call(thisObject, this[i], i, this);
    }
}
});
}
_$jscoverage['WoSec.js'][29]++;
if (((typeof Function.prototype.bind) !== "function")) {
  _$jscoverage['WoSec.js'][31]++;
  Function.prototype.bind = (function (slice) {
  _$jscoverage['WoSec.js'][34]++;
  function bind(context) {
    _$jscoverage['WoSec.js'][36]++;
    var self = this;
    _$jscoverage['WoSec.js'][42]++;
    if ((1 < arguments.length)) {
      _$jscoverage['WoSec.js'][44]++;
      var $arguments = slice.call(arguments, 1);
      _$jscoverage['WoSec.js'][45]++;
      return (function () {
  _$jscoverage['WoSec.js'][46]++;
  return self.apply(context, (arguments.length? $arguments.concat(slice.call(arguments)): $arguments));
});
    }
    _$jscoverage['WoSec.js'][58]++;
    return (function () {
  _$jscoverage['WoSec.js'][60]++;
  return (arguments.length? self.apply(context, arguments): self.call(context));
});
}
  _$jscoverage['WoSec.js'][65]++;
  return bind;
})(Array.prototype.slice);
}
_$jscoverage['WoSec.js'][70]++;
WoSec.baseObject = {later: (function (msec, method) {
  _$jscoverage['WoSec.js'][72]++;
  var that = this, args = Array.prototype.slice.apply(arguments, [2]);
  _$jscoverage['WoSec.js'][73]++;
  if (((typeof method) === "string")) {
    _$jscoverage['WoSec.js'][74]++;
    method = that[method];
  }
  _$jscoverage['WoSec.js'][76]++;
  setTimeout((function () {
  _$jscoverage['WoSec.js'][77]++;
  method.apply(that, args);
}), msec);
  _$jscoverage['WoSec.js'][79]++;
  return that;
})};
_$jscoverage['WoSec.js'][83]++;
WoSec.inherit = (function (subType, superType) {
  _$jscoverage['WoSec.js'][84]++;
  var prototype = Object.create(superType.prototype);
  _$jscoverage['WoSec.js'][85]++;
  prototype.constructor = subType;
  _$jscoverage['WoSec.js'][86]++;
  subType.prototype = prototype;
});
_$jscoverage['WoSec.js'][127]++;
WoSec.svgUtility = (function () {
  _$jscoverage['WoSec.js'][128]++;
  var CSS_ID_COLORSTORE = "color-store", CSS_ID_COLORSTORE_UNOBTRUSIVE_COLOR = "rect-unobtrusive", CSS_ID_COLORSTORE_OBTRUSIVE_COLOR = "rect-obtrusive", CSS_ID_COLORSTORE_RESET_COLOR = "rect-reset";
  _$jscoverage['WoSec.js'][132]++;
  var ANIMATION_IMAGE_PATH = "media/images/fileicon.png", ANIMATION_IMAGE_SIZE = {width: 25.5, height: 33};
  _$jscoverage['WoSec.js'][135]++;
  var $ = jQuery;
  _$jscoverage['WoSec.js'][138]++;
  var animationPrototype;
  _$jscoverage['WoSec.js'][139]++;
  function getAnimationPrototype() {
    _$jscoverage['WoSec.js'][140]++;
    if ((! animationPrototype)) {
      _$jscoverage['WoSec.js'][141]++;
      animationPrototype = document.createElementNS("http://www.w3.org/2000/svg", "image");
      _$jscoverage['WoSec.js'][142]++;
      animationPrototype.setAttributeNS("http://www.w3.org/1999/xlink", "xlink:href", ANIMATION_IMAGE_PATH);
      _$jscoverage['WoSec.js'][143]++;
      animationPrototype.setAttribute("width", ANIMATION_IMAGE_SIZE.width);
      _$jscoverage['WoSec.js'][144]++;
      animationPrototype.setAttribute("height", ANIMATION_IMAGE_SIZE.height);
    }
    _$jscoverage['WoSec.js'][146]++;
    return animationPrototype;
}
  _$jscoverage['WoSec.js'][149]++;
  function getJQuerySVGRectanglesByActivityID(activityID) {
    _$jscoverage['WoSec.js'][150]++;
    return $("svg rect").filter((function () {
  _$jscoverage['WoSec.js'][151]++;
  return ($(this).attr("bpmn:activity-id") == activityID);
}));
}
  _$jscoverage['WoSec.js'][154]++;
  function getCircles(activityID) {
    _$jscoverage['WoSec.js'][155]++;
    return $("svg circle").filter((function () {
  _$jscoverage['WoSec.js'][156]++;
  return ($(this).attr("bpmn:activity-id") == activityID);
}));
}
  _$jscoverage['WoSec.js'][160]++;
  function getJQuerySVGRectanglesByActivityGroupID(activityGroupID) {
    _$jscoverage['WoSec.js'][161]++;
    return $("svg rect").filter((function () {
  _$jscoverage['WoSec.js'][162]++;
  return ($(this).attr("bpmn:pool-id") == activityGroupID);
}));
}
  _$jscoverage['WoSec.js'][166]++;
  return ({getTaskRectangle: (function (activityID) {
  _$jscoverage['WoSec.js'][173]++;
  var rectangles = getJQuerySVGRectanglesByActivityID(activityID);
  _$jscoverage['WoSec.js'][174]++;
  if ((rectangles.length == 0)) {
    _$jscoverage['WoSec.js'][175]++;
    rectangles = getCircles(activityID);
  }
  _$jscoverage['WoSec.js'][177]++;
  if ((rectangles.length == 0)) {
    _$jscoverage['WoSec.js'][178]++;
    throw new Error(("No rectangles/circles with activityID:[" + activityID + "] found"));
  }
  _$jscoverage['WoSec.js'][180]++;
  var that = Object.create(WoSec.baseObject);
  _$jscoverage['WoSec.js'][185]++;
  that.getPosition = (function () {
  _$jscoverage['WoSec.js'][186]++;
  return ({x: parseInt($(rectangles[0]).attr("x")), y: parseInt($(rectangles[0]).attr("y")), width: parseInt($(rectangles[0]).attr("width")), height: parseInt($(rectangles[0]).attr("height")), getCenter: (function () {
  _$jscoverage['WoSec.js'][192]++;
  return ({x: (this.x + (this.width / 2)), y: (this.y + (this.height / 2))});
})});
});
  _$jscoverage['WoSec.js'][200]++;
  var texts = $("svg text").filter((function () {
  _$jscoverage['WoSec.js'][201]++;
  var pos = that.getPosition();
  _$jscoverage['WoSec.js'][202]++;
  return ((Math.abs((parseInt($(this).attr("x")) - pos.x)) < pos.width) && (Math.abs((parseInt($(this).attr("y")) - pos.y)) < pos.height));
}));
  _$jscoverage['WoSec.js'][206]++;
  function adjustPositionForAnimation(position) {
    _$jscoverage['WoSec.js'][207]++;
    position.x -= (ANIMATION_IMAGE_SIZE.width / 2);
    _$jscoverage['WoSec.js'][208]++;
    position.y -= (ANIMATION_IMAGE_SIZE.height / 2);
    _$jscoverage['WoSec.js'][209]++;
    return position;
}
  _$jscoverage['WoSec.js'][212]++;
  var animation = this.createAnimation(activityID, adjustPositionForAnimation(that.getPosition().getCenter()));
  _$jscoverage['WoSec.js'][218]++;
  that.showAnimation = (function (task) {
  _$jscoverage['WoSec.js'][219]++;
  animation.show(adjustPositionForAnimation(task.getPosition().getCenter()));
  _$jscoverage['WoSec.js'][220]++;
  return this;
});
  _$jscoverage['WoSec.js'][226]++;
  that.highlight = (function () {
  _$jscoverage['WoSec.js'][227]++;
  rectangles.each((function () {
  _$jscoverage['WoSec.js'][228]++;
  $(this).effect("pulsate", {times: 3}, 1000);
}));
  _$jscoverage['WoSec.js'][230]++;
  return this;
});
  _$jscoverage['WoSec.js'][236]++;
  that.markObtrusive = (function () {
  _$jscoverage['WoSec.js'][237]++;
  rectangles.each((function () {
  _$jscoverage['WoSec.js'][238]++;
  $(this).attr("fill", $(("#" + CSS_ID_COLORSTORE_OBTRUSIVE_COLOR)).css("color"));
}));
  _$jscoverage['WoSec.js'][240]++;
  return this;
});
  _$jscoverage['WoSec.js'][246]++;
  that.markUnobtrusive = (function () {
  _$jscoverage['WoSec.js'][247]++;
  rectangles.each((function () {
  _$jscoverage['WoSec.js'][248]++;
  $(this).attr("fill", $(("#" + CSS_ID_COLORSTORE_UNOBTRUSIVE_COLOR)).css("color"));
}));
  _$jscoverage['WoSec.js'][250]++;
  return this;
});
  _$jscoverage['WoSec.js'][257]++;
  that.reset = (function () {
  _$jscoverage['WoSec.js'][258]++;
  rectangles.each((function () {
  _$jscoverage['WoSec.js'][259]++;
  $(this).attr("fill", $(("#" + CSS_ID_COLORSTORE_RESET_COLOR)).css("color"));
}));
  _$jscoverage['WoSec.js'][261]++;
  return this;
});
  _$jscoverage['WoSec.js'][268]++;
  that.registerOnClick = (function (handler) {
  _$jscoverage['WoSec.js'][269]++;
  $(rectangles[0]).click(handler);
  _$jscoverage['WoSec.js'][270]++;
  texts.each((function () {
  _$jscoverage['WoSec.js'][271]++;
  $(this).click(handler);
}));
  _$jscoverage['WoSec.js'][273]++;
  return this;
});
  _$jscoverage['WoSec.js'][280]++;
  that.registerOnHover = (function (handler) {
  _$jscoverage['WoSec.js'][281]++;
  $(rectangles[0]).hover(handler);
  _$jscoverage['WoSec.js'][282]++;
  texts.each((function () {
  _$jscoverage['WoSec.js'][283]++;
  $(this).hover(handler);
}));
  _$jscoverage['WoSec.js'][285]++;
  return this;
});
  _$jscoverage['WoSec.js'][288]++;
  return that;
}), createAnimation: (function (id, position) {
  _$jscoverage['WoSec.js'][296]++;
  var that = Object.create(WoSec.baseObject);
  _$jscoverage['WoSec.js'][297]++;
  var icon = getAnimationPrototype().cloneNode(true);
  _$jscoverage['WoSec.js'][298]++;
  icon.setAttribute("id", id);
  _$jscoverage['WoSec.js'][299]++;
  $("svg")[0].appendChild(icon);
  _$jscoverage['WoSec.js'][300]++;
  var jQueryIcon = $(("#" + id));
  _$jscoverage['WoSec.js'][301]++;
  jQueryIcon.hide();
  _$jscoverage['WoSec.js'][302]++;
  jQueryIcon.attr("x", position.x);
  _$jscoverage['WoSec.js'][303]++;
  jQueryIcon.attr("y", position.y);
  _$jscoverage['WoSec.js'][305]++;
  that.show = (function (endPosition) {
  _$jscoverage['WoSec.js'][306]++;
  jQueryIcon.show();
  _$jscoverage['WoSec.js'][307]++;
  jQueryIcon.animate({svgY: endPosition.y}, 2000, (function () {
  _$jscoverage['WoSec.js'][308]++;
  jQueryIcon.hide();
}));
  _$jscoverage['WoSec.js'][310]++;
  jQueryIcon.attr("y", position.y);
  _$jscoverage['WoSec.js'][311]++;
  return this;
});
  _$jscoverage['WoSec.js'][314]++;
  return that;
}), getTaskLaneRectangle: (function (activityGroupID) {
  _$jscoverage['WoSec.js'][322]++;
  var jQueryRectangles = getJQuerySVGRectanglesByActivityGroupID(activityGroupID);
  _$jscoverage['WoSec.js'][323]++;
  var that = Object.create(WoSec.baseObject);
  _$jscoverage['WoSec.js'][327]++;
  that.highlight = (function () {
  _$jscoverage['WoSec.js'][328]++;
  jQueryRectangles.each((function () {
  _$jscoverage['WoSec.js'][329]++;
  $(this).effect("pulsate", {times: 1}, 1000);
}));
});
  _$jscoverage['WoSec.js'][332]++;
  return that;
})});
})();
_$jscoverage['WoSec.js'][341]++;
WoSec.htmlRenderer = (function () {
  _$jscoverage['WoSec.js'][342]++;
  var $ = jQuery;
  _$jscoverage['WoSec.js'][344]++;
  var CSS_ID_INFOBOXES = "infoboxes", CSS_CLASS_INFOBOX = "infobox", CSS_CLASS_INFOBOX_PARTICIPANT = "infobox-participant", CSS_CLASS_INFOBOX_DATA = "infobox-data", INFOBOX_HIDE_DELAY_MS = 3000;
  _$jscoverage['WoSec.js'][349]++;
  var CSS_ID_DATABOX = "databox", CSS_CLASS_DATABOX_ENTRY = "databox-entry", CSS_ID_DATABOX_HOVER = "databox-hover", DATABOX_HIDE_DELAY_MS = 1500;
  _$jscoverage['WoSec.js'][353]++;
  var TIMESLIDER_EVENT_IMAGE_PATH = "media/images/shiney_star_icon.png", CSS_CLASS_TIMESLIDER_EVENT_LINK = "dock-item2", CSS_CLASS_TIMESLIDER_CONTAINER = "dock-container2", CSS_ID_TIMESLIDER_PLAY_BUTTON = "play";
  _$jscoverage['WoSec.js'][358]++;
  var infoboxPrototype;
  _$jscoverage['WoSec.js'][359]++;
  function getInfoboxPrototype() {
    _$jscoverage['WoSec.js'][360]++;
    if ((! infoboxPrototype)) {
      _$jscoverage['WoSec.js'][361]++;
      infoboxPrototype = $(("<div class=\"" + CSS_CLASS_INFOBOX + "\">" + "<div class=\"" + CSS_CLASS_INFOBOX_PARTICIPANT + "\">Testtest</div>" + "<div class=\"" + CSS_CLASS_INFOBOX_DATA + "\">Blablubb</div>" + "</div>")).hide();
    }
    _$jscoverage['WoSec.js'][370]++;
    return infoboxPrototype;
}
  _$jscoverage['WoSec.js'][373]++;
  var databoxInitialized = false;
  _$jscoverage['WoSec.js'][374]++;
  function initDatabox() {
    _$jscoverage['WoSec.js'][375]++;
    databoxInitialized = true;
    _$jscoverage['WoSec.js'][376]++;
    var showDatabox = false;
    _$jscoverage['WoSec.js'][377]++;
    var pinDatabox = false;
    _$jscoverage['WoSec.js'][378]++;
    var initialDataboxPosition = parseInt($(("#" + CSS_ID_DATABOX)).css("left"));
    _$jscoverage['WoSec.js'][379]++;
    var jQueryDatabox = $(("#" + CSS_ID_DATABOX));
    _$jscoverage['WoSec.js'][380]++;
    $(("#" + CSS_ID_DATABOX_HOVER)).hover((function () {
  _$jscoverage['WoSec.js'][381]++;
  if (((! showDatabox) && (! pinDatabox))) {
    _$jscoverage['WoSec.js'][382]++;
    showDatabox = true;
    _$jscoverage['WoSec.js'][383]++;
    jQueryDatabox.animate({left: -10});
    _$jscoverage['WoSec.js'][384]++;
    setTimeout((function () {
  _$jscoverage['WoSec.js'][385]++;
  if ((! pinDatabox)) {
    _$jscoverage['WoSec.js'][386]++;
    jQueryDatabox.animate({left: initialDataboxPosition}, "slow", (function () {
  _$jscoverage['WoSec.js'][387]++;
  showDatabox = false;
}));
  }
}), DATABOX_HIDE_DELAY_MS);
  }
  _$jscoverage['WoSec.js'][392]++;
  return false;
}));
    _$jscoverage['WoSec.js'][394]++;
    jQueryDatabox.click((function () {
  _$jscoverage['WoSec.js'][395]++;
  if ((showDatabox && (! pinDatabox))) {
    _$jscoverage['WoSec.js'][396]++;
    pinDatabox = true;
  }
  else {
    _$jscoverage['WoSec.js'][397]++;
    if (pinDatabox) {
      _$jscoverage['WoSec.js'][398]++;
      pinDatabox = false;
      _$jscoverage['WoSec.js'][399]++;
      $(this).animate({left: initialDataboxPosition}, "slow", (function () {
  _$jscoverage['WoSec.js'][400]++;
  showDatabox = false;
}));
    }
  }
  _$jscoverage['WoSec.js'][403]++;
  return false;
}));
}
  _$jscoverage['WoSec.js'][406]++;
  var dataEntryPrototype;
  _$jscoverage['WoSec.js'][407]++;
  function getDataEntryPrototype() {
    _$jscoverage['WoSec.js'][408]++;
    if ((! dataEntryPrototype)) {
      _$jscoverage['WoSec.js'][409]++;
      dataEntryPrototype = $(("<div class=\"" + CSS_CLASS_DATABOX_ENTRY + "\"></div>"));
    }
    _$jscoverage['WoSec.js'][411]++;
    return dataEntryPrototype;
}
  _$jscoverage['WoSec.js'][413]++;
  var databoxData = [];
  _$jscoverage['WoSec.js'][414]++;
  var databox = {add: (function (data) {
  _$jscoverage['WoSec.js'][416]++;
  if ((! databoxInitialized)) {
    _$jscoverage['WoSec.js'][417]++;
    initDatabox();
  }
  _$jscoverage['WoSec.js'][419]++;
  if ((data && (databoxData.indexOf(data) == -1))) {
    _$jscoverage['WoSec.js'][420]++;
    var dataEntry = getDataEntryPrototype().clone().appendTo(("#" + CSS_ID_DATABOX));
    _$jscoverage['WoSec.js'][421]++;
    dataEntry.text(data);
    _$jscoverage['WoSec.js'][422]++;
    databoxData.push(data);
  }
})};
  _$jscoverage['WoSec.js'][427]++;
  var timeSliderEventPrototype;
  _$jscoverage['WoSec.js'][428]++;
  function getTimeSliderEventPrototype() {
    _$jscoverage['WoSec.js'][429]++;
    if ((! timeSliderEventPrototype)) {
      _$jscoverage['WoSec.js'][430]++;
      timeSliderEventPrototype = $(("<a class=\"" + CSS_CLASS_TIMESLIDER_EVENT_LINK + "\"><span/><img src=\"" + TIMESLIDER_EVENT_IMAGE_PATH + "\" /></a>"));
    }
    _$jscoverage['WoSec.js'][432]++;
    return timeSliderEventPrototype;
}
  _$jscoverage['WoSec.js'][434]++;
  var timeSliderEvents = [];
  _$jscoverage['WoSec.js'][435]++;
  var eventChain;
  _$jscoverage['WoSec.js'][437]++;
  return ({timeSlider: {init: (function () {
  _$jscoverage['WoSec.js'][443]++;
  eventChain = WoSec.eventChain;
  _$jscoverage['WoSec.js'][444]++;
  eventChain.registerObserver(this);
  _$jscoverage['WoSec.js'][445]++;
  $(("#" + CSS_ID_TIMESLIDER_PLAY_BUTTON)).click((function () {
  _$jscoverage['WoSec.js'][446]++;
  eventChain.play();
}));
  _$jscoverage['WoSec.js'][448]++;
  return this;
}), notify: (function () {
  _$jscoverage['WoSec.js'][455]++;
  eventChain.forEach((function (eventCommand, i) {
  _$jscoverage['WoSec.js'][456]++;
  if ((! timeSliderEvents[i])) {
    _$jscoverage['WoSec.js'][457]++;
    var event = getTimeSliderEventPrototype().clone().appendTo(("." + CSS_CLASS_TIMESLIDER_CONTAINER));
    _$jscoverage['WoSec.js'][458]++;
    event.find("span").text(eventCommand.getTimestamp());
    _$jscoverage['WoSec.js'][459]++;
    event.click((function () {
  _$jscoverage['WoSec.js'][460]++;
  var backwards = (i < eventChain.getCurrentPosition());
  _$jscoverage['WoSec.js'][461]++;
  eventChain.seek((function (eventCommand, j) {
  _$jscoverage['WoSec.js'][462]++;
  if ((! backwards)) {
    _$jscoverage['WoSec.js'][463]++;
    eventCommand.execute();
  }
  else {
    _$jscoverage['WoSec.js'][465]++;
    eventCommand.unwind();
  }
  _$jscoverage['WoSec.js'][467]++;
  return (i != j);
}), backwards);
}));
    _$jscoverage['WoSec.js'][470]++;
    timeSliderEvents.push(event);
  }
}));
  _$jscoverage['WoSec.js'][474]++;
  return this;
})}, createInfobox: (function () {
  _$jscoverage['WoSec.js'][482]++;
  var infobox = getInfoboxPrototype().clone().appendTo(("#" + CSS_ID_INFOBOXES));
  _$jscoverage['WoSec.js'][485]++;
  function setParticipant(participant) {
    _$jscoverage['WoSec.js'][486]++;
    infobox.find(("." + CSS_CLASS_INFOBOX_PARTICIPANT)).text(participant.name);
}
  _$jscoverage['WoSec.js'][488]++;
  function setData(data) {
    _$jscoverage['WoSec.js'][489]++;
    infobox.find(("." + CSS_CLASS_INFOBOX_DATA)).text(data);
}
  _$jscoverage['WoSec.js'][492]++;
  return ({bindToSVGRectangle: (function (rectangle) {
  _$jscoverage['WoSec.js'][499]++;
  var position = rectangle.getPosition();
  _$jscoverage['WoSec.js'][500]++;
  infobox.css("top", (position.y + position.height));
  _$jscoverage['WoSec.js'][501]++;
  infobox.css("left", (position.x + position.width));
  _$jscoverage['WoSec.js'][503]++;
  var showInfobox = false;
  _$jscoverage['WoSec.js'][504]++;
  var inside = false;
  _$jscoverage['WoSec.js'][505]++;
  var onClickHandler = (function () {
  _$jscoverage['WoSec.js'][506]++;
  if ((! showInfobox)) {
    _$jscoverage['WoSec.js'][507]++;
    showInfobox = true;
  }
  else {
    _$jscoverage['WoSec.js'][509]++;
    infobox.slideToggle("slow");
    _$jscoverage['WoSec.js'][510]++;
    showInfobox = false;
  }
  _$jscoverage['WoSec.js'][512]++;
  return false;
});
  _$jscoverage['WoSec.js'][514]++;
  var onHoverHandler = (function () {
  _$jscoverage['WoSec.js'][515]++;
  if (((! showInfobox) && (! inside))) {
    _$jscoverage['WoSec.js'][516]++;
    inside = true;
    _$jscoverage['WoSec.js'][517]++;
    infobox.slideToggle("slow");
    _$jscoverage['WoSec.js'][518]++;
    setTimeout((function () {
  _$jscoverage['WoSec.js'][519]++;
  if ((! showInfobox)) {
    _$jscoverage['WoSec.js'][520]++;
    infobox.slideToggle("slow");
  }
  _$jscoverage['WoSec.js'][522]++;
  inside = false;
}), INFOBOX_HIDE_DELAY_MS);
  }
  _$jscoverage['WoSec.js'][525]++;
  return false;
});
  _$jscoverage['WoSec.js'][528]++;
  rectangle.registerOnHover(onHoverHandler);
  _$jscoverage['WoSec.js'][529]++;
  infobox.click(onClickHandler);
  _$jscoverage['WoSec.js'][530]++;
  return this;
}), show: (function () {
  _$jscoverage['WoSec.js'][537]++;
  infobox.show();
  _$jscoverage['WoSec.js'][538]++;
  return this;
}), hide: (function () {
  _$jscoverage['WoSec.js'][545]++;
  infobox.hide();
  _$jscoverage['WoSec.js'][546]++;
  return this;
}), setContent: (function (information) {
  _$jscoverage['WoSec.js'][554]++;
  if (information.participant) {
    _$jscoverage['WoSec.js'][555]++;
    setParticipant(information.participant);
  }
  _$jscoverage['WoSec.js'][557]++;
  if (information.data) {
    _$jscoverage['WoSec.js'][558]++;
    setData(information.data);
    _$jscoverage['WoSec.js'][559]++;
    databox.add(information.data);
  }
  _$jscoverage['WoSec.js'][561]++;
  return this;
})});
})});
})();
_$jscoverage['WoSec.js'][568]++;
(function () {
  _$jscoverage['WoSec.js'][581]++;
  function newTask(infobox, rectangle, correspondingActivityID) {
    _$jscoverage['WoSec.js'][582]++;
    var that = Object.create(WoSec.baseObject);
    _$jscoverage['WoSec.js'][583]++;
    infobox.bindToSVGRectangle(rectangle);
    _$jscoverage['WoSec.js'][589]++;
    that.showInfobox = infobox.show;
    _$jscoverage['WoSec.js'][594]++;
    that.hideInfobox = infobox.hide;
    _$jscoverage['WoSec.js'][599]++;
    that.getCorrespondingTask = (function () {
  _$jscoverage['WoSec.js'][600]++;
  return (((typeof correspondingActivityID) == "string") && (correspondingActivityID != "") && WoSec.workflow.getTaskByID(correspondingActivityID));
});
    _$jscoverage['WoSec.js'][606]++;
    that.highlight = rectangle.highlight;
    _$jscoverage['WoSec.js'][611]++;
    that.setInformation = infobox.setContent;
    _$jscoverage['WoSec.js'][616]++;
    that.getPosition = rectangle.getPosition;
    _$jscoverage['WoSec.js'][622]++;
    that.animateData = (function () {
  _$jscoverage['WoSec.js'][623]++;
  rectangle.showAnimation(this.getCorrespondingTask());
  _$jscoverage['WoSec.js'][624]++;
  return this;
});
    _$jscoverage['WoSec.js'][630]++;
    that.markActive = rectangle.markObtrusive;
    _$jscoverage['WoSec.js'][635]++;
    that.markFinished = rectangle.markUnobtrusive;
    _$jscoverage['WoSec.js'][641]++;
    that.reset = rectangle.reset;
    _$jscoverage['WoSec.js'][643]++;
    return that;
}
  _$jscoverage['WoSec.js'][646]++;
  WoSec.newTask = newTask;
})();
_$jscoverage['WoSec.js'][691]++;
(function () {
  _$jscoverage['WoSec.js'][702]++;
  function newTaskLane(rectangle, activityIDs) {
    _$jscoverage['WoSec.js'][703]++;
    var that = Object.create(WoSec.baseObject);
    _$jscoverage['WoSec.js'][704]++;
    var getTasks = (function () {
  _$jscoverage['WoSec.js'][705]++;
  var tasks = [];
  _$jscoverage['WoSec.js'][706]++;
  activityIDs.forEach((function (activityID, index) {
  _$jscoverage['WoSec.js'][707]++;
  tasks[index] = WoSec.workflow.getTaskByID(activityID);
}));
  _$jscoverage['WoSec.js'][709]++;
  return tasks;
});
    _$jscoverage['WoSec.js'][716]++;
    that.highlight = rectangle.highlight;
    _$jscoverage['WoSec.js'][722]++;
    that.setInformation = (function (information) {
  _$jscoverage['WoSec.js'][723]++;
  getTasks().forEach((function (task) {
  _$jscoverage['WoSec.js'][724]++;
  task.setInformation(information);
}));
  _$jscoverage['WoSec.js'][726]++;
  return this;
});
    _$jscoverage['WoSec.js'][728]++;
    return that;
}
  _$jscoverage['WoSec.js'][731]++;
  WoSec.newTaskLane = newTaskLane;
})();
_$jscoverage['WoSec.js'][740]++;
WoSec.workflow = (function () {
  _$jscoverage['WoSec.js'][742]++;
  var newTask = WoSec.newTask;
  _$jscoverage['WoSec.js'][743]++;
  var newTaskLane = WoSec.newTaskLane;
  _$jscoverage['WoSec.js'][744]++;
  var htmlRenderer = WoSec.htmlRenderer;
  _$jscoverage['WoSec.js'][745]++;
  var svgUtility = WoSec.svgUtility;
  _$jscoverage['WoSec.js'][747]++;
  var thisInstanceID;
  _$jscoverage['WoSec.js'][748]++;
  var taskRepository = {};
  _$jscoverage['WoSec.js'][749]++;
  var taskLaneRepository = {};
  _$jscoverage['WoSec.js'][750]++;
  var correspondingActivities = {};
  _$jscoverage['WoSec.js'][751]++;
  var activitiesInALane = {};
  _$jscoverage['WoSec.js'][753]++;
  function createTask(activityID) {
    _$jscoverage['WoSec.js'][754]++;
    if (((typeof activityID) != "string")) {
      _$jscoverage['WoSec.js'][755]++;
      throw new TypeError("The given ID is not a String");
    }
    _$jscoverage['WoSec.js'][757]++;
    return newTask(htmlRenderer.createInfobox(), svgUtility.getTaskRectangle(activityID), correspondingActivities[activityID]);
}
  _$jscoverage['WoSec.js'][759]++;
  function createTaskLane(activityGroupID) {
    _$jscoverage['WoSec.js'][760]++;
    if (((typeof activityGroupID) != "string")) {
      _$jscoverage['WoSec.js'][761]++;
      throw new TypeError("The given groupID is not a String");
    }
    _$jscoverage['WoSec.js'][763]++;
    if ((! activitiesInALane[activityGroupID])) {
      _$jscoverage['WoSec.js'][764]++;
      throw new Error("Unknown activityGroupID");
    }
    _$jscoverage['WoSec.js'][766]++;
    return newTaskLane(svgUtility.getTaskLaneRectangle(activityGroupID), activitiesInALane[activityGroupID]);
}
  _$jscoverage['WoSec.js'][768]++;
  return ({init: (function (instanceID, correspondingActivitiesIDs, activityIDsForALane) {
  _$jscoverage['WoSec.js'][776]++;
  thisInstanceID = instanceID;
  _$jscoverage['WoSec.js'][777]++;
  correspondingActivities = correspondingActivitiesIDs;
  _$jscoverage['WoSec.js'][778]++;
  activitiesInALane = activityIDsForALane;
}), getInstanceID: (function () {
  _$jscoverage['WoSec.js'][785]++;
  return thisInstanceID;
}), getTaskByID: (function (activityID) {
  _$jscoverage['WoSec.js'][793]++;
  if ((! taskRepository[activityID])) {
    _$jscoverage['WoSec.js'][794]++;
    taskRepository[activityID] = createTask(activityID);
  }
  _$jscoverage['WoSec.js'][796]++;
  return taskRepository[activityID];
}), getTaskLaneByID: (function (activityGroupID) {
  _$jscoverage['WoSec.js'][804]++;
  if ((! taskLaneRepository[activityGroupID])) {
    _$jscoverage['WoSec.js'][805]++;
    taskLaneRepository[activityGroupID] = createTaskLane(activityGroupID);
  }
  _$jscoverage['WoSec.js'][807]++;
  return taskLaneRepository[activityGroupID];
})});
})();
_$jscoverage['WoSec.js'][812]++;
(function () {
  _$jscoverage['WoSec.js'][814]++;
  var workflow = WoSec.workflow;
  _$jscoverage['WoSec.js'][823]++;
  function EventCommand(timestamp) {
    _$jscoverage['WoSec.js'][824]++;
    if (((typeof timestamp) != "number")) {
      _$jscoverage['WoSec.js'][825]++;
      throw new Error(("Timestamp [" + timestamp + "] is not a number"));
    }
    _$jscoverage['WoSec.js'][827]++;
    this.timestamp = timestamp;
}
  _$jscoverage['WoSec.js'][829]++;
  EventCommand.prototype = Object.create(WoSec.baseObject);
  _$jscoverage['WoSec.js'][834]++;
  EventCommand.prototype.execute = (function () {
  _$jscoverage['WoSec.js'][835]++;
  return this;
});
  _$jscoverage['WoSec.js'][841]++;
  EventCommand.prototype.animate = (function () {
  _$jscoverage['WoSec.js'][842]++;
  return this;
});
  _$jscoverage['WoSec.js'][847]++;
  EventCommand.prototype.unwind = (function () {
  _$jscoverage['WoSec.js'][848]++;
  return this;
});
  _$jscoverage['WoSec.js'][854]++;
  EventCommand.prototype.getTimestamp = (function () {
  _$jscoverage['WoSec.js'][855]++;
  return this.timestamp;
});
  _$jscoverage['WoSec.js'][857]++;
  EventCommand.create = (function (event) {
  _$jscoverage['WoSec.js'][858]++;
  return new EventCommand(event.timestamp);
});
  _$jscoverage['WoSec.js'][870]++;
  function StateChangingEvent() {
}
  _$jscoverage['WoSec.js'][871]++;
  WoSec.inherit(StateChangingEvent, EventCommand);
  _$jscoverage['WoSec.js'][880]++;
  function HighlightingEvent(task, timestamp) {
    _$jscoverage['WoSec.js'][881]++;
    EventCommand.call(this, timestamp);
    _$jscoverage['WoSec.js'][882]++;
    this.task = task;
}
  _$jscoverage['WoSec.js'][884]++;
  WoSec.inherit(HighlightingEvent, StateChangingEvent);
  _$jscoverage['WoSec.js'][888]++;
  HighlightingEvent.prototype.execute = (function () {
  _$jscoverage['WoSec.js'][889]++;
  this.task.markActive();
  _$jscoverage['WoSec.js'][890]++;
  (this.task.getCorrespondingTask() && this.task.getCorrespondingTask().markActive());
  _$jscoverage['WoSec.js'][891]++;
  return this;
});
  _$jscoverage['WoSec.js'][893]++;
  HighlightingEvent.prototype.unwind = (function () {
  _$jscoverage['WoSec.js'][894]++;
  this.task.reset();
  _$jscoverage['WoSec.js'][895]++;
  (this.task.getCorrespondingTask() && this.task.getCorrespondingTask().reset());
  _$jscoverage['WoSec.js'][896]++;
  return this;
});
  _$jscoverage['WoSec.js'][901]++;
  HighlightingEvent.prototype.animate = (function () {
  _$jscoverage['WoSec.js'][902]++;
  this.task.highlight();
  _$jscoverage['WoSec.js'][903]++;
  (this.task.getCorrespondingTask() && this.task.getCorrespondingTask().highlight());
  _$jscoverage['WoSec.js'][904]++;
  return this;
});
  _$jscoverage['WoSec.js'][912]++;
  HighlightingEvent.create = (function (event) {
  _$jscoverage['WoSec.js'][913]++;
  return new HighlightingEvent(workflow.getTaskByID(event.activityID), event.timestamp);
});
  _$jscoverage['WoSec.js'][924]++;
  function MarkFinishedEvent(task, information, timestamp) {
    _$jscoverage['WoSec.js'][925]++;
    EventCommand.call(this, timestamp);
    _$jscoverage['WoSec.js'][926]++;
    this.task = task;
    _$jscoverage['WoSec.js'][927]++;
    this.information = (information || {});
}
  _$jscoverage['WoSec.js'][929]++;
  WoSec.inherit(MarkFinishedEvent, StateChangingEvent);
  _$jscoverage['WoSec.js'][933]++;
  MarkFinishedEvent.prototype.execute = (function () {
  _$jscoverage['WoSec.js'][934]++;
  this.task.markFinished();
  _$jscoverage['WoSec.js'][935]++;
  (this.task.getCorrespondingTask() && this.task.getCorrespondingTask().markFinished());
  _$jscoverage['WoSec.js'][936]++;
  this.task.setInformation(this.information);
  _$jscoverage['WoSec.js'][937]++;
  (this.task.getCorrespondingTask() && this.task.getCorrespondingTask().setInformation(this.information));
  _$jscoverage['WoSec.js'][938]++;
  return this;
});
  _$jscoverage['WoSec.js'][940]++;
  MarkFinishedEvent.prototype.unwind = (function () {
  _$jscoverage['WoSec.js'][941]++;
  this.task.markActive();
  _$jscoverage['WoSec.js'][942]++;
  (this.task.getCorrespondingTask() && this.task.getCorrespondingTask().markActive());
  _$jscoverage['WoSec.js'][943]++;
  return this;
});
  _$jscoverage['WoSec.js'][954]++;
  MarkFinishedEvent.create = (function (event) {
  _$jscoverage['WoSec.js'][955]++;
  return new MarkFinishedEvent(workflow.getTaskByID(event.activityID), event.information, event.timestamp);
});
  _$jscoverage['WoSec.js'][966]++;
  function TransferingDataEvent(task, information, timestamp) {
    _$jscoverage['WoSec.js'][967]++;
    EventCommand.call(this, timestamp);
    _$jscoverage['WoSec.js'][968]++;
    this.task = task;
    _$jscoverage['WoSec.js'][969]++;
    this.information = (information || {});
}
  _$jscoverage['WoSec.js'][971]++;
  WoSec.inherit(TransferingDataEvent, EventCommand);
  _$jscoverage['WoSec.js'][975]++;
  TransferingDataEvent.prototype.execute = (function () {
  _$jscoverage['WoSec.js'][976]++;
  this.task.setInformation(this.information);
  _$jscoverage['WoSec.js'][977]++;
  return this;
});
  _$jscoverage['WoSec.js'][983]++;
  TransferingDataEvent.prototype.animate = (function () {
  _$jscoverage['WoSec.js'][984]++;
  this.task.animateData();
  _$jscoverage['WoSec.js'][985]++;
  return this;
});
  _$jscoverage['WoSec.js'][995]++;
  TransferingDataEvent.create = (function (event) {
  _$jscoverage['WoSec.js'][996]++;
  return new TransferingDataEvent(workflow.getTaskByID(event.activityID), event.information, event.timestamp);
});
  _$jscoverage['WoSec.js'][1007]++;
  function SpecifyingParticipantEvent(taskLane, information, timestamp) {
    _$jscoverage['WoSec.js'][1008]++;
    EventCommand.call(this, timestamp);
    _$jscoverage['WoSec.js'][1009]++;
    this.taskLane = taskLane;
    _$jscoverage['WoSec.js'][1010]++;
    this.information = (information || {});
}
  _$jscoverage['WoSec.js'][1012]++;
  WoSec.inherit(SpecifyingParticipantEvent, EventCommand);
  _$jscoverage['WoSec.js'][1016]++;
  SpecifyingParticipantEvent.prototype.execute = (function () {
  _$jscoverage['WoSec.js'][1017]++;
  this.taskLane.setInformation(this.information);
  _$jscoverage['WoSec.js'][1018]++;
  return this;
});
  _$jscoverage['WoSec.js'][1024]++;
  SpecifyingParticipantEvent.prototype.animate = (function () {
  _$jscoverage['WoSec.js'][1025]++;
  this.taskLane.highlight();
  _$jscoverage['WoSec.js'][1026]++;
  return this;
});
  _$jscoverage['WoSec.js'][1036]++;
  SpecifyingParticipantEvent.create = (function (event) {
  _$jscoverage['WoSec.js'][1037]++;
  return new SpecifyingParticipantEvent(workflow.getTaskLaneByID(event.activityGroupID), event.information, event.timestamp);
});
  _$jscoverage['WoSec.js'][1041]++;
  EventCommand.EventCommand = EventCommand;
  _$jscoverage['WoSec.js'][1042]++;
  EventCommand.StateChanging = StateChangingEvent;
  _$jscoverage['WoSec.js'][1043]++;
  EventCommand.Highlighting = HighlightingEvent;
  _$jscoverage['WoSec.js'][1044]++;
  EventCommand.MarkFinished = MarkFinishedEvent;
  _$jscoverage['WoSec.js'][1045]++;
  EventCommand.TransferingData = TransferingDataEvent;
  _$jscoverage['WoSec.js'][1046]++;
  EventCommand.SpecifyingParticipant = SpecifyingParticipantEvent;
  _$jscoverage['WoSec.js'][1048]++;
  WoSec.EventCommand = EventCommand;
})();
_$jscoverage['WoSec.js'][1058]++;
WoSec.eventChain = (function () {
  _$jscoverage['WoSec.js'][1059]++;
  var PLAY_TIME_BETWEEN_EVENTS_MS = 750;
  _$jscoverage['WoSec.js'][1060]++;
  var EventCommand = WoSec.EventCommand;
  _$jscoverage['WoSec.js'][1062]++;
  var events = [];
  _$jscoverage['WoSec.js'][1063]++;
  var currentPosition = 0;
  _$jscoverage['WoSec.js'][1064]++;
  var observers = [];
  _$jscoverage['WoSec.js'][1066]++;
  return ({registerObserver: (function (observer) {
  _$jscoverage['WoSec.js'][1073]++;
  if (((typeof observer.notify) !== "function")) {
    _$jscoverage['WoSec.js'][1074]++;
    throw new Error("Observer has to support notify()-Method");
  }
  _$jscoverage['WoSec.js'][1076]++;
  observers.push(observer);
  _$jscoverage['WoSec.js'][1077]++;
  return this;
}), getCurrentPosition: (function () {
  _$jscoverage['WoSec.js'][1084]++;
  return currentPosition;
}), add: (function (data) {
  _$jscoverage['WoSec.js'][1093]++;
  data = (data || []);
  _$jscoverage['WoSec.js'][1094]++;
  data.forEach((function (event) {
  _$jscoverage['WoSec.js'][1095]++;
  if ((! EventCommand[event.eventCommand])) {
    _$jscoverage['WoSec.js'][1096]++;
    throw new Error(("Unknown EventCommand: " + event.eventCommand));
  }
  _$jscoverage['WoSec.js'][1098]++;
  events.push(EventCommand[event.eventCommand].create(event));
}));
  _$jscoverage['WoSec.js'][1100]++;
  observers.forEach((function (observer) {
  _$jscoverage['WoSec.js'][1101]++;
  observer.notify();
}));
  _$jscoverage['WoSec.js'][1103]++;
  return this;
}), seek: (function (strategy, backwards) {
  _$jscoverage['WoSec.js'][1115]++;
  var direction = (backwards? -1: 1);
  _$jscoverage['WoSec.js'][1116]++;
  var i = currentPosition;
  _$jscoverage['WoSec.js'][1117]++;
  while (((0 <= i) && (i < events.length))) {
    _$jscoverage['WoSec.js'][1118]++;
    currentPosition = i;
    _$jscoverage['WoSec.js'][1119]++;
    observers.forEach((function (observer) {
  _$jscoverage['WoSec.js'][1120]++;
  observer.notify();
}));
    _$jscoverage['WoSec.js'][1122]++;
    if ((strategy(events[i], i) === false)) {
      _$jscoverage['WoSec.js'][1123]++;
      break;
    }
    _$jscoverage['WoSec.js'][1125]++;
    i += direction;
}
  _$jscoverage['WoSec.js'][1127]++;
  return this;
}), forEach: events.forEach.bind(events), play: (function () {
  _$jscoverage['WoSec.js'][1140]++;
  var after = 0;
  _$jscoverage['WoSec.js'][1141]++;
  return this.seek((function (eventCommand) {
  _$jscoverage['WoSec.js'][1142]++;
  eventCommand.later(after, "execute").later(after, "animate");
  _$jscoverage['WoSec.js'][1144]++;
  after += PLAY_TIME_BETWEEN_EVENTS_MS;
}));
  _$jscoverage['WoSec.js'][1146]++;
  (currentPosition++);
  _$jscoverage['WoSec.js'][1147]++;
  return this;
}), last: (function () {
  _$jscoverage['WoSec.js'][1156]++;
  if (events[(events.length - 1)]) {
    _$jscoverage['WoSec.js'][1157]++;
    return events[(events.length - 1)];
  }
  else {
    _$jscoverage['WoSec.js'][1159]++;
    return new EventCommand(0);
  }
})});
})();
_$jscoverage['WoSec.js'][1169]++;
WoSec.ajaxUpdater = (function () {
  _$jscoverage['WoSec.js'][1170]++;
  var DELAY_BETWEEN_POLLS = 5000;
  _$jscoverage['WoSec.js'][1171]++;
  var POLL_URL = "UpdateController?type=Event";
  _$jscoverage['WoSec.js'][1173]++;
  var $ = jQuery;
  _$jscoverage['WoSec.js'][1174]++;
  var eventChain = WoSec.eventChain;
  _$jscoverage['WoSec.js'][1175]++;
  var workflow = WoSec.workflow;
  _$jscoverage['WoSec.js'][1177]++;
  return ({init: (function loop(lastVisitedTimestamp) {
  _$jscoverage['WoSec.js'][1182]++;
  lastVisitedTimestamp = (lastVisitedTimestamp || 0);
  _$jscoverage['WoSec.js'][1183]++;
  $.getJSON(POLL_URL, {since: (eventChain.last().getTimestamp() + 1), instance: workflow.getInstanceID()}, (function (data) {
  _$jscoverage['WoSec.js'][1184]++;
  eventChain.add(data).seek((function (eventCommand) {
  _$jscoverage['WoSec.js'][1185]++;
  return (eventCommand.getTimestamp() <= lastVisitedTimestamp);
})).play();
}));
  _$jscoverage['WoSec.js'][1188]++;
  setTimeout(loop, DELAY_BETWEEN_POLLS);
})});
})();
